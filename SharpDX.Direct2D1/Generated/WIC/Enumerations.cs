// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.WIC namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:06 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.WIC {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>Specifies the identifiers of the metadata items in an 8BIM IPTC digest metadata block.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMIptcDigestProperties']/*"/>	
    /// <msdn-id>ee719802</msdn-id>	
    /// <unmanaged>WIC8BIMIptcDigestProperties</unmanaged>	
    /// <unmanaged-short>WIC8BIMIptcDigestProperties</unmanaged-short>	
    public enum BIMIptcDigestProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] A name that identifies the 8BIM block.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMIptcDigestPString']/*"/>	
        /// <msdn-id>ee719802</msdn-id>	
        /// <unmanaged>WIC8BIMIptcDigestPString</unmanaged>	
        /// <unmanaged-short>WIC8BIMIptcDigestPString</unmanaged-short>	
        PString = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_BLOB] The embedded IPTC digest value.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMIptcDigestIptcDigest']/*"/>	
        /// <msdn-id>ee719802</msdn-id>	
        /// <unmanaged>WIC8BIMIptcDigestIptcDigest</unmanaged>	
        /// <unmanaged-short>WIC8BIMIptcDigestIptcDigest</unmanaged-short>	
        IptcDigest = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the identifiers of the metadata items in an 8BIM IPTC block.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMIptcProperties']/*"/>	
    /// <msdn-id>ee719803</msdn-id>	
    /// <unmanaged>WIC8BIMIptcProperties</unmanaged>	
    /// <unmanaged-short>WIC8BIMIptcProperties</unmanaged-short>	
    public enum BIMIptcProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] A name that identifies the 8BIM block.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMIptcPString']/*"/>	
        /// <msdn-id>ee719803</msdn-id>	
        /// <unmanaged>WIC8BIMIptcPString</unmanaged>	
        /// <unmanaged-short>WIC8BIMIptcPString</unmanaged-short>	
        PString = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>[VT_UNKNOWN] The IPTC block embedded in this 8BIM IPTC block.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMIptcEmbeddedIPTC']/*"/>	
        /// <msdn-id>ee719803</msdn-id>	
        /// <unmanaged>WIC8BIMIptcEmbeddedIPTC</unmanaged>	
        /// <unmanaged-short>WIC8BIMIptcEmbeddedIPTC</unmanaged-short>	
        EmbeddedIPTC = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the identifiers of the metadata items in an 8BIMResolutionInfo block.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoProperties']/*"/>	
    /// <msdn-id>ee719804</msdn-id>	
    /// <unmanaged>WIC8BIMResolutionInfoProperties</unmanaged>	
    /// <unmanaged-short>WIC8BIMResolutionInfoProperties</unmanaged-short>	
    public enum BIMResolutionInfoProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] A name that identifies the 8BIM block.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoPString']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoPString</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoPString</unmanaged-short>	
        PString = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] The horizontal resolution of the image.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoHResolution']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoHResolution</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoHResolution</unmanaged-short>	
        HResolution = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] The units that the horizontal resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoHResolutionUnit']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoHResolutionUnit</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoHResolutionUnit</unmanaged-short>	
        HResolutionUnit = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] The units that the image width is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoWidthUnit']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoWidthUnit</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoWidthUnit</unmanaged-short>	
        WidthUnit = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] The vertical resolution of the image.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoVResolution']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoVResolution</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoVResolution</unmanaged-short>	
        VResolution = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] The units that the vertical resolution is specified in; a 1 indicates pixels per inch and a 2 indicates pixels per centimeter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoVResolutionUnit']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoVResolutionUnit</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoVResolutionUnit</unmanaged-short>	
        VResolutionUnit = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] The units that the image height is specified in; a 1 indicates inches, a 2 indicates centimeters, a 3 indicates points, a 4 specifies picas, and a 5 specifies columns.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WIC8BIMResolutionInfoHeightUnit']/*"/>	
        /// <msdn-id>ee719804</msdn-id>	
        /// <unmanaged>WIC8BIMResolutionInfoHeightUnit</unmanaged>	
        /// <unmanaged-short>WIC8BIMResolutionInfoHeightUnit</unmanaged-short>	
        HeightUnit = unchecked((int)7),			
    }
    
    /// <summary>	
    /// <p>Specifies the desired alpha channel usage.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapAlphaChannelOption']/*"/>	
    /// <msdn-id>ee719805</msdn-id>	
    /// <unmanaged>WICBitmapAlphaChannelOption</unmanaged>	
    /// <unmanaged-short>WICBitmapAlphaChannelOption</unmanaged-short>	
    public enum BitmapAlphaChannelOption : int {	
        
        /// <summary>	
        /// <dd> <p>Use alpha channel.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapUseAlpha']/*"/>	
        /// <msdn-id>ee719805</msdn-id>	
        /// <unmanaged>WICBitmapUseAlpha</unmanaged>	
        /// <unmanaged-short>WICBitmapUseAlpha</unmanaged-short>	
        UseAlpha = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Use a pre-multiplied alpha channel.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapUsePremultipliedAlpha']/*"/>	
        /// <msdn-id>ee719805</msdn-id>	
        /// <unmanaged>WICBitmapUsePremultipliedAlpha</unmanaged>	
        /// <unmanaged-short>WICBitmapUsePremultipliedAlpha</unmanaged-short>	
        UsePremultipliedAlpha = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Ignore alpha channel.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapIgnoreAlpha']/*"/>	
        /// <msdn-id>ee719805</msdn-id>	
        /// <unmanaged>WICBitmapIgnoreAlpha</unmanaged>	
        /// <unmanaged-short>WICBitmapIgnoreAlpha</unmanaged-short>	
        IgnoreAlpha = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the desired cache usage.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The <strong>CreateBitmap</strong> of the <strong><see cref="SharpDX.WIC.ImagingFactory"/></strong> interface does not support <see cref="SharpDX.WIC.BitmapCreateCacheOption.NoCache"/> when the <em>pixelFormat</em> is a native pixel format provided by Windows Imaging Component (WIC).</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapCreateCacheOption']/*"/>	
    /// <msdn-id>ee719806</msdn-id>	
    /// <unmanaged>WICBitmapCreateCacheOption</unmanaged>	
    /// <unmanaged-short>WICBitmapCreateCacheOption</unmanaged-short>	
    public enum BitmapCreateCacheOption : int {	
        
        /// <summary>	
        /// <dd> <p>Do not cache the bitmap.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapNoCache']/*"/>	
        /// <msdn-id>ee719806</msdn-id>	
        /// <unmanaged>WICBitmapNoCache</unmanaged>	
        /// <unmanaged-short>WICBitmapNoCache</unmanaged-short>	
        NoCache = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Cache the bitmap when needed.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapCacheOnDemand']/*"/>	
        /// <msdn-id>ee719806</msdn-id>	
        /// <unmanaged>WICBitmapCacheOnDemand</unmanaged>	
        /// <unmanaged-short>WICBitmapCacheOnDemand</unmanaged-short>	
        CacheOnDemand = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Cache the bitmap at initialization.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapCacheOnLoad']/*"/>	
        /// <msdn-id>ee719806</msdn-id>	
        /// <unmanaged>WICBitmapCacheOnLoad</unmanaged>	
        /// <unmanaged-short>WICBitmapCacheOnLoad</unmanaged-short>	
        CacheOnLoad = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the capabilities of the decoder.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDecoderCapabilities']/*"/>	
    /// <msdn-id>ee719807</msdn-id>	
    /// <unmanaged>WICBitmapDecoderCapabilities</unmanaged>	
    /// <unmanaged-short>WICBitmapDecoderCapabilities</unmanaged-short>	
    [Flags]
    public enum BitmapDecoderCapabilities : int {	
        
        /// <summary>	
        /// <dd> <p>Decoder recognizes the image was encoded with an encoder produced by the same vendor. </p> <p></p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDecoderCapabilitySameEncoder']/*"/>	
        /// <msdn-id>ee719807</msdn-id>	
        /// <unmanaged>WICBitmapDecoderCapabilitySameEncoder</unmanaged>	
        /// <unmanaged-short>WICBitmapDecoderCapabilitySameEncoder</unmanaged-short>	
        SameEncoder = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Decoder can decode all the images within an image container.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDecoderCapabilityCanDecodeAllImages']/*"/>	
        /// <msdn-id>ee719807</msdn-id>	
        /// <unmanaged>WICBitmapDecoderCapabilityCanDecodeAllImages</unmanaged>	
        /// <unmanaged-short>WICBitmapDecoderCapabilityCanDecodeAllImages</unmanaged-short>	
        CanDecodeAllImages = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Decoder can decode some of the images within an image container.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDecoderCapabilityCanDecodeSomeImages']/*"/>	
        /// <msdn-id>ee719807</msdn-id>	
        /// <unmanaged>WICBitmapDecoderCapabilityCanDecodeSomeImages</unmanaged>	
        /// <unmanaged-short>WICBitmapDecoderCapabilityCanDecodeSomeImages</unmanaged-short>	
        CanDecodeSomeImages = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Decoder can enumerate the metadata blocks within a container format.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDecoderCapabilityCanEnumerateMetadata']/*"/>	
        /// <msdn-id>ee719807</msdn-id>	
        /// <unmanaged>WICBitmapDecoderCapabilityCanEnumerateMetadata</unmanaged>	
        /// <unmanaged-short>WICBitmapDecoderCapabilityCanEnumerateMetadata</unmanaged-short>	
        CanEnumerateMetadata = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Decoder can find and decode a thumbnail.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDecoderCapabilityCanDecodeThumbnail']/*"/>	
        /// <msdn-id>ee719807</msdn-id>	
        /// <unmanaged>WICBitmapDecoderCapabilityCanDecodeThumbnail</unmanaged>	
        /// <unmanaged-short>WICBitmapDecoderCapabilityCanDecodeThumbnail</unmanaged-short>	
        CanDecodeThumbnail = unchecked((int)16),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='']/*"/>	
        /// <unmanaged>None</unmanaged>	
        /// <unmanaged-short>None</unmanaged-short>	
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// <p>Specifies the type of dither algorithm to apply when converting between image formats.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherType']/*"/>	
    /// <msdn-id>ee719808</msdn-id>	
    /// <unmanaged>WICBitmapDitherType</unmanaged>	
    /// <unmanaged-short>WICBitmapDitherType</unmanaged-short>	
    public enum BitmapDitherType : int {	
        
        /// <summary>	
        /// <dd> <p>A solid color algorithm without dither.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeNone']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeNone</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeNone</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>A solid color algorithm without dither.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeSolid']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeSolid</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeSolid</unmanaged-short>	
        Solid = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>A 4x4 ordered dither algorithm. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeOrdered4x4']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeOrdered4x4</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeOrdered4x4</unmanaged-short>	
        Ordered4x4 = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>An 8x8 ordered dither algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeOrdered8x8']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeOrdered8x8</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeOrdered8x8</unmanaged-short>	
        Ordered8x8 = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A 16x16 ordered dither algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeOrdered16x16']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeOrdered16x16</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeOrdered16x16</unmanaged-short>	
        Ordered16x16 = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>A 4x4 spiral dither algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeSpiral4x4']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeSpiral4x4</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeSpiral4x4</unmanaged-short>	
        Spiral4x4 = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>An 8x8 spiral dither algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeSpiral8x8']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeSpiral8x8</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeSpiral8x8</unmanaged-short>	
        Spiral8x8 = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>A 4x4 dual spiral dither algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeDualSpiral4x4']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeDualSpiral4x4</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeDualSpiral4x4</unmanaged-short>	
        DualSpiral4x4 = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>An 8x8 dual spiral dither algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeDualSpiral8x8']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeDualSpiral8x8</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeDualSpiral8x8</unmanaged-short>	
        DualSpiral8x8 = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>An error diffusion algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapDitherTypeErrorDiffusion']/*"/>	
        /// <msdn-id>ee719808</msdn-id>	
        /// <unmanaged>WICBitmapDitherTypeErrorDiffusion</unmanaged>	
        /// <unmanaged-short>WICBitmapDitherTypeErrorDiffusion</unmanaged-short>	
        ErrorDiffusion = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>Specifies the cache options available for an encoder.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapEncoderCacheOption']/*"/>	
    /// <msdn-id>ee719809</msdn-id>	
    /// <unmanaged>WICBitmapEncoderCacheOption</unmanaged>	
    /// <unmanaged-short>WICBitmapEncoderCacheOption</unmanaged-short>	
    internal enum BitmapEncoderCacheOption : int {	
        
        /// <summary>	
        /// <dd> <p>The encoder is cached in memory. This option is not supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapEncoderCacheInMemory']/*"/>	
        /// <msdn-id>ee719809</msdn-id>	
        /// <unmanaged>WICBitmapEncoderCacheInMemory</unmanaged>	
        /// <unmanaged-short>WICBitmapEncoderCacheInMemory</unmanaged-short>	
        InMemory = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The encoder is cached to a temporary file. This option is not supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapEncoderCacheTempFile']/*"/>	
        /// <msdn-id>ee719809</msdn-id>	
        /// <unmanaged>WICBitmapEncoderCacheTempFile</unmanaged>	
        /// <unmanaged-short>WICBitmapEncoderCacheTempFile</unmanaged-short>	
        TempFile = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The encoder is not cached.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapEncoderNoCache']/*"/>	
        /// <msdn-id>ee719809</msdn-id>	
        /// <unmanaged>WICBitmapEncoderNoCache</unmanaged>	
        /// <unmanaged-short>WICBitmapEncoderNoCache</unmanaged-short>	
        NoCache = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the sampling or filtering mode to use when scaling an image.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapInterpolationMode']/*"/>	
    /// <msdn-id>ee719810</msdn-id>	
    /// <unmanaged>WICBitmapInterpolationMode</unmanaged>	
    /// <unmanaged-short>WICBitmapInterpolationMode</unmanaged-short>	
    public enum BitmapInterpolationMode : int {	
        
        /// <summary>	
        /// <dd> <p>A nearest neighbor interpolation algorithm. Also known as nearest pixel or point interpolation. </p> <p>The output pixel is assigned the value of the pixel that the point falls within. No other pixels are considered.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapInterpolationModeNearestNeighbor']/*"/>	
        /// <msdn-id>ee719810</msdn-id>	
        /// <unmanaged>WICBitmapInterpolationModeNearestNeighbor</unmanaged>	
        /// <unmanaged-short>WICBitmapInterpolationModeNearestNeighbor</unmanaged-short>	
        NearestNeighbor = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>A bilinear interpolation algorithm. </p> <p>The output pixel values are computed as a weighted average of the nearest four pixels in a 2x2 grid.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapInterpolationModeLinear']/*"/>	
        /// <msdn-id>ee719810</msdn-id>	
        /// <unmanaged>WICBitmapInterpolationModeLinear</unmanaged>	
        /// <unmanaged-short>WICBitmapInterpolationModeLinear</unmanaged-short>	
        Linear = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A bicubic interpolation algorithm. </p> <p>Destination pixel values are computed as a weighted average of the nearest sixteen pixels in a 4x4 grid. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapInterpolationModeCubic']/*"/>	
        /// <msdn-id>ee719810</msdn-id>	
        /// <unmanaged>WICBitmapInterpolationModeCubic</unmanaged>	
        /// <unmanaged-short>WICBitmapInterpolationModeCubic</unmanaged-short>	
        Cubic = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A Fant resampling algorithm. </p> <p>Destination pixel values are computed as a weighted average of the all the pixels that map to the new pixel.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapInterpolationModeFant']/*"/>	
        /// <msdn-id>ee719810</msdn-id>	
        /// <unmanaged>WICBitmapInterpolationModeFant</unmanaged>	
        /// <unmanaged-short>WICBitmapInterpolationModeFant</unmanaged-short>	
        Fant = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapInterpolationModeHighQualityCubic']/*"/>	
        /// <msdn-id>ee719810</msdn-id>	
        /// <unmanaged>WICBitmapInterpolationModeHighQualityCubic</unmanaged>	
        /// <unmanaged-short>WICBitmapInterpolationModeHighQualityCubic</unmanaged-short>	
        HighQualityCubic = unchecked((int)4),			
    }
    
    /// <summary>	
    /// <p>Specifies access to an <strong><see cref="SharpDX.WIC.Bitmap"/></strong>.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapLockFlags']/*"/>	
    /// <msdn-id>ee719811</msdn-id>	
    /// <unmanaged>WICBitmapLockFlags</unmanaged>	
    /// <unmanaged-short>WICBitmapLockFlags</unmanaged-short>	
    public enum BitmapLockFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapLockRead']/*"/>	
        /// <msdn-id>ee719811</msdn-id>	
        /// <unmanaged>WICBitmapLockRead</unmanaged>	
        /// <unmanaged-short>WICBitmapLockRead</unmanaged-short>	
        Read = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapLockWrite']/*"/>	
        /// <msdn-id>ee719811</msdn-id>	
        /// <unmanaged>WICBitmapLockWrite</unmanaged>	
        /// <unmanaged-short>WICBitmapLockWrite</unmanaged-short>	
        Write = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the type of palette used for an indexed image format.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteType']/*"/>	
    /// <msdn-id>ee719812</msdn-id>	
    /// <unmanaged>WICBitmapPaletteType</unmanaged>	
    /// <unmanaged-short>WICBitmapPaletteType</unmanaged-short>	
    public enum BitmapPaletteType : int {	
        
        /// <summary>	
        /// <dd> <p>An arbitrary custom palette provided by caller.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeCustom']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeCustom</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeCustom</unmanaged-short>	
        Custom = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>An optimal palette generated using a median-cut algorithm. Derived from the colors in an image.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeMedianCut']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeMedianCut</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeMedianCut</unmanaged-short>	
        MedianCut = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A black and white palette.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedBW']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedBW</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedBW</unmanaged-short>	
        FixedBW = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A palette that has its 8-color on-off primaries and the 16 system colors added. With duplicates removed, 16 colors are available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone8']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone8</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone8</unmanaged-short>	
        FixedHalftone8 = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 3 intensity levels of each primary: 27-color on-off primaries and the 16 system colors added. With duplicates removed, 35 colors are available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone27']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone27</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone27</unmanaged-short>	
        FixedHalftone27 = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 4 intensity levels of each primary: 64-color on-off primaries and the 16 system colors added. With duplicates removed, 72 colors are available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone64']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone64</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone64</unmanaged-short>	
        FixedHalftone64 = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 5 intensity levels of each primary: 125-color on-off primaries and the 16 system colors added. With duplicates removed, 133 colors are available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone125']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone125</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone125</unmanaged-short>	
        FixedHalftone125 = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <strong>WICBitmapPaletteFixedHalftoneWeb</strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone216']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone216</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone216</unmanaged-short>	
        FixedHalftone216 = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 6 intensity levels of each primary: 216-color on-off primaries and the 16 system colors added. With duplicates removed, 224 colors are available. This is the same as <strong><see cref="SharpDX.WIC.BitmapPaletteType.FixedHalftone216"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedWebPalette']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedWebPalette</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedWebPalette</unmanaged-short>	
        FixedWebPalette = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>A palette that has its 252-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone252']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone252</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone252</unmanaged-short>	
        FixedHalftone252 = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>A palette that has its 256-color on-off primaries and the 16 system colors added. With duplicates removed, 256 colors are available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedHalftone256']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedHalftone256</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedHalftone256</unmanaged-short>	
        FixedHalftone256 = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 4 shades of gray.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedGray4']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedGray4</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedGray4</unmanaged-short>	
        FixedGray4 = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 16 shades of gray.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedGray16']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedGray16</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedGray16</unmanaged-short>	
        FixedGray16 = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>A palette that has 256 shades of gray.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPaletteTypeFixedGray256']/*"/>	
        /// <msdn-id>ee719812</msdn-id>	
        /// <unmanaged>WICBitmapPaletteTypeFixedGray256</unmanaged>	
        /// <unmanaged-short>WICBitmapPaletteTypeFixedGray256</unmanaged-short>	
        FixedGray256 = unchecked((int)12),			
    }
    
    /// <summary>	
    /// <p>Specifies the flip and rotation transforms.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformOptions']/*"/>	
    /// <msdn-id>ee719814</msdn-id>	
    /// <unmanaged>WICBitmapTransformOptions</unmanaged>	
    /// <unmanaged-short>WICBitmapTransformOptions</unmanaged-short>	
    [Flags]
    public enum BitmapTransformOptions : int {	
        
        /// <summary>	
        /// <dd> <p>A rotation of 0 degrees.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformRotate0']/*"/>	
        /// <msdn-id>ee719814</msdn-id>	
        /// <unmanaged>WICBitmapTransformRotate0</unmanaged>	
        /// <unmanaged-short>WICBitmapTransformRotate0</unmanaged-short>	
        Rotate0 = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>A clockwise rotation of 90 degrees.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformRotate90']/*"/>	
        /// <msdn-id>ee719814</msdn-id>	
        /// <unmanaged>WICBitmapTransformRotate90</unmanaged>	
        /// <unmanaged-short>WICBitmapTransformRotate90</unmanaged-short>	
        Rotate90 = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A clockwise rotation of 180 degrees.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformRotate180']/*"/>	
        /// <msdn-id>ee719814</msdn-id>	
        /// <unmanaged>WICBitmapTransformRotate180</unmanaged>	
        /// <unmanaged-short>WICBitmapTransformRotate180</unmanaged-short>	
        Rotate180 = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A clockwise rotation of 270 degrees.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformRotate270']/*"/>	
        /// <msdn-id>ee719814</msdn-id>	
        /// <unmanaged>WICBitmapTransformRotate270</unmanaged>	
        /// <unmanaged-short>WICBitmapTransformRotate270</unmanaged-short>	
        Rotate270 = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>A horizontal flip. Pixels are flipped around the vertical y-axis.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformFlipHorizontal']/*"/>	
        /// <msdn-id>ee719814</msdn-id>	
        /// <unmanaged>WICBitmapTransformFlipHorizontal</unmanaged>	
        /// <unmanaged-short>WICBitmapTransformFlipHorizontal</unmanaged-short>	
        FlipHorizontal = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>A vertical flip. Pixels are flipped around the horizontal x-axis.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapTransformFlipVertical']/*"/>	
        /// <msdn-id>ee719814</msdn-id>	
        /// <unmanaged>WICBitmapTransformFlipVertical</unmanaged>	
        /// <unmanaged-short>WICBitmapTransformFlipVertical</unmanaged-short>	
        FlipVertical = unchecked((int)16),			
    }
    
    /// <summary>	
    /// <p>Specifies the color context types.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICColorContextType']/*"/>	
    /// <msdn-id>ee719815</msdn-id>	
    /// <unmanaged>WICColorContextType</unmanaged>	
    /// <unmanaged-short>WICColorContextType</unmanaged-short>	
    public enum ColorContextType : int {	
        
        /// <summary>	
        /// <dd> <p>An uninitialized color context.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICColorContextUninitialized']/*"/>	
        /// <msdn-id>ee719815</msdn-id>	
        /// <unmanaged>WICColorContextUninitialized</unmanaged>	
        /// <unmanaged-short>WICColorContextUninitialized</unmanaged-short>	
        Uninitialized = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>A color context that is a full ICC color profile.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICColorContextProfile']/*"/>	
        /// <msdn-id>ee719815</msdn-id>	
        /// <unmanaged>WICColorContextProfile</unmanaged>	
        /// <unmanaged-short>WICColorContextProfile</unmanaged-short>	
        Profile = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A color context that is one of a number of set color spaces (sRGB, AdobeRGB) that are defined in the EXIF specification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICColorContextExifColorSpace']/*"/>	
        /// <msdn-id>ee719815</msdn-id>	
        /// <unmanaged>WICColorContextExifColorSpace</unmanaged>	
        /// <unmanaged-short>WICColorContextExifColorSpace</unmanaged-short>	
        ExifColorSpace = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies component enumeration options.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentEnumerateOptions']/*"/>	
    /// <msdn-id>ee719816</msdn-id>	
    /// <unmanaged>WICComponentEnumerateOptions</unmanaged>	
    /// <unmanaged-short>WICComponentEnumerateOptions</unmanaged-short>	
    [Flags]
    public enum ComponentEnumerateOptions : int {	
        
        /// <summary>	
        /// <dd> <p>Enumerate any components that are not disabled. Because this value is 0x0, it is always included with the other options.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentEnumerateDefault']/*"/>	
        /// <msdn-id>ee719816</msdn-id>	
        /// <unmanaged>WICComponentEnumerateDefault</unmanaged>	
        /// <unmanaged-short>WICComponentEnumerateDefault</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Force a read of the registry before enumerating components.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentEnumerateRefresh']/*"/>	
        /// <msdn-id>ee719816</msdn-id>	
        /// <unmanaged>WICComponentEnumerateRefresh</unmanaged>	
        /// <unmanaged-short>WICComponentEnumerateRefresh</unmanaged-short>	
        Refresh = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Include disabled components in the enumeration. The set of disabled components is disjoint with the set of default enumerated components</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentEnumerateDisabled']/*"/>	
        /// <msdn-id>ee719816</msdn-id>	
        /// <unmanaged>WICComponentEnumerateDisabled</unmanaged>	
        /// <unmanaged-short>WICComponentEnumerateDisabled</unmanaged-short>	
        Disabled = unchecked((int)-2147483648),			
        
        /// <summary>	
        /// <dd> <p>Include unsigned components in the enumeration. This option has no effect.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentEnumerateUnsigned']/*"/>	
        /// <msdn-id>ee719816</msdn-id>	
        /// <unmanaged>WICComponentEnumerateUnsigned</unmanaged>	
        /// <unmanaged-short>WICComponentEnumerateUnsigned</unmanaged-short>	
        Unsigned = unchecked((int)1073741824),			
        
        /// <summary>	
        /// <dd> <p>At the end of component enumeration, filter out any components that are not Windows provided.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentEnumerateBuiltInOnly']/*"/>	
        /// <msdn-id>ee719816</msdn-id>	
        /// <unmanaged>WICComponentEnumerateBuiltInOnly</unmanaged>	
        /// <unmanaged-short>WICComponentEnumerateBuiltInOnly</unmanaged-short>	
        BuiltInOnly = unchecked((int)536870912),			
    }
    
    /// <summary>	
    /// <p>Specifies the component signing status.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentSigning']/*"/>	
    /// <msdn-id>ee719817</msdn-id>	
    /// <unmanaged>WICComponentSigning</unmanaged>	
    /// <unmanaged-short>WICComponentSigning</unmanaged-short>	
    [Flags]
    public enum ComponentSigning : int {	
        
        /// <summary>	
        /// <dd> <p>A signed component.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentSigned']/*"/>	
        /// <msdn-id>ee719817</msdn-id>	
        /// <unmanaged>WICComponentSigned</unmanaged>	
        /// <unmanaged-short>WICComponentSigned</unmanaged-short>	
        Signed = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>An unsigned component</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentUnsigned']/*"/>	
        /// <msdn-id>ee719817</msdn-id>	
        /// <unmanaged>WICComponentUnsigned</unmanaged>	
        /// <unmanaged-short>WICComponentUnsigned</unmanaged-short>	
        Unsigned = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A component is safe. </p> <p>Components that do not have a binary component to sign, such as a pixel format, should return this value.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentSafe']/*"/>	
        /// <msdn-id>ee719817</msdn-id>	
        /// <unmanaged>WICComponentSafe</unmanaged>	
        /// <unmanaged-short>WICComponentSafe</unmanaged-short>	
        Safe = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>A component has been disabled.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentDisabled']/*"/>	
        /// <msdn-id>ee719817</msdn-id>	
        /// <unmanaged>WICComponentDisabled</unmanaged>	
        /// <unmanaged-short>WICComponentDisabled</unmanaged-short>	
        Disabled = unchecked((int)-2147483648),			
    }
    
    /// <summary>	
    /// <p>Specifies the type of Windows Imaging Component (WIC) component.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICComponentType']/*"/>	
    /// <msdn-id>ee719818</msdn-id>	
    /// <unmanaged>WICComponentType</unmanaged>	
    /// <unmanaged-short>WICComponentType</unmanaged-short>	
    [Flags]
    public enum ComponentType : int {	
        
        /// <summary>	
        /// <dd> <p>A WIC decoder.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDecoder']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICDecoder</unmanaged>	
        /// <unmanaged-short>WICDecoder</unmanaged-short>	
        Decoder = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A WIC encoder.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICEncoder']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICEncoder</unmanaged>	
        /// <unmanaged-short>WICEncoder</unmanaged-short>	
        Encoder = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A WIC pixel converter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatConverter']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICPixelFormatConverter</unmanaged>	
        /// <unmanaged-short>WICPixelFormatConverter</unmanaged-short>	
        PixelFormatConverter = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>A WIC metadata reader.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICMetadataReader']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICMetadataReader</unmanaged>	
        /// <unmanaged-short>WICMetadataReader</unmanaged-short>	
        MetadataReader = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>A WIC metadata writer.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICMetadataWriter']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICMetadataWriter</unmanaged>	
        /// <unmanaged-short>WICMetadataWriter</unmanaged-short>	
        MetadataWriter = unchecked((int)16),			
        
        /// <summary>	
        /// <dd> <p>A WIC pixel format.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormat']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICPixelFormat</unmanaged>	
        /// <unmanaged-short>WICPixelFormat</unmanaged-short>	
        PixelFormat = unchecked((int)32),			
        
        /// <summary>	
        /// <dd> <p>All WIC components.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICAllComponents']/*"/>	
        /// <msdn-id>ee719818</msdn-id>	
        /// <unmanaged>WICAllComponents</unmanaged>	
        /// <unmanaged-short>WICAllComponents</unmanaged-short>	
        AllComponents = unchecked((int)63),			
    }
    
    /// <summary>	
    /// <p>Specifies the the meaning of pixel color component values contained in the DDS image.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsAlphaMode']/*"/>	
    /// <msdn-id>dn302101</msdn-id>	
    /// <unmanaged>WICDdsAlphaMode</unmanaged>	
    /// <unmanaged-short>WICDdsAlphaMode</unmanaged-short>	
    public enum DdsAlphaMode : int {	
        
        /// <summary>	
        /// <dd> <p>Alpha behavior is unspecified and must be determined by the reader.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsAlphaModeUnknown']/*"/>	
        /// <msdn-id>dn302101</msdn-id>	
        /// <unmanaged>WICDdsAlphaModeUnknown</unmanaged>	
        /// <unmanaged-short>WICDdsAlphaModeUnknown</unmanaged-short>	
        DdsAlphaModeUnknown = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The alpha data is straight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsAlphaModeStraight']/*"/>	
        /// <msdn-id>dn302101</msdn-id>	
        /// <unmanaged>WICDdsAlphaModeStraight</unmanaged>	
        /// <unmanaged-short>WICDdsAlphaModeStraight</unmanaged-short>	
        DdsAlphaModeStraight = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The alpha data is premultiplied.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsAlphaModePremultiplied']/*"/>	
        /// <msdn-id>dn302101</msdn-id>	
        /// <unmanaged>WICDdsAlphaModePremultiplied</unmanaged>	
        /// <unmanaged-short>WICDdsAlphaModePremultiplied</unmanaged-short>	
        DdsAlphaModePremultiplied = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The alpha data is opaque (UNORM value of 1). This can be used by a compliant reader as a performance optimization. For example, blending operations can be converted to copies.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsAlphaModeOpaque']/*"/>	
        /// <msdn-id>dn302101</msdn-id>	
        /// <unmanaged>WICDdsAlphaModeOpaque</unmanaged>	
        /// <unmanaged-short>WICDdsAlphaModeOpaque</unmanaged-short>	
        DdsAlphaModeOpaque = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The alpha channel contains custom data that is not alpha.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsAlphaModeCustom']/*"/>	
        /// <msdn-id>dn302101</msdn-id>	
        /// <unmanaged>WICDdsAlphaModeCustom</unmanaged>	
        /// <unmanaged-short>WICDdsAlphaModeCustom</unmanaged-short>	
        DdsAlphaModeCustom = unchecked((int)4),			
    }
    
    /// <summary>	
    /// <p>Specifies the dimension type of the data contained in DDS image.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Both <strong>WICDdsTexture2d</strong> and <strong><see cref="SharpDX.WIC.DdsDimension.DdsTextureCube"/></strong> correspond to <strong><see cref="SharpDX.Direct3D11.ResourceDimension.Texture2D"/></strong>. When using <strong><see cref="SharpDX.Direct3D11.Device.CreateTexture2D"/></strong>, they are distinguished by the flag <strong><see cref="SharpDX.Direct3D11.ResourceOptionFlags.TextureCube"/></strong> in the structure <strong><see cref="SharpDX.Direct3D11.Texture2DDescription"/></strong>.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsDimension']/*"/>	
    /// <msdn-id>dn302102</msdn-id>	
    /// <unmanaged>WICDdsDimension</unmanaged>	
    /// <unmanaged-short>WICDdsDimension</unmanaged-short>	
    public enum DdsDimension : int {	
        
        /// <summary>	
        /// <dd> <p>DDS image contains a 1-dimensional texture .  </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsTexture1D']/*"/>	
        /// <msdn-id>dn302102</msdn-id>	
        /// <unmanaged>WICDdsTexture1D</unmanaged>	
        /// <unmanaged-short>WICDdsTexture1D</unmanaged-short>	
        DdsTexture1D = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>DDS image contains a 2-dimensional texture .  </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsTexture2D']/*"/>	
        /// <msdn-id>dn302102</msdn-id>	
        /// <unmanaged>WICDdsTexture2D</unmanaged>	
        /// <unmanaged-short>WICDdsTexture2D</unmanaged-short>	
        DdsTexture2D = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>DDS image contains a 3-dimensional texture .  </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsTexture3D']/*"/>	
        /// <msdn-id>dn302102</msdn-id>	
        /// <unmanaged>WICDdsTexture3D</unmanaged>	
        /// <unmanaged-short>WICDdsTexture3D</unmanaged-short>	
        DdsTexture3D = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The DDS image contains a cube texture represented as an array of 6 faces.  </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsTextureCube']/*"/>	
        /// <msdn-id>dn302102</msdn-id>	
        /// <unmanaged>WICDdsTextureCube</unmanaged>	
        /// <unmanaged-short>WICDdsTextureCube</unmanaged-short>	
        DdsTextureCube = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Specifies decode options.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDecodeOptions']/*"/>	
    /// <msdn-id>ee719824</msdn-id>	
    /// <unmanaged>WICDecodeOptions</unmanaged>	
    /// <unmanaged-short>WICDecodeOptions</unmanaged-short>	
    public enum DecodeOptions : int {	
        
        /// <summary>	
        /// <dd> <p>Cache metadata when needed.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDecodeMetadataCacheOnDemand']/*"/>	
        /// <msdn-id>ee719824</msdn-id>	
        /// <unmanaged>WICDecodeMetadataCacheOnDemand</unmanaged>	
        /// <unmanaged-short>WICDecodeMetadataCacheOnDemand</unmanaged-short>	
        CacheOnDemand = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Cache metadata when decoder is loaded.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDecodeMetadataCacheOnLoad']/*"/>	
        /// <msdn-id>ee719824</msdn-id>	
        /// <unmanaged>WICDecodeMetadataCacheOnLoad</unmanaged>	
        /// <unmanaged-short>WICDecodeMetadataCacheOnLoad</unmanaged-short>	
        CacheOnLoad = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the application extension metadata properties for a Graphics Interchange Format (GIF) image.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifApplicationExtensionProperties']/*"/>	
    /// <msdn-id>ee719826</msdn-id>	
    /// <unmanaged>WICGifApplicationExtensionProperties</unmanaged>	
    /// <unmanaged-short>WICGifApplicationExtensionProperties</unmanaged-short>	
    public enum GifApplicationExtensionProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI1 | VT_VECTOR] Indicates a string that identifies the application.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifApplicationExtensionApplication']/*"/>	
        /// <msdn-id>ee719826</msdn-id>	
        /// <unmanaged>WICGifApplicationExtensionApplication</unmanaged>	
        /// <unmanaged-short>WICGifApplicationExtensionApplication</unmanaged-short>	
        Application = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1 | VT_VECTOR] Indicates data that is exposed by the application.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifApplicationExtensionData']/*"/>	
        /// <msdn-id>ee719826</msdn-id>	
        /// <unmanaged>WICGifApplicationExtensionData</unmanaged>	
        /// <unmanaged-short>WICGifApplicationExtensionData</unmanaged-short>	
        Data = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the comment extension metadata properties for a Graphics Interchange Format (GIF) image.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifCommentExtensionProperties']/*"/>	
    /// <msdn-id>ee719827</msdn-id>	
    /// <unmanaged>WICGifCommentExtensionProperties</unmanaged>	
    /// <unmanaged-short>WICGifCommentExtensionProperties</unmanaged-short>	
    public enum GifCommentExtensionProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] Indicates the comment text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifCommentExtensionText']/*"/>	
        /// <msdn-id>ee719827</msdn-id>	
        /// <unmanaged>WICGifCommentExtensionText</unmanaged>	
        /// <unmanaged-short>WICGifCommentExtensionText</unmanaged-short>	
        Text = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the graphic control extension metadata properties that define the transitions between each frame animation for Graphics Interchange Format (GIF) images.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifGraphicControlExtensionProperties']/*"/>	
    /// <msdn-id>ee719828</msdn-id>	
    /// <unmanaged>WICGifGraphicControlExtensionProperties</unmanaged>	
    /// <unmanaged-short>WICGifGraphicControlExtensionProperties</unmanaged-short>	
    public enum GifGraphicControlExtensionProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates  the disposal requirements. 0 - no disposal, 1 - do not dispose, 2 - restore to background color, 3 - restore to previous.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifGraphicControlExtensionDisposal']/*"/>	
        /// <msdn-id>ee719828</msdn-id>	
        /// <unmanaged>WICGifGraphicControlExtensionDisposal</unmanaged>	
        /// <unmanaged-short>WICGifGraphicControlExtensionDisposal</unmanaged-short>	
        Disposal = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the user input flag. <strong>TRUE</strong> if user input should advance to the next frame; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifGraphicControlExtensionUserInputFlag']/*"/>	
        /// <msdn-id>ee719828</msdn-id>	
        /// <unmanaged>WICGifGraphicControlExtensionUserInputFlag</unmanaged>	
        /// <unmanaged-short>WICGifGraphicControlExtensionUserInputFlag</unmanaged-short>	
        UserInputFlag = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the transparency flag. <strong>TRUE</strong> if a transparent color in is in the color table for this frame; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifGraphicControlExtensionTransparencyFlag']/*"/>	
        /// <msdn-id>ee719828</msdn-id>	
        /// <unmanaged>WICGifGraphicControlExtensionTransparencyFlag</unmanaged>	
        /// <unmanaged-short>WICGifGraphicControlExtensionTransparencyFlag</unmanaged-short>	
        TransparencyFlag = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates  how long to display the next frame before advancing to the next frame, in units of 1/100th of a second.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifGraphicControlExtensionDelay']/*"/>	
        /// <msdn-id>ee719828</msdn-id>	
        /// <unmanaged>WICGifGraphicControlExtensionDelay</unmanaged>	
        /// <unmanaged-short>WICGifGraphicControlExtensionDelay</unmanaged-short>	
        Delay = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates which color in the palette should be treated as transparent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifGraphicControlExtensionTransparentColorIndex']/*"/>	
        /// <msdn-id>ee719828</msdn-id>	
        /// <unmanaged>WICGifGraphicControlExtensionTransparentColorIndex</unmanaged>	
        /// <unmanaged-short>WICGifGraphicControlExtensionTransparentColorIndex</unmanaged-short>	
        TransparentColorIndex = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>Specifies the image descriptor metadata properties for  Graphics Interchange Format (GIF) frames.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorProperties']/*"/>	
    /// <msdn-id>ee719829</msdn-id>	
    /// <unmanaged>WICGifImageDescriptorProperties</unmanaged>	
    /// <unmanaged-short>WICGifImageDescriptorProperties</unmanaged-short>	
    public enum GifImageDescriptorProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates the X offset at which to locate this frame within the logical screen.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorLeft']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorLeft</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorLeft</unmanaged-short>	
        Left = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates the Y offset at which to locate this frame within the logical screen.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorTop']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorTop</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorTop</unmanaged-short>	
        Top = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates width of this frame, in pixels.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorWidth']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorWidth</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorWidth</unmanaged-short>	
        Width = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates height of this frame, in pixels.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorHeight']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorHeight</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorHeight</unmanaged-short>	
        Height = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the local color table flag. <strong>TRUE</strong> if global color table is present; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorLocalColorTableFlag']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorLocalColorTableFlag</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorLocalColorTableFlag</unmanaged-short>	
        LocalColorTableFlag = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the interlace flag. <strong>TRUE</strong> if image is interlaced; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorInterlaceFlag']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorInterlaceFlag</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorInterlaceFlag</unmanaged-short>	
        InterlaceFlag = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the sorted color table flag. <strong>TRUE</strong> if the color table is sorted from most frequently to least frequently used color; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorSortFlag']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorSortFlag</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorSortFlag</unmanaged-short>	
        SortFlag = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. </p> <p>To calculate the actual size of the color table, raise 2 to the value of the field + 1.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifImageDescriptorLocalColorTableSize']/*"/>	
        /// <msdn-id>ee719829</msdn-id>	
        /// <unmanaged>WICGifImageDescriptorLocalColorTableSize</unmanaged>	
        /// <unmanaged-short>WICGifImageDescriptorLocalColorTableSize</unmanaged-short>	
        LocalColorTableSize = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>Specifies the logical screen descriptor properties for Graphics Interchange Format (GIF) metadata.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorProperties']/*"/>	
    /// <msdn-id>ee719830</msdn-id>	
    /// <unmanaged>WICGifLogicalScreenDescriptorProperties</unmanaged>	
    /// <unmanaged-short>WICGifLogicalScreenDescriptorProperties</unmanaged-short>	
    public enum GifLogicalScreenDescriptorProperties : int {	
        
        /// <summary>	
        /// <dd> <p> [VT_UI1 | VT_VECTOR] Indicates the signature property.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenSignature']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenSignature</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenSignature</unmanaged-short>	
        Signature = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates the width in pixels. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorWidth']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorWidth</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorWidth</unmanaged-short>	
        Width = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates the height in pixels. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorHeight']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorHeight</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorHeight</unmanaged-short>	
        Height = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the  global color table flag. <strong>TRUE</strong> if a global color table is present; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorGlobalColorTableFlag']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorGlobalColorTableFlag</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorGlobalColorTableFlag</unmanaged-short>	
        GlobalColorTableFlag = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the color resolution in bits per pixel.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorColorResolution']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorColorResolution</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorColorResolution</unmanaged-short>	
        ColorResolution = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>[VT_BOOL] Indicates the sorted color table flag. <strong>TRUE</strong> if the table is sorted; otherwise, <strong><see cref="SharpDX.Result.False"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorSortFlag']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorSortFlag</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorSortFlag</unmanaged-short>	
        SortFlag = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the value used to calculate the number of bytes contained in the global color table. </p> <p>To calculate the actual size of the color table, raise 2 to the value of the field + 1.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorGlobalColorTableSize']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorGlobalColorTableSize</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorGlobalColorTableSize</unmanaged-short>	
        GlobalColorTableSize = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the index within the color table to use for the background (pixels not defined in the image).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorBackgroundColorIndex']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorBackgroundColorIndex</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorBackgroundColorIndex</unmanaged-short>	
        BackgroundColorIndex = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the factor used to compute an approximation of the aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICGifLogicalScreenDescriptorPixelAspectRatio']/*"/>	
        /// <msdn-id>ee719830</msdn-id>	
        /// <unmanaged>WICGifLogicalScreenDescriptorPixelAspectRatio</unmanaged>	
        /// <unmanaged-short>WICGifLogicalScreenDescriptorPixelAspectRatio</unmanaged-short>	
        PixelAspectRatio = unchecked((int)9),			
    }
    
    /// <summary>	
    /// <p>Specifies the JPEG chrominance table property.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegChrominanceProperties']/*"/>	
    /// <msdn-id>ee719831</msdn-id>	
    /// <unmanaged>WICJpegChrominanceProperties</unmanaged>	
    /// <unmanaged-short>WICJpegChrominanceProperties</unmanaged-short>	
    public enum JpegChrominanceProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI2|VT_VECTOR] Indicates the metadata property is a chrominance table.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegChrominanceTable']/*"/>	
        /// <msdn-id>ee719831</msdn-id>	
        /// <unmanaged>WICJpegChrominanceTable</unmanaged>	
        /// <unmanaged-short>WICJpegChrominanceTable</unmanaged-short>	
        Table = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the JPEG comment properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegCommentProperties']/*"/>	
    /// <msdn-id>ee719832</msdn-id>	
    /// <unmanaged>WICJpegCommentProperties</unmanaged>	
    /// <unmanaged-short>WICJpegCommentProperties</unmanaged-short>	
    public enum JpegCommentProperties : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates the metadata property is comment text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegCommentText']/*"/>	
        /// <msdn-id>ee719832</msdn-id>	
        /// <unmanaged>WICJpegCommentText</unmanaged>	
        /// <unmanaged-short>WICJpegCommentText</unmanaged-short>	
        Text = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the options for indexing a JPEG image. </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegIndexingOptions']/*"/>	
    /// <msdn-id>dn903880</msdn-id>	
    /// <unmanaged>WICJpegIndexingOptions</unmanaged>	
    /// <unmanaged-short>WICJpegIndexingOptions</unmanaged-short>	
    public enum JpegIndexingOptions : int {	
        
        /// <summary>	
        /// <dd> <p>Index generation is deferred until <strong><see cref="SharpDX.WIC.BitmapSource.CopyPixels"/></strong> is called on the image.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegIndexingOptionsGenerateOnDemand']/*"/>	
        /// <msdn-id>dn903880</msdn-id>	
        /// <unmanaged>WICJpegIndexingOptionsGenerateOnDemand</unmanaged>	
        /// <unmanaged-short>WICJpegIndexingOptionsGenerateOnDemand</unmanaged-short>	
        JpegIndexingOptionsGenerateOnDemand = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Index generation is performed when the when the image is initially loaded.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegIndexingOptionsGenerateOnLoad']/*"/>	
        /// <msdn-id>dn903880</msdn-id>	
        /// <unmanaged>WICJpegIndexingOptionsGenerateOnLoad</unmanaged>	
        /// <unmanaged-short>WICJpegIndexingOptionsGenerateOnLoad</unmanaged-short>	
        JpegIndexingOptionsGenerateOnLoad = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the JPEG luminance table property.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegLuminanceProperties']/*"/>	
    /// <msdn-id>ee719833</msdn-id>	
    /// <unmanaged>WICJpegLuminanceProperties</unmanaged>	
    /// <unmanaged-short>WICJpegLuminanceProperties</unmanaged-short>	
    public enum JpegLuminanceProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI2|VT_VECTOR] Indicates the metadata property is a luminance table.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegLuminanceTable']/*"/>	
        /// <msdn-id>ee719833</msdn-id>	
        /// <unmanaged>WICJpegLuminanceTable</unmanaged>	
        /// <unmanaged-short>WICJpegLuminanceTable</unmanaged-short>	
        Table = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the memory layout of pixel data in a JPEG image scan. </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanType']/*"/>	
    /// <msdn-id>dn903892</msdn-id>	
    /// <unmanaged>WICJpegScanType</unmanaged>	
    /// <unmanaged-short>WICJpegScanType</unmanaged-short>	
    public enum JpegScanType : int {	
        
        /// <summary>	
        /// <dd> <p>The pixel data is stored in an interleaved memory layout.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanTypeInterleaved']/*"/>	
        /// <msdn-id>dn903892</msdn-id>	
        /// <unmanaged>WICJpegScanTypeInterleaved</unmanaged>	
        /// <unmanaged-short>WICJpegScanTypeInterleaved</unmanaged-short>	
        JpegScanTypeInterleaved = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The pixel data is stored in a planar memory layout.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanTypePlanarComponents']/*"/>	
        /// <msdn-id>dn903892</msdn-id>	
        /// <unmanaged>WICJpegScanTypePlanarComponents</unmanaged>	
        /// <unmanaged-short>WICJpegScanTypePlanarComponents</unmanaged-short>	
        JpegScanTypePlanarComponents = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The pixel data is stored in a progressive layout.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanTypeProgressive']/*"/>	
        /// <msdn-id>dn903892</msdn-id>	
        /// <unmanaged>WICJpegScanTypeProgressive</unmanaged>	
        /// <unmanaged-short>WICJpegScanTypeProgressive</unmanaged-short>	
        JpegScanTypeProgressive = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies conversion matrix from Y'Cb'Cr' to R'G'B'. </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegTransferMatrix']/*"/>	
    /// <msdn-id>dn903893</msdn-id>	
    /// <unmanaged>WICJpegTransferMatrix</unmanaged>	
    /// <unmanaged-short>WICJpegTransferMatrix</unmanaged-short>	
    public enum JpegTransferMatrix : int {	
        
        /// <summary>	
        /// <dd> <p>Specifies the identity transfer matrix.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegTransferMatrixIdentity']/*"/>	
        /// <msdn-id>dn903893</msdn-id>	
        /// <unmanaged>WICJpegTransferMatrixIdentity</unmanaged>	
        /// <unmanaged-short>WICJpegTransferMatrixIdentity</unmanaged-short>	
        JpegTransferMatrixIdentity = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Specifies the BT601 transfer matrix.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegTransferMatrixBT601']/*"/>	
        /// <msdn-id>dn903893</msdn-id>	
        /// <unmanaged>WICJpegTransferMatrixBT601</unmanaged>	
        /// <unmanaged-short>WICJpegTransferMatrixBT601</unmanaged-short>	
        JpegTransferMatrixBT601 = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the JPEG YCrCB subsampling options. </p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The native JPEG encoder uses <strong><see cref="SharpDX.WIC.JpegYCrCbSubsamplingOption.Mode420"/></strong>.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegYCrCbSubsamplingOption']/*"/>	
    /// <msdn-id>ee719834</msdn-id>	
    /// <unmanaged>WICJpegYCrCbSubsamplingOption</unmanaged>	
    /// <unmanaged-short>WICJpegYCrCbSubsamplingOption</unmanaged-short>	
    public enum JpegYCrCbSubsamplingOption : int {	
        
        /// <summary>	
        /// <dd> <p>The default subsampling option. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegYCrCbSubsamplingDefault']/*"/>	
        /// <msdn-id>ee719834</msdn-id>	
        /// <unmanaged>WICJpegYCrCbSubsamplingDefault</unmanaged>	
        /// <unmanaged-short>WICJpegYCrCbSubsamplingDefault</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Subsampling option that uses both horizontal and vertical decimation.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegYCrCbSubsampling420']/*"/>	
        /// <msdn-id>ee719834</msdn-id>	
        /// <unmanaged>WICJpegYCrCbSubsampling420</unmanaged>	
        /// <unmanaged-short>WICJpegYCrCbSubsampling420</unmanaged-short>	
        Mode420 = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Subsampling option that uses horizontal decimation  .</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegYCrCbSubsampling422']/*"/>	
        /// <msdn-id>ee719834</msdn-id>	
        /// <unmanaged>WICJpegYCrCbSubsampling422</unmanaged>	
        /// <unmanaged-short>WICJpegYCrCbSubsampling422</unmanaged-short>	
        Mode422 = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Subsampling option that uses no decimation.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegYCrCbSubsampling444']/*"/>	
        /// <msdn-id>ee719834</msdn-id>	
        /// <unmanaged>WICJpegYCrCbSubsampling444</unmanaged>	
        /// <unmanaged-short>WICJpegYCrCbSubsampling444</unmanaged-short>	
        Mode444 = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Subsampling option that uses 2x vertical downsampling only. This option is only available in Windows?8.1 and later.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegYCrCbSubsampling440']/*"/>	
        /// <msdn-id>ee719834</msdn-id>	
        /// <unmanaged>WICJpegYCrCbSubsampling440</unmanaged>	
        /// <unmanaged-short>WICJpegYCrCbSubsampling440</unmanaged-short>	
        Mode440 = unchecked((int)4),			
    }
    
    /// <summary>	
    /// <p>Specifies named white balances for raw images.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICNamedWhitePoint']/*"/>	
    /// <msdn-id>ee719842</msdn-id>	
    /// <unmanaged>WICNamedWhitePoint</unmanaged>	
    /// <unmanaged-short>WICNamedWhitePoint</unmanaged-short>	
    [Flags]
    public enum NamedWhitePoint : int {	
        
        /// <summary>	
        /// <dd> <p>The default white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointDefault']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointDefault</unmanaged>	
        /// <unmanaged-short>WICWhitePointDefault</unmanaged-short>	
        Default = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A daylight white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointDaylight']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointDaylight</unmanaged>	
        /// <unmanaged-short>WICWhitePointDaylight</unmanaged-short>	
        Daylight = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A cloudy white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointCloudy']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointCloudy</unmanaged>	
        /// <unmanaged-short>WICWhitePointCloudy</unmanaged-short>	
        Cloudy = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>A shade white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointShade']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointShade</unmanaged>	
        /// <unmanaged-short>WICWhitePointShade</unmanaged-short>	
        Shade = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>A tungsten white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointTungsten']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointTungsten</unmanaged>	
        /// <unmanaged-short>WICWhitePointTungsten</unmanaged-short>	
        Tungsten = unchecked((int)16),			
        
        /// <summary>	
        /// <dd> <p>A fluorescent white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointFluorescent']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointFluorescent</unmanaged>	
        /// <unmanaged-short>WICWhitePointFluorescent</unmanaged-short>	
        Fluorescent = unchecked((int)32),			
        
        /// <summary>	
        /// <dd> <p>Daylight white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointFlash']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointFlash</unmanaged>	
        /// <unmanaged-short>WICWhitePointFlash</unmanaged-short>	
        Flash = unchecked((int)64),			
        
        /// <summary>	
        /// <dd> <p>A flash white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointUnderwater']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointUnderwater</unmanaged>	
        /// <unmanaged-short>WICWhitePointUnderwater</unmanaged-short>	
        Underwater = unchecked((int)128),			
        
        /// <summary>	
        /// <dd> <p>A custom white balance. This is typically used when using a picture (grey-card) as white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointCustom']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointCustom</unmanaged>	
        /// <unmanaged-short>WICWhitePointCustom</unmanaged-short>	
        Custom = unchecked((int)256),			
        
        /// <summary>	
        /// <dd> <p>An automatic balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointAutoWhiteBalance']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointAutoWhiteBalance</unmanaged>	
        /// <unmanaged-short>WICWhitePointAutoWhiteBalance</unmanaged-short>	
        AutoWhiteBalance = unchecked((int)512),			
        
        /// <summary>	
        /// <dd> <p>An "as shot" white balance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICWhitePointAsShot']/*"/>	
        /// <msdn-id>ee719842</msdn-id>	
        /// <unmanaged>WICWhitePointAsShot</unmanaged>	
        /// <unmanaged-short>WICWhitePointAsShot</unmanaged-short>	
        AsShot = unchecked((int)1),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentation']/*"/>	
    /// <msdn-id>ee719844</msdn-id>	
    /// <unmanaged>WICPixelFormatNumericRepresentation</unmanaged>	
    /// <unmanaged-short>WICPixelFormatNumericRepresentation</unmanaged-short>	
    public enum PixelFormatNumericRepresentation : int {	
        
        /// <summary>	
        /// <dd></dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentationUnspecified']/*"/>	
        /// <msdn-id>ee719844</msdn-id>	
        /// <unmanaged>WICPixelFormatNumericRepresentationUnspecified</unmanaged>	
        /// <unmanaged-short>WICPixelFormatNumericRepresentationUnspecified</unmanaged-short>	
        Unspecified = unchecked((int)0),			
        
        /// <summary>	
        /// <dd></dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentationIndexed']/*"/>	
        /// <msdn-id>ee719844</msdn-id>	
        /// <unmanaged>WICPixelFormatNumericRepresentationIndexed</unmanaged>	
        /// <unmanaged-short>WICPixelFormatNumericRepresentationIndexed</unmanaged-short>	
        Indexed = unchecked((int)1),			
        
        /// <summary>	
        /// <dd></dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentationUnsignedInteger']/*"/>	
        /// <msdn-id>ee719844</msdn-id>	
        /// <unmanaged>WICPixelFormatNumericRepresentationUnsignedInteger</unmanaged>	
        /// <unmanaged-short>WICPixelFormatNumericRepresentationUnsignedInteger</unmanaged-short>	
        UnsignedInteger = unchecked((int)2),			
        
        /// <summary>	
        /// <dd></dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentationSignedInteger']/*"/>	
        /// <msdn-id>ee719844</msdn-id>	
        /// <unmanaged>WICPixelFormatNumericRepresentationSignedInteger</unmanaged>	
        /// <unmanaged-short>WICPixelFormatNumericRepresentationSignedInteger</unmanaged-short>	
        SignedInteger = unchecked((int)3),			
        
        /// <summary>	
        /// <dd></dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentationFixed']/*"/>	
        /// <msdn-id>ee719844</msdn-id>	
        /// <unmanaged>WICPixelFormatNumericRepresentationFixed</unmanaged>	
        /// <unmanaged-short>WICPixelFormatNumericRepresentationFixed</unmanaged-short>	
        Fixed = unchecked((int)4),			
        
        /// <summary>	
        /// <dd></dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPixelFormatNumericRepresentationFloat']/*"/>	
        /// <msdn-id>ee719844</msdn-id>	
        /// <unmanaged>WICPixelFormatNumericRepresentationFloat</unmanaged>	
        /// <unmanaged-short>WICPixelFormatNumericRepresentationFloat</unmanaged-short>	
        Float = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>Specifies additional options to an <strong><see cref="SharpDX.WIC.PlanarBitmapSourceTransform"/></strong> implementation.  </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPlanarOptions']/*"/>	
    /// <msdn-id>dn302105</msdn-id>	
    /// <unmanaged>WICPlanarOptions</unmanaged>	
    /// <unmanaged-short>WICPlanarOptions</unmanaged-short>	
    public enum PlanarOptions : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPlanarOptionsDefault']/*"/>	
        /// <msdn-id>dn302105</msdn-id>	
        /// <unmanaged>WICPlanarOptionsDefault</unmanaged>	
        /// <unmanaged-short>WICPlanarOptionsDefault</unmanaged-short>	
        PlanarOptionsDefault = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPlanarOptionsPreserveSubsampling']/*"/>	
        /// <msdn-id>dn302105</msdn-id>	
        /// <unmanaged>WICPlanarOptionsPreserveSubsampling</unmanaged>	
        /// <unmanaged-short>WICPlanarOptionsPreserveSubsampling</unmanaged-short>	
        PlanarOptionsPreserveSubsampling = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) background (bKGD) chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngBkgdProperties']/*"/>	
    /// <msdn-id>ee719845</msdn-id>	
    /// <unmanaged>WICPngBkgdProperties</unmanaged>	
    /// <unmanaged-short>WICPngBkgdProperties</unmanaged-short>	
    public enum PngBkgdProperties : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates the background color. There are three possible types, depending on the image's pixel format.</p> <p></p> <dl> <dt>VT_UI1</dt> <dd> <p>Specifies the index of the background color in an image with an indexed pixel format.</p> </dd> <dt>VT_UI2</dt> <dd> <p>Specifies the background color in a grayscale image.</p> </dd> <dt>VT_VECTOR|VT_UI2</dt> <dd> <p>Specifies the background color in an RGB image as three USHORT values: {0x<em>RRRR</em>, 0x<em>GGGG</em>, 0x<em>BBBB</em>}.</p> </dd> </dl> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngBkgdBackgroundColor']/*"/>	
        /// <msdn-id>ee719845</msdn-id>	
        /// <unmanaged>WICPngBkgdBackgroundColor</unmanaged>	
        /// <unmanaged-short>WICPngBkgdBackgroundColor</unmanaged-short>	
        Color = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) cHRM chunk metadata properties for CIE XYZ chromaticity.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmProperties']/*"/>	
    /// <msdn-id>ee719846</msdn-id>	
    /// <unmanaged>WICPngChrmProperties</unmanaged>	
    /// <unmanaged-short>WICPngChrmProperties</unmanaged-short>	
    public enum PngChrmProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the whitepoint x value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmWhitePointX']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmWhitePointX</unmanaged>	
        /// <unmanaged-short>WICPngChrmWhitePointX</unmanaged-short>	
        WhitePointX = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the whitepoint y value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmWhitePointY']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmWhitePointY</unmanaged>	
        /// <unmanaged-short>WICPngChrmWhitePointY</unmanaged-short>	
        WhitePointY = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the red x value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmRedX']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmRedX</unmanaged>	
        /// <unmanaged-short>WICPngChrmRedX</unmanaged-short>	
        RedX = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the red y value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmRedY']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmRedY</unmanaged>	
        /// <unmanaged-short>WICPngChrmRedY</unmanaged-short>	
        RedY = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the green x value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmGreenX']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmGreenX</unmanaged>	
        /// <unmanaged-short>WICPngChrmGreenX</unmanaged-short>	
        GreenX = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the green y value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmGreenY']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmGreenY</unmanaged>	
        /// <unmanaged-short>WICPngChrmGreenY</unmanaged-short>	
        GreenY = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the blue x value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmBlueX']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmBlueX</unmanaged>	
        /// <unmanaged-short>WICPngChrmBlueX</unmanaged-short>	
        BlueX = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the blue y value ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngChrmBlueY']/*"/>	
        /// <msdn-id>ee719846</msdn-id>	
        /// <unmanaged>WICPngChrmBlueY</unmanaged>	
        /// <unmanaged-short>WICPngChrmBlueY</unmanaged-short>	
        BlueY = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) filters available for compression optimization.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterOption']/*"/>	
    /// <msdn-id>ee719847</msdn-id>	
    /// <unmanaged>WICPngFilterOption</unmanaged>	
    /// <unmanaged-short>WICPngFilterOption</unmanaged-short>	
    public enum PngFilterOption : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates an unspecified PNG filter. This enables WIC to algorithmically choose the best filtering option for the image.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterUnspecified']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterUnspecified</unmanaged>	
        /// <unmanaged-short>WICPngFilterUnspecified</unmanaged-short>	
        Unspecified = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates no PNG filter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterNone']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterNone</unmanaged>	
        /// <unmanaged-short>WICPngFilterNone</unmanaged-short>	
        None = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Indicates a PNG sub filter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterSub']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterSub</unmanaged>	
        /// <unmanaged-short>WICPngFilterSub</unmanaged-short>	
        Sub = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Indicates a PNG up filter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterUp']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterUp</unmanaged>	
        /// <unmanaged-short>WICPngFilterUp</unmanaged-short>	
        Up = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Indicates a PNG average filter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterAverage']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterAverage</unmanaged>	
        /// <unmanaged-short>WICPngFilterAverage</unmanaged-short>	
        Average = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Indicates a PNG paeth filter.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterPaeth']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterPaeth</unmanaged>	
        /// <unmanaged-short>WICPngFilterPaeth</unmanaged-short>	
        Paeth = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Indicates a PNG adaptive filter. This enables WIC to choose the best filtering mode on a per-scanline basis.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngFilterAdaptive']/*"/>	
        /// <msdn-id>ee719847</msdn-id>	
        /// <unmanaged>WICPngFilterAdaptive</unmanaged>	
        /// <unmanaged-short>WICPngFilterAdaptive</unmanaged-short>	
        Adaptive = unchecked((int)6),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) gAMA chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngGamaProperties']/*"/>	
    /// <msdn-id>ee719848</msdn-id>	
    /// <unmanaged>WICPngGamaProperties</unmanaged>	
    /// <unmanaged-short>WICPngGamaProperties</unmanaged-short>	
    public enum PngGamaProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI4] Indicates the gamma value.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngGamaGamma']/*"/>	
        /// <msdn-id>ee719848</msdn-id>	
        /// <unmanaged>WICPngGamaGamma</unmanaged>	
        /// <unmanaged-short>WICPngGamaGamma</unmanaged-short>	
        Gamma = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) hIST chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngHistProperties']/*"/>	
    /// <msdn-id>ee719849</msdn-id>	
    /// <unmanaged>WICPngHistProperties</unmanaged>	
    /// <unmanaged-short>WICPngHistProperties</unmanaged-short>	
    public enum PngHistProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_VECTOR | VT_UI2] Indicates the approximate usage frequency of each color in the color palette. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngHistFrequencies']/*"/>	
        /// <msdn-id>ee719849</msdn-id>	
        /// <unmanaged>WICPngHistFrequencies</unmanaged>	
        /// <unmanaged-short>WICPngHistFrequencies</unmanaged-short>	
        Frequencies = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) iCCP chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngIccpProperties']/*"/>	
    /// <msdn-id>ee719850</msdn-id>	
    /// <unmanaged>WICPngIccpProperties</unmanaged>	
    /// <unmanaged-short>WICPngIccpProperties</unmanaged-short>	
    public enum PngIccpProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] Indicates the International Color Consortium (ICC) profile name.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngIccpProfileName']/*"/>	
        /// <msdn-id>ee719850</msdn-id>	
        /// <unmanaged>WICPngIccpProfileName</unmanaged>	
        /// <unmanaged-short>WICPngIccpProfileName</unmanaged-short>	
        ProfileName = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_VECTOR | VT_UI1] Indicates the embedded ICC profile.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngIccpProfileData']/*"/>	
        /// <msdn-id>ee719850</msdn-id>	
        /// <unmanaged>WICPngIccpProfileData</unmanaged>	
        /// <unmanaged-short>WICPngIccpProfileData</unmanaged-short>	
        ProfileData = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) iTXT chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngItxtProperties']/*"/>	
    /// <msdn-id>ee719851</msdn-id>	
    /// <unmanaged>WICPngItxtProperties</unmanaged>	
    /// <unmanaged-short>WICPngItxtProperties</unmanaged-short>	
    public enum PngItxtProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] Indicates the keywords in the iTXT metadata chunk.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngItxtKeyword']/*"/>	
        /// <msdn-id>ee719851</msdn-id>	
        /// <unmanaged>WICPngItxtKeyword</unmanaged>	
        /// <unmanaged-short>WICPngItxtKeyword</unmanaged-short>	
        Keyword = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates whether the text in the iTXT chunk is compressed. 1 if the text is compressed; otherwise, 0.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngItxtCompressionFlag']/*"/>	
        /// <msdn-id>ee719851</msdn-id>	
        /// <unmanaged>WICPngItxtCompressionFlag</unmanaged>	
        /// <unmanaged-short>WICPngItxtCompressionFlag</unmanaged-short>	
        CompressionFlag = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_LPSTR] Indicates the human language used by the translated keyword and the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngItxtLanguageTag']/*"/>	
        /// <msdn-id>ee719851</msdn-id>	
        /// <unmanaged>WICPngItxtLanguageTag</unmanaged>	
        /// <unmanaged-short>WICPngItxtLanguageTag</unmanaged-short>	
        LanguageTag = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_LPWSTR] Indicates a translation of the keyword into the language indicated by the language tag.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngItxtTranslatedKeyword']/*"/>	
        /// <msdn-id>ee719851</msdn-id>	
        /// <unmanaged>WICPngItxtTranslatedKeyword</unmanaged>	
        /// <unmanaged-short>WICPngItxtTranslatedKeyword</unmanaged-short>	
        TranslatedKeyword = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_LPWSTR] Indicates additional text in the iTXT metadata chunk.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngItxtText']/*"/>	
        /// <msdn-id>ee719851</msdn-id>	
        /// <unmanaged>WICPngItxtText</unmanaged>	
        /// <unmanaged-short>WICPngItxtText</unmanaged-short>	
        Text = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) sRGB chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngSrgbProperties']/*"/>	
    /// <msdn-id>ee719852</msdn-id>	
    /// <unmanaged>WICPngSrgbProperties</unmanaged>	
    /// <unmanaged-short>WICPngSrgbProperties</unmanaged-short>	
    public enum PngSrgbProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the rendering intent for an sRGB color space image. The rendering intents have the following meaning.</p> <table> <tr><th>Value</th><th>Meaning</th></tr> <tr><td>0</td><td>Perceptual</td></tr> <tr><td>1</td><td>Relative colorimetric</td></tr> <tr><td>2</td><td>Saturation</td></tr> <tr><td>3</td><td>Absolute colorimetric</td></tr> </table> <p>?</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngSrgbRenderingIntent']/*"/>	
        /// <msdn-id>ee719852</msdn-id>	
        /// <unmanaged>WICPngSrgbRenderingIntent</unmanaged>	
        /// <unmanaged-short>WICPngSrgbRenderingIntent</unmanaged-short>	
        RenderingIntent = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the Portable Network Graphics (PNG) tIME chunk metadata properties.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeProperties']/*"/>	
    /// <msdn-id>ee719853</msdn-id>	
    /// <unmanaged>WICPngTimeProperties</unmanaged>	
    /// <unmanaged-short>WICPngTimeProperties</unmanaged-short>	
    public enum PngTimeProperties : int {	
        
        /// <summary>	
        /// <dd> <p>[VT_UI2] Indicates the year of the last modification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeYear']/*"/>	
        /// <msdn-id>ee719853</msdn-id>	
        /// <unmanaged>WICPngTimeYear</unmanaged>	
        /// <unmanaged-short>WICPngTimeYear</unmanaged-short>	
        Year = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the month of the last modification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeMonth']/*"/>	
        /// <msdn-id>ee719853</msdn-id>	
        /// <unmanaged>WICPngTimeMonth</unmanaged>	
        /// <unmanaged-short>WICPngTimeMonth</unmanaged-short>	
        Month = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates day of the last modification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeDay']/*"/>	
        /// <msdn-id>ee719853</msdn-id>	
        /// <unmanaged>WICPngTimeDay</unmanaged>	
        /// <unmanaged-short>WICPngTimeDay</unmanaged-short>	
        Day = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the hour of the last modification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeHour']/*"/>	
        /// <msdn-id>ee719853</msdn-id>	
        /// <unmanaged>WICPngTimeHour</unmanaged>	
        /// <unmanaged-short>WICPngTimeHour</unmanaged-short>	
        Hour = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the minute of the last modification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeMinute']/*"/>	
        /// <msdn-id>ee719853</msdn-id>	
        /// <unmanaged>WICPngTimeMinute</unmanaged>	
        /// <unmanaged-short>WICPngTimeMinute</unmanaged-short>	
        Minute = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>[VT_UI1] Indicates the second of the last modification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICPngTimeSecond']/*"/>	
        /// <msdn-id>ee719853</msdn-id>	
        /// <unmanaged>WICPngTimeSecond</unmanaged>	
        /// <unmanaged-short>WICPngTimeSecond</unmanaged-short>	
        Second = unchecked((int)6),			
    }
    
    /// <summary>	
    /// <p>Specifies when the progress notification callback should be called.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressNotification']/*"/>	
    /// <msdn-id>ee719854</msdn-id>	
    /// <unmanaged>WICProgressNotification</unmanaged>	
    /// <unmanaged-short>WICProgressNotification</unmanaged-short>	
    [Flags]
    public enum ProgressNotification : int {	
        
        /// <summary>	
        /// <dd> <p>The callback should be called when codec operations begin.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressNotificationBegin']/*"/>	
        /// <msdn-id>ee719854</msdn-id>	
        /// <unmanaged>WICProgressNotificationBegin</unmanaged>	
        /// <unmanaged-short>WICProgressNotificationBegin</unmanaged-short>	
        Begin = unchecked((int)65536),			
        
        /// <summary>	
        /// <dd> <p>The callback should be called when codec operations end.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressNotificationEnd']/*"/>	
        /// <msdn-id>ee719854</msdn-id>	
        /// <unmanaged>WICProgressNotificationEnd</unmanaged>	
        /// <unmanaged-short>WICProgressNotificationEnd</unmanaged-short>	
        End = unchecked((int)131072),			
        
        /// <summary>	
        /// <dd> <p>The callback should be called frequently to report status.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressNotificationFrequent']/*"/>	
        /// <msdn-id>ee719854</msdn-id>	
        /// <unmanaged>WICProgressNotificationFrequent</unmanaged>	
        /// <unmanaged-short>WICProgressNotificationFrequent</unmanaged-short>	
        Frequent = unchecked((int)262144),			
        
        /// <summary>	
        /// <dd> <p>The callback should be called on all available progress notifications.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressNotificationAll']/*"/>	
        /// <msdn-id>ee719854</msdn-id>	
        /// <unmanaged>WICProgressNotificationAll</unmanaged>	
        /// <unmanaged-short>WICProgressNotificationAll</unmanaged-short>	
        All = unchecked((int)-65536),			
    }
    
    /// <summary>	
    /// <p>Specifies the progress operations to receive notifications for.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressOperation']/*"/>	
    /// <msdn-id>ee719855</msdn-id>	
    /// <unmanaged>WICProgressOperation</unmanaged>	
    /// <unmanaged-short>WICProgressOperation</unmanaged-short>	
    [Flags]
    public enum ProgressOperation : int {	
        
        /// <summary>	
        /// <dd> <p>Receive copy pixel operation.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressOperationCopyPixels']/*"/>	
        /// <msdn-id>ee719855</msdn-id>	
        /// <unmanaged>WICProgressOperationCopyPixels</unmanaged>	
        /// <unmanaged-short>WICProgressOperationCopyPixels</unmanaged-short>	
        CopyPixels = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Receive write pixel operation.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressOperationWritePixels']/*"/>	
        /// <msdn-id>ee719855</msdn-id>	
        /// <unmanaged>WICProgressOperationWritePixels</unmanaged>	
        /// <unmanaged-short>WICProgressOperationWritePixels</unmanaged-short>	
        WritePixels = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Receive all progress operations available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICProgressOperationAll']/*"/>	
        /// <msdn-id>ee719855</msdn-id>	
        /// <unmanaged>WICProgressOperationAll</unmanaged>	
        /// <unmanaged-short>WICProgressOperationAll</unmanaged-short>	
        All = unchecked((int)65535),			
    }
    
    /// <summary>	
    /// <p>Specifies the capability support of a raw image.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilities']/*"/>	
    /// <msdn-id>ee719856</msdn-id>	
    /// <unmanaged>WICRawCapabilities</unmanaged>	
    /// <unmanaged-short>WICRawCapabilities</unmanaged-short>	
    public enum RawCapabilities : int {	
        
        /// <summary>	
        /// <dd> <p>The capability is not supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilityNotSupported']/*"/>	
        /// <msdn-id>ee719856</msdn-id>	
        /// <unmanaged>WICRawCapabilityNotSupported</unmanaged>	
        /// <unmanaged-short>WICRawCapabilityNotSupported</unmanaged-short>	
        NotSupported = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The capability supports only get operations.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilityGetSupported']/*"/>	
        /// <msdn-id>ee719856</msdn-id>	
        /// <unmanaged>WICRawCapabilityGetSupported</unmanaged>	
        /// <unmanaged-short>WICRawCapabilityGetSupported</unmanaged-short>	
        GetSupported = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The capability supports get and set operations.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilityFullySupported']/*"/>	
        /// <msdn-id>ee719856</msdn-id>	
        /// <unmanaged>WICRawCapabilityFullySupported</unmanaged>	
        /// <unmanaged-short>WICRawCapabilityFullySupported</unmanaged-short>	
        FullySupported = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies the parameter set used by a raw codec.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawParameterSet']/*"/>	
    /// <msdn-id>ee719858</msdn-id>	
    /// <unmanaged>WICRawParameterSet</unmanaged>	
    /// <unmanaged-short>WICRawParameterSet</unmanaged-short>	
    public enum RawParameterSet : int {	
        
        /// <summary>	
        /// <dd> <p>An as shot parameter set.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICAsShotParameterSet']/*"/>	
        /// <msdn-id>ee719858</msdn-id>	
        /// <unmanaged>WICAsShotParameterSet</unmanaged>	
        /// <unmanaged-short>WICAsShotParameterSet</unmanaged-short>	
        AsShot = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>A user adjusted parameter set.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICUserAdjustedParameterSet']/*"/>	
        /// <msdn-id>ee719858</msdn-id>	
        /// <unmanaged>WICUserAdjustedParameterSet</unmanaged>	
        /// <unmanaged-short>WICUserAdjustedParameterSet</unmanaged-short>	
        UserAdjusted = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A codec adjusted parameter set.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICAutoAdjustedParameterSet']/*"/>	
        /// <msdn-id>ee719858</msdn-id>	
        /// <unmanaged>WICAutoAdjustedParameterSet</unmanaged>	
        /// <unmanaged-short>WICAutoAdjustedParameterSet</unmanaged-short>	
        AutoAdjusted = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Specifies the render intent of the next <strong>CopyPixels</strong> call. </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRenderMode']/*"/>	
    /// <msdn-id>ee719859</msdn-id>	
    /// <unmanaged>WICRawRenderMode</unmanaged>	
    /// <unmanaged-short>WICRawRenderMode</unmanaged-short>	
    public enum RawRenderMode : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRenderModeDraft']/*"/>	
        /// <msdn-id>ee719859</msdn-id>	
        /// <unmanaged>WICRawRenderModeDraft</unmanaged>	
        /// <unmanaged-short>WICRawRenderModeDraft</unmanaged-short>	
        Draft = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRenderModeNormal']/*"/>	
        /// <msdn-id>ee719859</msdn-id>	
        /// <unmanaged>WICRawRenderModeNormal</unmanaged>	
        /// <unmanaged-short>WICRawRenderModeNormal</unmanaged-short>	
        Normal = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRenderModeBestQuality']/*"/>	
        /// <msdn-id>ee719859</msdn-id>	
        /// <unmanaged>WICRawRenderModeBestQuality</unmanaged>	
        /// <unmanaged-short>WICRawRenderModeBestQuality</unmanaged-short>	
        BestQuality = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Specifies the rotation capabilities of the codec.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRotationCapabilities']/*"/>	
    /// <msdn-id>ee719860</msdn-id>	
    /// <unmanaged>WICRawRotationCapabilities</unmanaged>	
    /// <unmanaged-short>WICRawRotationCapabilities</unmanaged-short>	
    public enum RawRotationCapabilities : int {	
        
        /// <summary>	
        /// <dd> <p>Rotation is not supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRotationCapabilityNotSupported']/*"/>	
        /// <msdn-id>ee719860</msdn-id>	
        /// <unmanaged>WICRawRotationCapabilityNotSupported</unmanaged>	
        /// <unmanaged-short>WICRawRotationCapabilityNotSupported</unmanaged-short>	
        NotSupported = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Set operations for rotation is not supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRotationCapabilityGetSupported']/*"/>	
        /// <msdn-id>ee719860</msdn-id>	
        /// <unmanaged>WICRawRotationCapabilityGetSupported</unmanaged>	
        /// <unmanaged-short>WICRawRotationCapabilityGetSupported</unmanaged-short>	
        GetSupported = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>90 degree rotations are supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRotationCapabilityNinetyDegreesSupported']/*"/>	
        /// <msdn-id>ee719860</msdn-id>	
        /// <unmanaged>WICRawRotationCapabilityNinetyDegreesSupported</unmanaged>	
        /// <unmanaged-short>WICRawRotationCapabilityNinetyDegreesSupported</unmanaged-short>	
        NinetyDegreesSupported = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>All rotation angles are supported.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawRotationCapabilityFullySupported']/*"/>	
        /// <msdn-id>ee719860</msdn-id>	
        /// <unmanaged>WICRawRotationCapabilityFullySupported</unmanaged>	
        /// <unmanaged-short>WICRawRotationCapabilityFullySupported</unmanaged-short>	
        FullySupported = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Specifies the access level of a Windows Graphics Device Interface (GDI) section.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICSectionAccessLevel']/*"/>	
    /// <msdn-id>ee719864</msdn-id>	
    /// <unmanaged>WICSectionAccessLevel</unmanaged>	
    /// <unmanaged-short>WICSectionAccessLevel</unmanaged-short>	
    public enum SectionAccessLevel : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates a read only access level.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICSectionAccessLevelRead']/*"/>	
        /// <msdn-id>ee719864</msdn-id>	
        /// <unmanaged>WICSectionAccessLevelRead</unmanaged>	
        /// <unmanaged-short>WICSectionAccessLevelRead</unmanaged-short>	
        Read = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Indicates a read/write access level.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICSectionAccessLevelReadWrite']/*"/>	
        /// <msdn-id>ee719864</msdn-id>	
        /// <unmanaged>WICSectionAccessLevelReadWrite</unmanaged>	
        /// <unmanaged-short>WICSectionAccessLevelReadWrite</unmanaged-short>	
        ReadWrite = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Specifies the Tagged Image File Format (TIFF) compression options.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionOption']/*"/>	
    /// <msdn-id>ee719867</msdn-id>	
    /// <unmanaged>WICTiffCompressionOption</unmanaged>	
    /// <unmanaged-short>WICTiffCompressionOption</unmanaged-short>	
    public enum TiffCompressionOption : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates a suitable compression algorithm based on the image and pixel format.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionDontCare']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionDontCare</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionDontCare</unmanaged-short>	
        DontCare = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates no compression.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionNone']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionNone</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionNone</unmanaged-short>	
        None = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Indicates a CCITT3 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionCCITT3']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionCCITT3</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionCCITT3</unmanaged-short>	
        CCITT3 = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Indicates a CCITT4 compression algorithm. This algorithm is only valid for 1bpp pixel formats.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionCCITT4']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionCCITT4</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionCCITT4</unmanaged-short>	
        CCITT4 = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Indicates a LZW compression algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionLZW']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionLZW</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionLZW</unmanaged-short>	
        LZW = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Indicates a RLE compression algorithm. This algorithm is only valid for 1bpp pixel formats.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionRLE']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionRLE</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionRLE</unmanaged-short>	
        RLE = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Indicates a ZIP compression algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionZIP']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionZIP</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionZIP</unmanaged-short>	
        ZIP = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Indicates an LZWH differencing algorithm.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICTiffCompressionLZWHDifferencing']/*"/>	
        /// <msdn-id>ee719867</msdn-id>	
        /// <unmanaged>WICTiffCompressionLZWHDifferencing</unmanaged>	
        /// <unmanaged-short>WICTiffCompressionLZWHDifferencing</unmanaged-short>	
        LZWHDifferencing = unchecked((int)7),			
    }
}
