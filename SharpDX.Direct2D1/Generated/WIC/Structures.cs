// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.WIC namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:09 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.WIC {

#pragma warning disable 282
#pragma warning disable 649
#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>Contains members that identify a pattern within an image file which can be used to identify a particular format.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPattern']/*"/>	
    /// <msdn-id>ee719813</msdn-id>	
    /// <unmanaged>WICBitmapPattern</unmanaged>	
    /// <unmanaged-short>WICBitmapPattern</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct BitmapPattern {	
        
        /// <summary>	
        /// <dd> <p>The offset the pattern is located in the file.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPattern::Position']/*"/>	
        /// <msdn-id>ee719813</msdn-id>	
        /// <unmanaged>ULARGE_INTEGER Position</unmanaged>	
        /// <unmanaged-short>ULARGE_INTEGER Position</unmanaged-short>	
        public long Position;
        
        /// <summary>	
        /// <dd> <p>The pattern length.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPattern::Length']/*"/>	
        /// <msdn-id>ee719813</msdn-id>	
        /// <unmanaged>unsigned int Length</unmanaged>	
        /// <unmanaged-short>unsigned int Length</unmanaged-short>	
        public int Length;
        
        /// <summary>	
        /// <dd> <p>The actual pattern.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPattern::Pattern']/*"/>	
        /// <msdn-id>ee719813</msdn-id>	
        /// <unmanaged>unsigned char* Pattern</unmanaged>	
        /// <unmanaged-short>unsigned char Pattern</unmanaged-short>	
        public System.IntPtr Pattern;
        
        /// <summary>	
        /// <dd> <p>The pattern mask.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPattern::Mask']/*"/>	
        /// <msdn-id>ee719813</msdn-id>	
        /// <unmanaged>unsigned char* Mask</unmanaged>	
        /// <unmanaged-short>unsigned char Mask</unmanaged-short>	
        public System.IntPtr Mask;
        
        /// <summary>	
        /// <dd> <p>The end of the stream.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPattern::EndOfStream']/*"/>	
        /// <msdn-id>ee719813</msdn-id>	
        /// <unmanaged>BOOL EndOfStream</unmanaged>	
        /// <unmanaged-short>BOOL EndOfStream</unmanaged-short>	
        public SharpDX.Mathematics.Interop.RawBool EndOfStream;
    }
    
    /// <summary>	
    /// <p>Specifies the pixel format, buffer, stride and size of a component plane for a planar pixel format.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlane']/*"/>	
    /// <msdn-id>dn302099</msdn-id>	
    /// <unmanaged>WICBitmapPlane</unmanaged>	
    /// <unmanaged-short>WICBitmapPlane</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct BitmapPlane {	
        
        /// <summary>	
        /// <dd> <p>Describes the pixel format of the plane. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlane::Format']/*"/>	
        /// <msdn-id>dn302099</msdn-id>	
        /// <unmanaged>GUID Format</unmanaged>	
        /// <unmanaged-short>GUID Format</unmanaged-short>	
        public System.Guid Format;
        
        /// <summary>	
        /// <dd> <p>Pointer to the buffer that holds the plane?s pixel components.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlane::pbBuffer']/*"/>	
        /// <msdn-id>dn302099</msdn-id>	
        /// <unmanaged>unsigned char* pbBuffer</unmanaged>	
        /// <unmanaged-short>unsigned char pbBuffer</unmanaged-short>	
        public System.IntPtr PbBuffer;
        
        /// <summary>	
        /// <dd> <p>The stride of the buffer ponted to by <em>pbData</em>.  Stride indicates the total number of bytes to go from the beginning of one scanline to the beginning of the next scanline.</p> <dl> <dt><strong>cbStride</strong></dt> <dd><p></p></dd> <dd> <p>The total size of the buffer pointed to by <em>pbBuffer</em>.</p> </dd> </dl> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlane::cbStride']/*"/>	
        /// <msdn-id>dn302099</msdn-id>	
        /// <unmanaged>unsigned int cbStride</unmanaged>	
        /// <unmanaged-short>unsigned int cbStride</unmanaged-short>	
        public int CbStride;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlane::cbBufferSize']/*"/>	
        /// <msdn-id>dn302099</msdn-id>	
        /// <unmanaged>unsigned int cbBufferSize</unmanaged>	
        /// <unmanaged-short>unsigned int cbBufferSize</unmanaged-short>	
        public int CbBufferSize;
    }
    
    /// <summary>	
    /// <p>Specifies the pixel format and size of a component plane.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlaneDescription']/*"/>	
    /// <msdn-id>dn302100</msdn-id>	
    /// <unmanaged>WICBitmapPlaneDescription</unmanaged>	
    /// <unmanaged-short>WICBitmapPlaneDescription</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct BitmapPlaneDescription {	
        
        /// <summary>	
        /// <dd> <p>Describes the pixel format of the plane. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlaneDescription::Format']/*"/>	
        /// <msdn-id>dn302100</msdn-id>	
        /// <unmanaged>GUID Format</unmanaged>	
        /// <unmanaged-short>GUID Format</unmanaged-short>	
        public System.Guid Format;
        
        /// <summary>	
        /// <dd> <p>Component width of the plane.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlaneDescription::Width']/*"/>	
        /// <msdn-id>dn302100</msdn-id>	
        /// <unmanaged>unsigned int Width</unmanaged>	
        /// <unmanaged-short>unsigned int Width</unmanaged-short>	
        public int Width;
        
        /// <summary>	
        /// <dd> <p>Component height of the plane.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICBitmapPlaneDescription::Height']/*"/>	
        /// <msdn-id>dn302100</msdn-id>	
        /// <unmanaged>unsigned int Height</unmanaged>	
        /// <unmanaged-short>unsigned int Height</unmanaged-short>	
        public int Height;
    }
    
    /// <summary>	
    /// <p>Specifies the <strong><see cref="SharpDX.DXGI.Format"/></strong> and block information of a DDS format.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsFormatInfo']/*"/>	
    /// <msdn-id>dn302103</msdn-id>	
    /// <unmanaged>WICDdsFormatInfo</unmanaged>	
    /// <unmanaged-short>WICDdsFormatInfo</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct DdsFormatInfo {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsFormatInfo::DxgiFormat']/*"/>	
        /// <msdn-id>dn302103</msdn-id>	
        /// <unmanaged>DXGI_FORMAT DxgiFormat</unmanaged>	
        /// <unmanaged-short>DXGI_FORMAT DxgiFormat</unmanaged-short>	
        public SharpDX.DXGI.Format DxgiFormat;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsFormatInfo::BytesPerBlock']/*"/>	
        /// <msdn-id>dn302103</msdn-id>	
        /// <unmanaged>unsigned int BytesPerBlock</unmanaged>	
        /// <unmanaged-short>unsigned int BytesPerBlock</unmanaged-short>	
        public int BytesPerBlock;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsFormatInfo::BlockWidth']/*"/>	
        /// <msdn-id>dn302103</msdn-id>	
        /// <unmanaged>unsigned int BlockWidth</unmanaged>	
        /// <unmanaged-short>unsigned int BlockWidth</unmanaged-short>	
        public int BlockWidth;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsFormatInfo::BlockHeight']/*"/>	
        /// <msdn-id>dn302103</msdn-id>	
        /// <unmanaged>unsigned int BlockHeight</unmanaged>	
        /// <unmanaged-short>unsigned int BlockHeight</unmanaged-short>	
        public int BlockHeight;
    }
    
    /// <summary>	
    /// <p>Specifies the DDS image dimension, <strong><see cref="SharpDX.DXGI.Format"/></strong> and alpha mode of contained data.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters']/*"/>	
    /// <msdn-id>dn302104</msdn-id>	
    /// <unmanaged>WICDdsParameters</unmanaged>	
    /// <unmanaged-short>WICDdsParameters</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct DdsParameters {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::Width']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>unsigned int Width</unmanaged>	
        /// <unmanaged-short>unsigned int Width</unmanaged-short>	
        public int Width;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::Height']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>unsigned int Height</unmanaged>	
        /// <unmanaged-short>unsigned int Height</unmanaged-short>	
        public int Height;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::Depth']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>unsigned int Depth</unmanaged>	
        /// <unmanaged-short>unsigned int Depth</unmanaged-short>	
        public int Depth;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::MipLevels']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>unsigned int MipLevels</unmanaged>	
        /// <unmanaged-short>unsigned int MipLevels</unmanaged-short>	
        public int MipLevels;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::ArraySize']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>unsigned int ArraySize</unmanaged>	
        /// <unmanaged-short>unsigned int ArraySize</unmanaged-short>	
        public int ArraySize;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::DxgiFormat']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>DXGI_FORMAT DxgiFormat</unmanaged>	
        /// <unmanaged-short>DXGI_FORMAT DxgiFormat</unmanaged-short>	
        public SharpDX.DXGI.Format DxgiFormat;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::Dimension']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>WICDdsDimension Dimension</unmanaged>	
        /// <unmanaged-short>WICDdsDimension Dimension</unmanaged-short>	
        public SharpDX.WIC.DdsDimension Dimension;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICDdsParameters::AlphaMode']/*"/>	
        /// <msdn-id>dn302104</msdn-id>	
        /// <unmanaged>WICDdsAlphaMode AlphaMode</unmanaged>	
        /// <unmanaged-short>WICDdsAlphaMode AlphaMode</unmanaged-short>	
        public SharpDX.WIC.DdsAlphaMode AlphaMode;
    }
    
    /// <summary>	
    /// <p>This defines parameters that you can use to override the default parameters normally used when encoding an image. </p>	
    /// </summary>	
    /// <remarks>	
    /// <p>If this parameter is not passed to the encoding API, the encoder uses these settings.</p><ul> <li>A pixel format of (<strong><see cref="SharpDX.DXGI.Format.B8G8R8A8_UNorm"/></strong>, <strong><see cref="SharpDX.Direct2D1.AlphaMode.Premultiplied"/></strong>).</li> <li>An x and y DPI of 96.</li> <li>The entire image bounds will be used for encoding.</li> </ul><p><strong>Note</strong>??The parameters as specified can't result in a scale. The encoder can use a larger portion of the input image based on the passed in DPI and the pixel width and height.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters']/*"/>	
    /// <msdn-id>jj125331</msdn-id>	
    /// <unmanaged>WICImageParameters</unmanaged>	
    /// <unmanaged-short>WICImageParameters</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct ImageParameters {	
        
        /// <summary>	
        /// <dd> <p>The pixel format to which the image is processed before it is written to the encoder.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::PixelFormat']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>D2D1_PIXEL_FORMAT PixelFormat</unmanaged>	
        /// <unmanaged-short>D2D1_PIXEL_FORMAT PixelFormat</unmanaged-short>	
        public SharpDX.Direct2D1.PixelFormat PixelFormat;
        
        /// <summary>	
        /// <dd> <p>The DPI in the x dimension.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::DpiX']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>float DpiX</unmanaged>	
        /// <unmanaged-short>float DpiX</unmanaged-short>	
        public float DpiX;
        
        /// <summary>	
        /// <dd> <p>The DPI in the y dimension.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::DpiY']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>float DpiY</unmanaged>	
        /// <unmanaged-short>float DpiY</unmanaged-short>	
        public float DpiY;
        
        /// <summary>	
        /// <dd> <p>The top corner in pixels of the image space to be encoded to the destination.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::Top']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>float Top</unmanaged>	
        /// <unmanaged-short>float Top</unmanaged-short>	
        public float Top;
        
        /// <summary>	
        /// <dd> <p>The left corner in pixels of the image space to be encoded to the destination.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::Left']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>float Left</unmanaged>	
        /// <unmanaged-short>float Left</unmanaged-short>	
        public float Left;
        
        /// <summary>	
        /// <dd> <p>The width in pixels of the part of the image to write.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::PixelWidth']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>unsigned int PixelWidth</unmanaged>	
        /// <unmanaged-short>unsigned int PixelWidth</unmanaged-short>	
        public int PixelWidth;
        
        /// <summary>	
        /// <dd> <p>The height in pixels of the part of the image to write.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICImageParameters::PixelHeight']/*"/>	
        /// <msdn-id>jj125331</msdn-id>	
        /// <unmanaged>unsigned int PixelHeight</unmanaged>	
        /// <unmanaged-short>unsigned int PixelHeight</unmanaged-short>	
        public int PixelHeight;
    }
    
    /// <summary>	
    /// <p>Represents a JPEG frame header.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Get the frame header for an image by calling <strong><see cref="SharpDX.WIC.JpegFrameDecode.GetFrameHeader"/></strong>.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader']/*"/>	
    /// <msdn-id>dn903878</msdn-id>	
    /// <unmanaged>WICJpegFrameHeader</unmanaged>	
    /// <unmanaged-short>WICJpegFrameHeader</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct JpegFrameHeader {	
        
        /// <summary>	
        /// <dd> <p>The width of the JPEG frame.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::Width']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>unsigned int Width</unmanaged>	
        /// <unmanaged-short>unsigned int Width</unmanaged-short>	
        public int Width;
        
        /// <summary>	
        /// <dd> <p>The height of the JPEG frame.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::Height']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>unsigned int Height</unmanaged>	
        /// <unmanaged-short>unsigned int Height</unmanaged-short>	
        public int Height;
        
        /// <summary>	
        /// <dd> <p>The transfer matrix of the JPEG frame.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::TransferMatrix']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>WICJpegTransferMatrix TransferMatrix</unmanaged>	
        /// <unmanaged-short>WICJpegTransferMatrix TransferMatrix</unmanaged-short>	
        public SharpDX.WIC.JpegTransferMatrix TransferMatrix;
        
        /// <summary>	
        /// <dd> <p>The scan type of the JPEG frame.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::ScanType']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>WICJpegScanType ScanType</unmanaged>	
        /// <unmanaged-short>WICJpegScanType ScanType</unmanaged-short>	
        public SharpDX.WIC.JpegScanType ScanType;
        
        /// <summary>	
        /// <dd> <p>The number of components in the frame.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::cComponents']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>unsigned int cComponents</unmanaged>	
        /// <unmanaged-short>unsigned int cComponents</unmanaged-short>	
        public int CComponents;
        
        /// <summary>	
        /// <dd> <p>The component identifiers.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::ComponentIdentifiers']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>unsigned int ComponentIdentifiers</unmanaged>	
        /// <unmanaged-short>unsigned int ComponentIdentifiers</unmanaged-short>	
        public int ComponentIdentifiers;
        
        /// <summary>	
        /// <dd> <p>The sample factors. Use one of the following constants, described in <strong><see cref="SharpDX.WIC.JpegFrameDecode"/> Constants</strong>.</p> <ul> <li>WIC_JPEG_SAMPLE_FACTORS_ONE</li> <li>WIC_JPEG_SAMPLE_FACTORS_THREE_420</li> <li>WIC_JPEG_SAMPLE_FACTORS_THREE_422</li> <li>WIC_JPEG_SAMPLE_FACTORS_THREE_440</li> <li>WIC_JPEG_SAMPLE_FACTORS_THREE_444</li> </ul> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::SampleFactors']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>unsigned int SampleFactors</unmanaged>	
        /// <unmanaged-short>unsigned int SampleFactors</unmanaged-short>	
        public int SampleFactors;
        
        /// <summary>	
        /// <dd> <p>The format of the quantization table indices. Use one of the following constants, described in <strong><see cref="SharpDX.WIC.JpegFrameDecode"/> Constants</strong>.</p> <ul> <li>WIC_JPEG_QUANTIZATION_BASELINE_ONE</li> <li>WIC_JPEG_QUANTIZATION_BASELINE_THREE </li> </ul> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegFrameHeader::QuantizationTableIndices']/*"/>	
        /// <msdn-id>dn903878</msdn-id>	
        /// <unmanaged>unsigned int QuantizationTableIndices</unmanaged>	
        /// <unmanaged-short>unsigned int QuantizationTableIndices</unmanaged-short>	
        public int QuantizationTableIndices;
    }
    
    /// <summary>	
    /// <p>Represents a JPEG frame header.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Get the scan header for an image by calling <strong><see cref="SharpDX.WIC.JpegFrameDecode.GetScanHeader"/></strong>.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader']/*"/>	
    /// <msdn-id>dn903883</msdn-id>	
    /// <unmanaged>WICJpegScanHeader</unmanaged>	
    /// <unmanaged-short>WICJpegScanHeader</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct JpegScanHeader {	
        
        /// <summary>	
        /// <dd> <p>The number of components in the scan.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::cComponents']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned int cComponents</unmanaged>	
        /// <unmanaged-short>unsigned int cComponents</unmanaged-short>	
        public int CComponents;
        
        /// <summary>	
        /// <dd> <p>The interval of reset markers within the scan.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::RestartInterval']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned int RestartInterval</unmanaged>	
        /// <unmanaged-short>unsigned int RestartInterval</unmanaged-short>	
        public int RestartInterval;
        
        /// <summary>	
        /// <dd> <p>The component identifiers.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::ComponentSelectors']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned int ComponentSelectors</unmanaged>	
        /// <unmanaged-short>unsigned int ComponentSelectors</unmanaged-short>	
        public int ComponentSelectors;
        
        /// <summary>	
        /// <dd> <p>The format of the quantization table indices. Use one of the following constants, described in <strong><see cref="SharpDX.WIC.JpegFrameDecode"/> Constants</strong>.</p> <ul> <li>WIC_JPEG_HUFFMAN_BASELINE_ONE</li> <li>WIC_JPEG_HUFFMAN_BASELINE_THREE </li> </ul> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::HuffmanTableIndices']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned int HuffmanTableIndices</unmanaged>	
        /// <unmanaged-short>unsigned int HuffmanTableIndices</unmanaged-short>	
        public int HuffmanTableIndices;
        
        /// <summary>	
        /// <dd> <p>The start of the spectral selection.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::StartSpectralSelection']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned char StartSpectralSelection</unmanaged>	
        /// <unmanaged-short>unsigned char StartSpectralSelection</unmanaged-short>	
        public byte StartSpectralSelection;
        
        /// <summary>	
        /// <dd> <p>The end of the spectral selection.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::EndSpectralSelection']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned char EndSpectralSelection</unmanaged>	
        /// <unmanaged-short>unsigned char EndSpectralSelection</unmanaged-short>	
        public byte EndSpectralSelection;
        
        /// <summary>	
        /// <dd> <p>The successive approximation high.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::SuccessiveApproximationHigh']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned char SuccessiveApproximationHigh</unmanaged>	
        /// <unmanaged-short>unsigned char SuccessiveApproximationHigh</unmanaged-short>	
        public byte SuccessiveApproximationHigh;
        
        /// <summary>	
        /// <dd> <p>The successive approximation low.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICJpegScanHeader::SuccessiveApproximationLow']/*"/>	
        /// <msdn-id>dn903883</msdn-id>	
        /// <unmanaged>unsigned char SuccessiveApproximationLow</unmanaged>	
        /// <unmanaged-short>unsigned char SuccessiveApproximationLow</unmanaged-short>	
        public byte SuccessiveApproximationLow;
    }
    
    /// <summary>	
    /// <p>Defines raw codec capabilites.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo']/*"/>	
    /// <msdn-id>ee719857</msdn-id>	
    /// <unmanaged>WICRawCapabilitiesInfo</unmanaged>	
    /// <unmanaged-short>WICRawCapabilitiesInfo</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct RawCapabilitiesInfo {	
        
        /// <summary>	
        /// <dd> <p>Size of the <strong><see cref="SharpDX.WIC.RawCapabilitiesInfo"/></strong> structure.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::cbSize']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>unsigned int cbSize</unmanaged>	
        /// <unmanaged-short>unsigned int cbSize</unmanaged-short>	
        public int CbSize;
        
        /// <summary>	
        /// <dd> <p>The codec's major version.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::CodecMajorVersion']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>unsigned int CodecMajorVersion</unmanaged>	
        /// <unmanaged-short>unsigned int CodecMajorVersion</unmanaged-short>	
        public int CodecMajorVersion;
        
        /// <summary>	
        /// <dd> <p>The codec's minor version.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::CodecMinorVersion']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>unsigned int CodecMinorVersion</unmanaged>	
        /// <unmanaged-short>unsigned int CodecMinorVersion</unmanaged-short>	
        public int CodecMinorVersion;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of exposure compensation support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::ExposureCompensationSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities ExposureCompensationSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities ExposureCompensationSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities ExposureCompensationSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of contrast support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::ContrastSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities ContrastSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities ContrastSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities ContrastSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of RGB white point support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::RGBWhitePointSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities RGBWhitePointSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities RGBWhitePointSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities RGBWhitePointSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of <strong><see cref="SharpDX.WIC.NamedWhitePoint"/></strong> support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::NamedWhitePointSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities NamedWhitePointSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities NamedWhitePointSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities NamedWhitePointSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.NamedWhitePoint"/></strong> mask.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::NamedWhitePointSupportMask']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>unsigned int NamedWhitePointSupportMask</unmanaged>	
        /// <unmanaged-short>unsigned int NamedWhitePointSupportMask</unmanaged-short>	
        public int NamedWhitePointSupportMask;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of kelvin white point support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::KelvinWhitePointSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities KelvinWhitePointSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities KelvinWhitePointSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities KelvinWhitePointSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of gamma support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::GammaSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities GammaSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities GammaSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities GammaSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of tint support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::TintSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities TintSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities TintSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities TintSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of saturation support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::SaturationSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities SaturationSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities SaturationSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities SaturationSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of sharpness support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::SharpnessSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities SharpnessSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities SharpnessSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities SharpnessSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of noise reduction support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::NoiseReductionSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities NoiseReductionSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities NoiseReductionSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities NoiseReductionSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of destination color profile support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::DestinationColorProfileSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities DestinationColorProfileSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities DestinationColorProfileSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities DestinationColorProfileSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of tone curve support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::ToneCurveSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities ToneCurveSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities ToneCurveSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities ToneCurveSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawRotationCapabilities"/></strong> of rotation support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::RotationSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawRotationCapabilities RotationSupport</unmanaged>	
        /// <unmanaged-short>WICRawRotationCapabilities RotationSupport</unmanaged-short>	
        public SharpDX.WIC.RawRotationCapabilities RotationSupport;
        
        /// <summary>	
        /// <dd> <p>The <strong><see cref="SharpDX.WIC.RawCapabilities"/></strong> of <strong><see cref="SharpDX.WIC.RawRenderMode"/></strong> support.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawCapabilitiesInfo::RenderModeSupport']/*"/>	
        /// <msdn-id>ee719857</msdn-id>	
        /// <unmanaged>WICRawCapabilities RenderModeSupport</unmanaged>	
        /// <unmanaged-short>WICRawCapabilities RenderModeSupport</unmanaged-short>	
        public SharpDX.WIC.RawCapabilities RenderModeSupport;
    }
    
    /// <summary>	
    /// <p>Represents a raw image tone curve.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawToneCurve']/*"/>	
    /// <msdn-id>ee719861</msdn-id>	
    /// <unmanaged>WICRawToneCurve</unmanaged>	
    /// <unmanaged-short>WICRawToneCurve</unmanaged-short>	
    public  partial struct RawToneCurve {	
        
        /// <summary>	
        /// <dd> <p>The number of tone curve points.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawToneCurve::cPoints']/*"/>	
        /// <msdn-id>ee719861</msdn-id>	
        /// <unmanaged>unsigned int cPoints</unmanaged>	
        /// <unmanaged-short>unsigned int cPoints</unmanaged-short>	
        public int CPoints;
        
        /// <summary>	
        /// <dd> <p>The array of tone curve points.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawToneCurve::aPoints']/*"/>	
        /// <msdn-id>ee719861</msdn-id>	
        /// <unmanaged>WICRawToneCurvePoint aPoints[1]</unmanaged>	
        /// <unmanaged-short>WICRawToneCurvePoint aPoints</unmanaged-short>	
        public SharpDX.WIC.RawToneCurvePoint[] APoints { 
            get { return _APoints ?? (_APoints = new SharpDX.WIC.RawToneCurvePoint[1]);}
        }
        internal SharpDX.WIC.RawToneCurvePoint[] _APoints;

        // Internal native struct used for marshalling
        [StructLayout(LayoutKind.Sequential)]
        internal partial struct __Native {	
            public int CPoints;
            public SharpDX.WIC.RawToneCurvePoint APoints;
		    // Method to free unmanaged allocation
            internal unsafe void __MarshalFree()
            {   
            }
        }
		
		// Method to free unmanaged allocation
        internal unsafe void __MarshalFree(ref __Native @ref)
        {   
            @ref.__MarshalFree();
        }
		
		// Method to marshal from native to managed struct
        internal unsafe void __MarshalFrom(ref __Native @ref)
        {            
            this.CPoints = @ref.CPoints;
            fixed (void* __to = &this.APoints[0]) fixed (void* __from = &@ref.APoints) SharpDX.Utilities.CopyMemory((IntPtr) __to, (IntPtr) __from, 1*sizeof ( SharpDX.WIC.RawToneCurvePoint));
        }
        // Method to marshal from managed struct tot native
        internal unsafe void __MarshalTo(ref __Native @ref)
        {
            @ref.CPoints = this.CPoints;
            fixed (void* __to = &@ref.APoints) fixed (void* __from = &this.APoints[0]) SharpDX.Utilities.CopyMemory((IntPtr) __to, (IntPtr) __from, 1*sizeof ( SharpDX.WIC.RawToneCurvePoint));
		
		}
    }
    
    /// <summary>	
    /// <p>Represents a raw image tone curve point.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawToneCurvePoint']/*"/>	
    /// <msdn-id>ee719862</msdn-id>	
    /// <unmanaged>WICRawToneCurvePoint</unmanaged>	
    /// <unmanaged-short>WICRawToneCurvePoint</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct RawToneCurvePoint {	
        
        /// <summary>	
        /// <dd> <p>The tone curve input.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawToneCurvePoint::Input']/*"/>	
        /// <msdn-id>ee719862</msdn-id>	
        /// <unmanaged>double Input</unmanaged>	
        /// <unmanaged-short>double Input</unmanaged-short>	
        public double Input;
        
        /// <summary>	
        /// <dd> <p>The tone curve output.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WICRawToneCurvePoint::Output']/*"/>	
        /// <msdn-id>ee719862</msdn-id>	
        /// <unmanaged>double Output</unmanaged>	
        /// <unmanaged-short>double Output</unmanaged-short>	
        public double Output;
    }
}
