<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes">

    <!--  ===============================================================================  -->
    <!--  ResourceDictionary for TimePicker and related controls  -->
    <!--  ===============================================================================  -->

    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Margin="0,0,3,0"
                        Content="{Binding}"
                        Focusable="False"
                        Foreground="Gray" />
    </DataTemplate>

    <LinearGradientBrush x:Key="PopupDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFA3AEB9" />
        <GradientStop Offset="0.375" Color="#FF8399A9" />
        <GradientStop Offset="0.375" Color="#FF718597" />
        <GradientStop Offset="1" Color="#FF617584" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="TimePickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <chrome:ButtonChrome x:Name="ToggleButtonChrome"
                                             CornerRadius="0,2.75,2.75,0"
                                             RenderChecked="{Binding IsOpen,
                                                                     RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                    AncestorType=local:TimePicker}}"
                                             RenderEnabled="{Binding IsEnabled,
                                                                     RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                    AncestorType=local:TimePicker}}"
                                             RenderMouseOver="{TemplateBinding IsMouseOver}"
                                             RenderPressed="{TemplateBinding IsPressed}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Grid x:Name="arrowGlyph"
                                      Grid.Column="1"
                                      Margin="5"
                                      IsHitTestVisible="False">
                                    <Path x:Name="Arrow"
                                          Width="7"
                                          Height="4"
                                          Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                                          Fill="#FF000000" />
                                </Grid>
                            </Grid>
                        </chrome:ButtonChrome>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListItemHover" Color="#FFE7F5FD" />

    <Style x:Key="TimeItemStyle" TargetType="ListBoxItem">
        <Style.Setters>
            <Setter Property="Padding" Value="4" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ListItemHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ===============================================================================  -->
    <!--  TimePicker  -->
    <!--  ===============================================================================  -->

    <Style TargetType="{x:Type local:TimePicker}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TimePicker}">
                    <Grid x:Name="root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <local:ButtonSpinner x:Name="PART_Spinner"
                                             HorizontalContentAlignment="Stretch"
                                             VerticalContentAlignment="Stretch"
                                             AllowSpin="{TemplateBinding AllowSpin}"
                                             Background="{TemplateBinding Background}"
                                             BorderBrush="{TemplateBinding BorderBrush}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                                             IsTabStop="False"
                                             ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                            <local:WatermarkTextBox x:Name="PART_TextBox"
                                                    MinWidth="20"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    AcceptsReturn="False"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    FontStretch="{TemplateBinding FontStretch}"
                                                    FontStyle="{TemplateBinding FontStyle}"
                                                    FontWeight="{TemplateBinding FontWeight}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    IsTabStop="{TemplateBinding IsTabStop}"
                                                    IsUndoEnabled="{Binding IsUndoEnabled,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                    Padding="{TemplateBinding Padding}"
                                                    TabIndex="{TemplateBinding TabIndex}"
                                                    Text="{Binding Text,
                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                    TextAlignment="{TemplateBinding TextAlignment}"
                                                    TextWrapping="NoWrap"
                                                    Watermark="{TemplateBinding Watermark}"
                                                    WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
                        </local:ButtonSpinner>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               IsOpen="{Binding IsChecked,
                                                ElementName=_timePickerToggleButton}"
                               StaysOpen="False"
                               ToolTip="{x:Static sys:String.Empty}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border MinWidth="{Binding ActualWidth,
                                                       ElementName=root}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Background="{StaticResource PopupBackgroundBrush}"
                                    BorderBrush="{StaticResource PopupDarkBorderBrush}"
                                    BorderThickness="1">
                                <Grid>
                                    <ListBox x:Name="PART_TimeListItems"
                                             BorderThickness="0"
                                             DisplayMemberPath="Display"
                                             ItemContainerStyle="{StaticResource TimeItemStyle}" />
                                </Grid>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="_timePickerToggleButton"
                                      Grid.Column="1"
                                      Background="White"
                                      Focusable="False"
                                      IsChecked="{Binding IsOpen,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      IsEnabled="{Binding IsReadOnly,
                                                          RelativeSource={RelativeSource TemplatedParent},
                                                          Converter={StaticResource InverseBoolConverter}}"
                                      IsHitTestVisible="{Binding IsOpen,
                                                                 RelativeSource={RelativeSource TemplatedParent},
                                                                 Converter={StaticResource InverseBoolConverter}}"
                                      Style="{StaticResource TimePickerToggleButtonStyle}"
                                      Visibility="{TemplateBinding ShowDropDownButton,
                                                                   Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
