<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ScanToolStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="InputContextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>143, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Af//gAH///gD///4A////AP///8D////w/8=
</value>
  </data>
</root>