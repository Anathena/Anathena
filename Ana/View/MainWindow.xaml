<Window x:Class="Ana.View.MainWindow"
		x:Name="AnaWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:sysWindows="clr-namespace:System.Windows;assembly=PresentationCore"
		
		DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
		xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
		xmlns:intr="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
		xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:local="clr-namespace:Ana.Source.Docking"
		xmlns:view="clr-namespace:Ana.View"
		WindowStyle="None"
		AllowsTransparency="False"
		Title="Anathena" Height="640" Width="512">
	<Window.Resources>
		<avalonDock:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
	</Window.Resources>
	<WindowChrome.WindowChrome>
		<WindowChrome CaptionHeight="{Binding ActualHeight,ElementName=titlebar}"/>
	</WindowChrome.WindowChrome>
	<Grid>
		<intr:Interaction.Triggers>
			<intr:EventTrigger EventName="Loaded">
				<intr:InvokeCommandAction Command="{Binding LoadLayout}" CommandParameter="{Binding ., ElementName=dockManager}"/>
			</intr:EventTrigger>
			<intr:EventTrigger EventName="Unloaded">
				<intr:InvokeCommandAction Command="{Binding SaveLayout}" CommandParameter="{Binding ., ElementName=dockManager}"/>
			</intr:EventTrigger>
		</intr:Interaction.Triggers>

		<Grid.RowDefinitions>
			<!-- Title Bar Row -->
			<RowDefinition Height="Auto"/>
			<!-- Menu Bar Row -->
			<RowDefinition Height="Auto"/>
			<!-- Button Menu Bar Row -->
			<RowDefinition Height="Auto"/>
			<!-- Docking Panel Row -->
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		
		<!-- Title Bar -->
		<Grid Grid.Row="0"
			  Background="{StaticResource AvalonDock_Expression_BaseColor4}"
			  x:Name="titlebar">
			<Grid.ColumnDefinitions>
				<!-- Title Text Column -->
				<ColumnDefinition/>
				<!-- Buttons -->
				<ColumnDefinition Width="Auto"/>

			</Grid.ColumnDefinitions>
            <WrapPanel Grid.Column="0">
                <Image Width="24"
                       Height="24"
                       Margin="4"
                       Source="pack://application:,,,/Ana;component/Content/Icons/MainIcon.ico">
                </Image>
                <TextBlock Text="Anathena"
					       Foreground="{StaticResource AvalonDock_Expression_BaseColor7}"
					       VerticalAlignment="Center">
                </TextBlock>
            </WrapPanel>
			<Menu Grid.Column="1"
				  Background="Transparent"
				  VerticalAlignment="Center">
                <MenuItem ToolTip="Minimize"
                          Height="24"
						  shell:WindowChrome.IsHitTestVisibleInChrome="True"
						  Command="{Binding Minimize}"
						  CommandParameter="{Binding ElementName=AnaWindow}">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/Decreased.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
                <MenuItem ToolTip="Maximize/Restore"
                          Height="24"
						  shell:WindowChrome.IsHitTestVisibleInChrome="True"
						  Command="{Binding MaximizeRestore}"
						  CommandParameter="{Binding ElementName=AnaWindow}">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/Maximize.png"
							   Width="16"
							   Height="16"/>
						</MenuItem.Header>
				</MenuItem>
                <MenuItem ToolTip="Close"
                          Height="24"
						  shell:WindowChrome.IsHitTestVisibleInChrome="True"
						  Command="{Binding Close}"
						  CommandParameter="{Binding ElementName=AnaWindow}">
                    <MenuItem.Header>
                        <Image Source="pack://application:,,,/Ana;component/Content/Icons/X.png"
							   Width="16"
							   Height="16"/>
                    </MenuItem.Header>
                </MenuItem>
            </Menu>
		</Grid>

		<!-- Menu Bar -->
		<Grid Grid.Row="1" >
			<Menu Foreground="{StaticResource AvalonDock_Expression_BaseColor2}"
				  Background="{StaticResource AvalonDock_Expression_BaseColor4}"
				  BorderBrush="{StaticResource AvalonDock_Expression_BaseColor2}">
				<Menu.Resources>
					<Style x:Key="menuItemStyle" TargetType="{x:Type MenuItem}">
						<Setter Property="Foreground" Value="{StaticResource AvalonDock_Expression_BaseColor2}"></Setter>
						<Setter Property="Background" Value="{StaticResource AvalonDock_Expression_BaseColor4}"></Setter>
						<Setter Property="BorderBrush" Value="{StaticResource AvalonDock_Expression_BaseColor4}"></Setter>
						<Setter Property="BorderThickness" Value="0"></Setter>
					</Style>
				</Menu.Resources>
				<!-- File Header -->
				<MenuItem Header="File"
						  Style="{StaticResource DropDown}"
						  DataContext="{Binding Source={StaticResource ViewModelLocator}}">
					<MenuItem Header="Open"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Import Project"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Save"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Save As"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Exit"
							  Style="{StaticResource menuItemStyle}"/>
				</MenuItem>

				<!-- Edit Header -->
				<MenuItem Header="Edit"
						  Style="{StaticResource DropDown}"
						  DataContext="{Binding Source={StaticResource ViewModelLocator}}">
					<MenuItem Header="Settings"
							  IsChecked="{Binding SettingsViewModel.IsVisible, Mode=TwoWay}"
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
				</MenuItem>
				
				<!-- Tools Header -->
				<MenuItem Header="Tools"
						  Style="{StaticResource DropDown}"
						  DataContext="{Binding Source={StaticResource ViewModelLocator}}">
					<MenuItem Header="Cheat Browser" 
							  IsChecked="{Binding CheatBrowserViewModel.IsVisible, Mode=TwoWay}"
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Process Selector"
							  IsChecked="{Binding ProcessSelectorViewModel.IsVisible, Mode=TwoWay}"
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Project Explorer" 
							  IsChecked="{Binding ProjectExplorerViewModel.IsVisible, Mode=TwoWay}" 
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Property Viewer"
							  IsChecked="{Binding PropertyViewerViewModel.IsVisible, Mode=TwoWay}"
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Results"
							  IsChecked="{Binding ScanResultsViewModel.IsVisible, Mode=TwoWay}"
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Snapshot Manager" 
							  IsChecked="{Binding SnapshotManagerViewModel.IsVisible, Mode=TwoWay}" 
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header=".Net Explorer"
							  IsChecked="{Binding DotNetExplorerViewModel.IsVisible, Mode=TwoWay}"
							  IsCheckable="True"
							  Style="{StaticResource menuItemStyle}"/>
				</MenuItem>
				<MenuItem Header="Scans"
						  Style="{StaticResource DropDown}"
						  DataContext="{Binding Source={StaticResource ViewModelLocator}}">
					<MenuItem Header="Change Counter"
								  IsChecked="{Binding ChangeCounterViewModel.IsVisible, Mode=TwoWay}"
								  IsCheckable="True"
								  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Input Correlator"
								  IsChecked="{Binding InputCorrelatorViewModel.IsVisible, Mode=TwoWay}"
								  IsCheckable="True"
								  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Manual Scanner"
								  IsChecked="{Binding ManualScannerViewModel.IsVisible, Mode=TwoWay}"
								  IsCheckable="True"
								  Style="{StaticResource menuItemStyle}"/>
					<MenuItem Header="Label Thresholder"
								  IsChecked="{Binding LabelThresholderViewModel.IsVisible, Mode=TwoWay}" 
								  IsCheckable="True"
								  Style="{StaticResource menuItemStyle}"/>
				</MenuItem>
			</Menu>
		</Grid>

		<!-- Button Menu Bar -->
		<WrapPanel Grid.Row="2"
				   Background="{StaticResource AvalonDock_Expression_BaseColor4}">
			<Menu Background="Transparent"
				  Padding="4"
				  DataContext="{Binding Source={StaticResource ViewModelLocator}}">
				<MenuItem ToolTip="Select a Target Process"
						  Command="{Binding ProcessSelectorViewModel.ToggleVisibility}">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/SelectProcess.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
				<Separator Style="{DynamicResource VerticalSeparator}" />
				<MenuItem ToolTip="Open Cheat File">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/Open.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
				<MenuItem ToolTip="Save Cheat File">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/Save.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
				<Separator Style="{DynamicResource VerticalSeparator}" />
				<MenuItem ToolTip="New Scan">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/New.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
				<MenuItem ToolTip="Undo Scan">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/Undo.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
				<MenuItem ToolTip="Collect Values"
						  Command="{Binding ValueCollectorViewModel.CollectValuesCommand}">
					<MenuItem.Header>
						<Image Source="pack://application:,,,/Ana;component/Content/Icons/CollectValues.png"
							   Width="16"
							   Height="16"/>
					</MenuItem.Header>
				</MenuItem>
				<Separator Style="{DynamicResource VerticalSeparator}" />
				<MenuItem IsHitTestVisible="False">
					<MenuItem.Header>
						<TextBlock Text="{Binding ProcessSelectorViewModel.ProcessName}"
								   Foreground="{StaticResource AvalonDock_Expression_BaseColor2}">
						</TextBlock>
					</MenuItem.Header>
				</MenuItem>
			</Menu>
		</WrapPanel>

		<!-- Docking Panel AnchorablesSource="{Binding Tools}"-->
		<avalonDock:DockingManager x:Name="dockManager"
								   AnchorablesSource="{Binding Tools}" 
								   Grid.Row="3">
			<!-- Theme -->
			<avalonDock:DockingManager.Theme>
				<avalonDock:ExpressionDarkTheme/>
			</avalonDock:DockingManager.Theme>

			<!-- All Dockable Windows -->
			<avalonDock:DockingManager.LayoutItemTemplateSelector>
				<view:ViewTemplateSelector>
					<!-- Process Selector -->
					<view:ViewTemplateSelector.ProcessSelectorViewTemplate>
						<DataTemplate>
							<view:ProcessSelector/>
						</DataTemplate>
					</view:ViewTemplateSelector.ProcessSelectorViewTemplate>
					<!-- Change Counter -->
					<view:ViewTemplateSelector.ChangeCounterViewTemplate>
						<DataTemplate>
							<view:ChangeCounter/>
						</DataTemplate>
					</view:ViewTemplateSelector.ChangeCounterViewTemplate>
					<!-- Input Correlator -->
					<view:ViewTemplateSelector.InputCorrelatorViewTemplate>
						<DataTemplate>
							<view:InputCorrelator/>
						</DataTemplate>
					</view:ViewTemplateSelector.InputCorrelatorViewTemplate>
					<!-- Label Thresholder -->
					<view:ViewTemplateSelector.LabelThresholderViewTemplate>
						<DataTemplate>
							<view:LabelThresholder/>
						</DataTemplate>
					</view:ViewTemplateSelector.LabelThresholderViewTemplate>
					<!-- Manual Scanner -->
					<view:ViewTemplateSelector.ManualScannerViewTemplate>
						<DataTemplate>
							<view:ManualScanner/>
						</DataTemplate>
					</view:ViewTemplateSelector.ManualScannerViewTemplate>
					<!-- Snapshot Manager -->
					<view:ViewTemplateSelector.SnapshotManagerViewTemplate>
						<DataTemplate>
							<view:SnapshotManager/>
						</DataTemplate>
					</view:ViewTemplateSelector.SnapshotManagerViewTemplate>
					<!-- Scan Results -->
					<view:ViewTemplateSelector.ScanResultsViewTemplate>
						<DataTemplate>
							<view:ScanResults/>
						</DataTemplate>
					</view:ViewTemplateSelector.ScanResultsViewTemplate>
					<!-- Cheat Browser -->
					<view:ViewTemplateSelector.CheatBrowserViewTemplate>
						<DataTemplate>
							<view:CheatBrowser/>
						</DataTemplate>
					</view:ViewTemplateSelector.CheatBrowserViewTemplate>
					<!-- .Net Explorer -->
					<view:ViewTemplateSelector.DotNetExplorerViewTemplate>
						<DataTemplate>
							<view:DotNetExplorer/>
						</DataTemplate>
					</view:ViewTemplateSelector.DotNetExplorerViewTemplate>
					<!-- Property Viewer -->
					<view:ViewTemplateSelector.PropertyViewerViewTemplate>
						<DataTemplate>
							<view:PropertyViewer/>
						</DataTemplate>
					</view:ViewTemplateSelector.PropertyViewerViewTemplate>
					<!-- Settings -->
					<view:ViewTemplateSelector.SettingsViewTemplate>
						<DataTemplate>
							<view:Settings/>
						</DataTemplate>
					</view:ViewTemplateSelector.SettingsViewTemplate>
					<!-- Project Explorer -->
					<view:ViewTemplateSelector.ProjectExplorerViewTemplate>
						<DataTemplate>
							<view:ProjectExplorer/>
						</DataTemplate>
					</view:ViewTemplateSelector.ProjectExplorerViewTemplate>
				</view:ViewTemplateSelector>
			</avalonDock:DockingManager.LayoutItemTemplateSelector>

			<!-- Container Style -->
			<avalonDock:DockingManager.LayoutItemContainerStyleSelector>
				<local:PanesStyleSelector>
					<!-- General Docking Tools Style -->
					<local:PanesStyleSelector.ToolStyle>
						<Style TargetType="{x:Type avalonDock:LayoutAnchorableItem}">
							<Setter Property="Title" Value="{Binding Model.Title}"/>
							<Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
							<Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
							<Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
							<Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
							<Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
						</Style>
					</local:PanesStyleSelector.ToolStyle>
				</local:PanesStyleSelector>
			</avalonDock:DockingManager.LayoutItemContainerStyleSelector>

			<!-- Layout Style -->
			<avalonDock:LayoutRoot>
				<!-- Docking Group for All Windows -->
				<avalonDock:LayoutPanel/>
			</avalonDock:LayoutRoot>
		</avalonDock:DockingManager>
	</Grid>
</Window>
