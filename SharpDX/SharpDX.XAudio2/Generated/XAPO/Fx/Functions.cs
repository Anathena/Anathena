// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.XAPO.Fx namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:15 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.XAPO.Fx {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574

        /// <summary>	
        /// Functions	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='SharpDX.XAPO.Fx.Echo']/*"/>	
    public  partial class Echo {   
        
        /// <summary>Constant MinimumFeedback.</summary>
        /// <unmanaged>FXECHO_MIN_FEEDBACK</unmanaged>
        public const float MinimumFeedback = 0.0f;
        
        /// <summary>Constant DefaultDelay.</summary>
        /// <unmanaged>FXECHO_DEFAULT_DELAY</unmanaged>
        public const float DefaultDelay = 5.0e+2f;
        
        /// <summary>Constant MaximumFeedback.</summary>
        /// <unmanaged>FXECHO_MAX_FEEDBACK</unmanaged>
        public const float MaximumFeedback = 1.0e+0f;
        
        /// <summary>Constant MinimumDelay.</summary>
        /// <unmanaged>FXECHO_MIN_DELAY</unmanaged>
        public const float MinimumDelay = 1.0e+0f;
        
        /// <summary>Constant MaximumDelay.</summary>
        /// <unmanaged>FXECHO_MAX_DELAY</unmanaged>
        public const float MaximumDelay = 2.0e+3f;
        
        /// <summary>Constant MaximumWetdrymix.</summary>
        /// <unmanaged>FXECHO_MAX_WETDRYMIX</unmanaged>
        public const float MaximumWetdrymix = 1.0e+0f;
        
        /// <summary>Constant MinimumWetdrymix.</summary>
        /// <unmanaged>FXECHO_MIN_WETDRYMIX</unmanaged>
        public const float MinimumWetdrymix = 0.0f;
        
        /// <summary>Constant DefaultWetdrymix.</summary>
        /// <unmanaged>FXECHO_DEFAULT_WETDRYMIX</unmanaged>
        public const float DefaultWetdrymix = 5.0e-1f;
        
        /// <summary>Constant DefaultFeedback.</summary>
        /// <unmanaged>FXECHO_DEFAULT_FEEDBACK</unmanaged>
        public const float DefaultFeedback = 5.0e-1f;
    }
        /// <summary>	
        /// Functions	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='SharpDX.XAPO.Fx.Equalizer']/*"/>	
    public  partial class Equalizer {   
        
        /// <summary>Constant MaximumBandwidth.</summary>
        /// <unmanaged>FXEQ_MAX_BANDWIDTH</unmanaged>
        public const float MaximumBandwidth = 2.0e+0f;
        
        /// <summary>Constant MaximumFrameRate.</summary>
        /// <unmanaged>FXEQ_MAX_FRAMERATE</unmanaged>
        public const float MaximumFrameRate = 4.8e+4f;
        
        /// <summary>Constant MinimumBandwidth.</summary>
        /// <unmanaged>FXEQ_MIN_BANDWIDTH</unmanaged>
        public const float MinimumBandwidth = 1.00000001490116119384765625e-1f;
        
        /// <summary>Constant MinimumFrameRate.</summary>
        /// <unmanaged>FXEQ_MIN_FRAMERATE</unmanaged>
        public const float MinimumFrameRate = 2.2e+4f;
        
        /// <summary>Constant MaximumGain.</summary>
        /// <unmanaged>FXEQ_MAX_GAIN</unmanaged>
        public const float MaximumGain = 7.940000057220458984375e+0f;
        
        /// <summary>Constant DefaultFrequencyCenter2.</summary>
        /// <unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_2</unmanaged>
        public const float DefaultFrequencyCenter2 = 2.0e+3f;
        
        /// <summary>Constant MinimumGain.</summary>
        /// <unmanaged>FXEQ_MIN_GAIN</unmanaged>
        public const float MinimumGain = 1.2600000202655792236328125e-1f;
        
        /// <summary>Constant DefaultGain.</summary>
        /// <unmanaged>FXEQ_DEFAULT_GAIN</unmanaged>
        public const float DefaultGain = 1.0e+0f;
        
        /// <summary>Constant DefaultBandwidth.</summary>
        /// <unmanaged>FXEQ_DEFAULT_BANDWIDTH</unmanaged>
        public const float DefaultBandwidth = 1.0e+0f;
        
        /// <summary>Constant DefaultFrequencyCenter1.</summary>
        /// <unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_1</unmanaged>
        public const float DefaultFrequencyCenter1 = 8.0e+2f;
        
        /// <summary>Constant MaximumFrequencyCenter.</summary>
        /// <unmanaged>FXEQ_MAX_FREQUENCY_CENTER</unmanaged>
        public const float MaximumFrequencyCenter = 2.0e+4f;
        
        /// <summary>Constant DefaultFrequencyCenter3.</summary>
        /// <unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_3</unmanaged>
        public const float DefaultFrequencyCenter3 = 1.0e+4f;
        
        /// <summary>Constant DefaultFrequencyCenter0.</summary>
        /// <unmanaged>FXEQ_DEFAULT_FREQUENCY_CENTER_0</unmanaged>
        public const float DefaultFrequencyCenter0 = 1.0e+2f;
        
        /// <summary>Constant MinimumFrequencyCenter.</summary>
        /// <unmanaged>FXEQ_MIN_FREQUENCY_CENTER</unmanaged>
        public const float MinimumFrequencyCenter = 2.0e+1f;
    }
        /// <summary>	
        /// Functions	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='SharpDX.XAPO.Fx.MasteringLimiter']/*"/>	
    public  partial class MasteringLimiter {   
        
        /// <summary>Constant MinimumLoudness.</summary>
        /// <unmanaged>FXMASTERINGLIMITER_MIN_LOUDNESS</unmanaged>
        public const int MinimumLoudness = 1;
        
        /// <summary>Constant MaximumLoudness.</summary>
        /// <unmanaged>FXMASTERINGLIMITER_MAX_LOUDNESS</unmanaged>
        public const int MaximumLoudness = 1800;
        
        /// <summary>Constant DefaultLoudness.</summary>
        /// <unmanaged>FXMASTERINGLIMITER_DEFAULT_LOUDNESS</unmanaged>
        public const int DefaultLoudness = 1000;
        
        /// <summary>Constant MinimumRelease.</summary>
        /// <unmanaged>FXMASTERINGLIMITER_MIN_RELEASE</unmanaged>
        public const int MinimumRelease = 1;
        
        /// <summary>Constant MaximumRelease.</summary>
        /// <unmanaged>FXMASTERINGLIMITER_MAX_RELEASE</unmanaged>
        public const int MaximumRelease = 20;
        
        /// <summary>Constant DefaultRelease.</summary>
        /// <unmanaged>FXMASTERINGLIMITER_DEFAULT_RELEASE</unmanaged>
        public const int DefaultRelease = 6;
    }
        /// <summary>	
        /// Functions	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='SharpDX.XAPO.Fx.Reverb']/*"/>	
    public  partial class Reverb {   
        
        /// <summary>Constant MaximumRoomsize.</summary>
        /// <unmanaged>FXREVERB_MAX_ROOMSIZE</unmanaged>
        public const float MaximumRoomsize = 1.0e+0f;
        
        /// <summary>Constant MinimumRoomsize.</summary>
        /// <unmanaged>FXREVERB_MIN_ROOMSIZE</unmanaged>
        public const float MinimumRoomsize = 9.99999974737875163555145263671875e-5f;
        
        /// <summary>Constant MinimumDiffusion.</summary>
        /// <unmanaged>FXREVERB_MIN_DIFFUSION</unmanaged>
        public const float MinimumDiffusion = 0.0f;
        
        /// <summary>Constant DefaultRoomsize.</summary>
        /// <unmanaged>FXREVERB_DEFAULT_ROOMSIZE</unmanaged>
        public const float DefaultRoomsize = 6.0000002384185791015625e-1f;
        
        /// <summary>Constant MaximumDiffusion.</summary>
        /// <unmanaged>FXREVERB_MAX_DIFFUSION</unmanaged>
        public const float MaximumDiffusion = 1.0e+0f;
        
        /// <summary>Constant DefaultDiffusion.</summary>
        /// <unmanaged>FXREVERB_DEFAULT_DIFFUSION</unmanaged>
        public const float DefaultDiffusion = 8.9999997615814208984375e-1f;
    }
        /// <summary>	
        /// Functions	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='SharpDX.XAPO.Fx.XAPOFx']/*"/>	
    static  partial class XAPOFx {   
    }
}
