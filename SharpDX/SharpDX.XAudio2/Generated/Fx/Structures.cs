// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.XAudio2.Fx namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:09 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.XAudio2.Fx {

#pragma warning disable 282
#pragma warning disable 649
#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>Describes I3DL2 (Interactive 3D Audio Rendering Guidelines Level 2.0) parameters for use in the <strong>ReverbConvertI3DL2ToNative</strong> function.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>There are many preset values defined for the <strong><see cref="SharpDX.XAudio2.Fx.ReverbI3DL2Parameters"/></strong> structure. For more information, see <strong>XAUDIO2FX_I3DL2_PRESET</strong>. </p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS']/*"/>	
    /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
    /// <unmanaged>XAUDIO2FX_REVERB_I3DL2_PARAMETERS</unmanaged>	
    /// <unmanaged-short>XAUDIO2FX_REVERB_I3DL2_PARAMETERS</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct ReverbI3DL2Parameters {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::WetDryMix']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float WetDryMix</unmanaged>	
        /// <unmanaged-short>float WetDryMix</unmanaged-short>	
        public float WetDryMix;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::Room']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>int Room</unmanaged>	
        /// <unmanaged-short>int Room</unmanaged-short>	
        public int Room;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::RoomHF']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>int RoomHF</unmanaged>	
        /// <unmanaged-short>int RoomHF</unmanaged-short>	
        public int RoomHF;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::RoomRolloffFactor']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float RoomRolloffFactor</unmanaged>	
        /// <unmanaged-short>float RoomRolloffFactor</unmanaged-short>	
        public float RoomRolloffFactor;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::DecayTime']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float DecayTime</unmanaged>	
        /// <unmanaged-short>float DecayTime</unmanaged-short>	
        public float DecayTime;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::DecayHFRatio']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float DecayHFRatio</unmanaged>	
        /// <unmanaged-short>float DecayHFRatio</unmanaged-short>	
        public float DecayHFRatio;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::Reflections']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>int Reflections</unmanaged>	
        /// <unmanaged-short>int Reflections</unmanaged-short>	
        public int Reflections;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::ReflectionsDelay']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float ReflectionsDelay</unmanaged>	
        /// <unmanaged-short>float ReflectionsDelay</unmanaged-short>	
        public float ReflectionsDelay;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::Reverb']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>int Reverb</unmanaged>	
        /// <unmanaged-short>int Reverb</unmanaged-short>	
        public int Reverb;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::ReverbDelay']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float ReverbDelay</unmanaged>	
        /// <unmanaged-short>float ReverbDelay</unmanaged-short>	
        public float ReverbDelay;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::Diffusion']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float Diffusion</unmanaged>	
        /// <unmanaged-short>float Diffusion</unmanaged-short>	
        public float Diffusion;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::Density']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float Density</unmanaged>	
        /// <unmanaged-short>float Density</unmanaged-short>	
        public float Density;
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_I3DL2_PARAMETERS::HFReference']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_i3dl2_parameters</msdn-id>	
        /// <unmanaged>float HFReference</unmanaged>	
        /// <unmanaged-short>float HFReference</unmanaged-short>	
        public float HFReference;
    }
    
    /// <summary>	
    /// <p>Describes parameters for use in the reverb APO.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>All parameters related to sampling rate or time are relative to a 48kHz voice and must be scaled for use with other sampling rates. For example, setting <em>ReflectionsDelay</em> to 300ms gives a true 300ms delay when the reverb is hosted in a 48kHz voice, but becomes a 150ms delay when hosted in a 24kHz voice. </p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS']/*"/>	
    /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
    /// <unmanaged>XAUDIO2FX_REVERB_PARAMETERS</unmanaged>	
    /// <unmanaged-short>XAUDIO2FX_REVERB_PARAMETERS</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct ReverbParameters {	
        
        /// <summary>	
        /// <dd> <p>Percentage of the output that will be reverb. Allowable values are from 0 to 100.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::WetDryMix']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float WetDryMix</unmanaged>	
        /// <unmanaged-short>float WetDryMix</unmanaged-short>	
        public float WetDryMix;
        
        /// <summary>	
        /// <dd> <p>The delay time of the first reflection relative to the direct path. Permitted range is from 0 to 300 milliseconds. </p> <p><strong>Note</strong>??All parameters related to sampling rate or time are relative to a 48kHz sampling rate and must be scaled for use with other sampling rates. See remarks section below for additional information.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::ReflectionsDelay']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned int ReflectionsDelay</unmanaged>	
        /// <unmanaged-short>unsigned int ReflectionsDelay</unmanaged-short>	
        public int ReflectionsDelay;
        
        /// <summary>	
        /// <dd> <p>Delay of reverb relative to the first reflection. Permitted range is from 0 to 85 milliseconds.</p> <p><strong>Note</strong>??All parameters related to sampling rate or time are relative to a 48kHz sampling rate and must be scaled for use with other sampling rates. See remarks section below for additional information.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::ReverbDelay']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char ReverbDelay</unmanaged>	
        /// <unmanaged-short>unsigned char ReverbDelay</unmanaged-short>	
        public byte ReverbDelay;
        
        /// <summary>	
        /// <dd> <p>Delay for the left rear output and right rear output. Permitted range is from 0 to 5 milliseconds.</p> <p><strong>Note</strong>??All parameters related to sampling rate or time are relative to a 48kHz sampling rate and must be scaled for use with other sampling rates. See remarks section below for additional information.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::RearDelay']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char RearDelay</unmanaged>	
        /// <unmanaged-short>unsigned char RearDelay</unmanaged-short>	
        public byte RearDelay;
        
        /// <summary>	
        /// <dd> <p>Position of the left input within the simulated space relative to the listener. With <em>PositionLeft</em> set to the minimum value, the left input is placed close to the listener. In this position, early reflections are dominant, and the reverb decay is set back in the sound field and reduced in amplitude. With <em>PositionLeft</em> set to the maximum value, the left input is placed at a maximum distance from the listener within the simulated room. <em>PositionLeft</em> does not affect the reverb decay time (liveness of the room), only the apparent position of the source relative to the listener. Permitted range is from 0 to 30 (no units).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::SideDelay']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char SideDelay</unmanaged>	
        /// <unmanaged-short>unsigned char SideDelay</unmanaged-short>	
        public byte SideDelay;
        
        /// <summary>	
        /// <dd> <p>Position of the left input within the simulated space relative to the listener. With <em>PositionLeft</em> set to the minimum value, the left input is placed close to the listener. In this position, early reflections are dominant, and the reverb decay is set back in the sound field and reduced in amplitude. With <em>PositionLeft</em> set to the maximum value, the left input is placed at a maximum distance from the listener within the simulated room. <em>PositionLeft</em> does not affect the reverb decay time (liveness of the room), only the apparent position of the source relative to the listener. Permitted range is from 0 to 30 (no units).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::PositionLeft']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char PositionLeft</unmanaged>	
        /// <unmanaged-short>unsigned char PositionLeft</unmanaged-short>	
        public byte PositionLeft;
        
        /// <summary>	
        /// <dd> <p>Same as <em>PositionLeft</em>, but affecting only the right input. Permitted range is from 0 to 30 (no units). </p> <p><strong>Note</strong>??PositionRight is ignored in mono-in/mono-out mode.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::PositionRight']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char PositionRight</unmanaged>	
        /// <unmanaged-short>unsigned char PositionRight</unmanaged-short>	
        public byte PositionRight;
        
        /// <summary>	
        /// <dd> <p>Gives a greater or lesser impression of distance from the source to the listener. Permitted range is from 0 to 30 (no units).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::PositionMatrixLeft']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char PositionMatrixLeft</unmanaged>	
        /// <unmanaged-short>unsigned char PositionMatrixLeft</unmanaged-short>	
        public byte PositionMatrixLeft;
        
        /// <summary>	
        /// <dd> <p>Gives a greater or lesser impression of distance from the source to the listener. Permitted range is from 0 to 30 (no units). </p> <p><strong>Note</strong>??<em>PositionMatrixRight</em> is ignored in mono-in/mono-out mode.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::PositionMatrixRight']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char PositionMatrixRight</unmanaged>	
        /// <unmanaged-short>unsigned char PositionMatrixRight</unmanaged-short>	
        public byte PositionMatrixRight;
        
        /// <summary>	
        /// <dd> <p>Controls the character of the individual wall reflections. Set to minimum value to simulate a hard flat surface and to maximum value to simulate a diffuse surface. Permitted range is from 0 to 15 (no units). </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::EarlyDiffusion']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char EarlyDiffusion</unmanaged>	
        /// <unmanaged-short>unsigned char EarlyDiffusion</unmanaged-short>	
        public byte EarlyDiffusion;
        
        /// <summary>	
        /// <dd> <p>Controls the character of the individual wall reverberations. Set to minimum value to simulate a hard flat surface and to maximum value to simulate a diffuse surface. Permitted range is from 0 to 15 (no units). 	
        /// </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::LateDiffusion']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char LateDiffusion</unmanaged>	
        /// <unmanaged-short>unsigned char LateDiffusion</unmanaged-short>	
        public byte LateDiffusion;
        
        /// <summary>	
        /// <dd> <p>Adjusts the decay time of low frequencies relative to the decay time at 1 kHz. The values correspond to dB of gain as follows:  </p> <table> <tr><th>Value</th><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td></tr> <tr><th>Gain (dB)</th><td>-8</td><td>-7</td><td>-6</td><td>-5</td><td>-4</td><td>-3</td><td>-2</td><td>-1</td><td>0</td><td>+1</td><td>+2</td><td>+3</td><td>+4</td></tr> </table> <p>?</p> <p><strong>Note</strong>??A <em>LowEQGain</em> value of 8 results in the decay time of low frequencies being equal to the decay time at 1 kHz.</p> <p> Permitted range is from 0 to 12 (no units). </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::LowEQGain']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char LowEQGain</unmanaged>	
        /// <unmanaged-short>unsigned char LowEQGain</unmanaged-short>	
        public byte LowEQGain;
        
        /// <summary>	
        /// <dd> <p>Sets the corner frequency of the low pass filter that is controlled by the <em>LowEQGain</em> parameter. The values correspond to frequency in Hz as follows:  </p> <table> <tr><th>Value</th><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr> <tr><th>Frequency (Hz)</th><td>50</td><td>100</td><td>150</td><td>200</td><td>250</td><td>300</td><td>350</td><td>400</td><td>450</td><td>500</td></tr> </table> <p>?</p> <p>Permitted range is from 0 to 9 (no units). </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::LowEQCutoff']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char LowEQCutoff</unmanaged>	
        /// <unmanaged-short>unsigned char LowEQCutoff</unmanaged-short>	
        public byte LowEQCutoff;
        
        /// <summary>	
        /// <dd> <p>Adjusts the decay time of high frequencies relative to the decay time at 1 kHz. When set to zero, high frequencies decay at the same rate as 1 kHz. When set to maximum value, high frequencies decay at a much faster rate than 1 kHz. </p> <table> <tr><th>Value</th><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr> <tr><th>Gain (dB)</th><td>-8</td><td>-7</td><td>-6</td><td>-5</td><td>-4</td><td>-3</td><td>-2</td><td>-1</td><td>0</td></tr> </table> <p>?</p> <p>Permitted range is from 0 to 8 (no units). </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::HighEQGain']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char HighEQGain</unmanaged>	
        /// <unmanaged-short>unsigned char HighEQGain</unmanaged-short>	
        public byte HighEQGain;
        
        /// <summary>	
        /// <dd> <p>Sets the corner frequency of the high pass filter that is controlled by the <em>HighEQGain</em> parameter. The values correspond to frequency in kHz as follows:       </p> <table> <tr><th>Value</th><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td><td>11</td><td>12</td><td>13</td><td>14</td></tr> <tr><th>Frequency (kHz)</th><td>1</td><td>1.5</td><td>2</td><td>2.5</td><td>3</td><td>3.5</td><td>4</td><td>4.5</td><td>5</td><td>5.5</td><td>6</td><td>6.5</td><td>7</td><td>7.5</td><td>8</td></tr> </table> <p>?</p> <p>Permitted range is from 0 to 14 (no units).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::HighEQCutoff']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>unsigned char HighEQCutoff</unmanaged>	
        /// <unmanaged-short>unsigned char HighEQCutoff</unmanaged-short>	
        public byte HighEQCutoff;
        
        /// <summary>	
        /// <dd> <p>Sets the corner frequency of the low pass filter for the room effect. Permitted range is from 20 to 20,000 Hz.</p> <p><strong>Note</strong>??All parameters related to sampling rate or time are relative to a 48kHz sampling rate and must be scaled for use with other sampling rates. See remarks section below for additional information.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::RoomFilterFreq']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float RoomFilterFreq</unmanaged>	
        /// <unmanaged-short>float RoomFilterFreq</unmanaged-short>	
        public float RoomFilterFreq;
        
        /// <summary>	
        /// <dd> <p>Sets the pass band intensity level of the low-pass filter for both the early reflections and the late field reverberation. Permitted range is from -100 to 0 dB.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::RoomFilterMain']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float RoomFilterMain</unmanaged>	
        /// <unmanaged-short>float RoomFilterMain</unmanaged-short>	
        public float RoomFilterMain;
        
        /// <summary>	
        /// <dd> <p>Sets the intensity of the low-pass filter for both the early reflections and the late field reverberation at the corner frequency (<em>RoomFilterFreq</em>). Permitted range is from -100 to 0 dB.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::RoomFilterHF']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float RoomFilterHF</unmanaged>	
        /// <unmanaged-short>float RoomFilterHF</unmanaged-short>	
        public float RoomFilterHF;
        
        /// <summary>	
        /// <dd> <p>Adjusts the intensity of the early reflections. Permitted range is from -100 to 20 dB.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::ReflectionsGain']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float ReflectionsGain</unmanaged>	
        /// <unmanaged-short>float ReflectionsGain</unmanaged-short>	
        public float ReflectionsGain;
        
        /// <summary>	
        /// <dd> <p>Adjusts the intensity of the reverberations. Permitted range is from -100 to 20 dB.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::ReverbGain']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float ReverbGain</unmanaged>	
        /// <unmanaged-short>float ReverbGain</unmanaged-short>	
        public float ReverbGain;
        
        /// <summary>	
        /// <dd> <p>Reverberation decay time at 1 kHz. This is the time that a full scale input signal decays by 60 dB. Permitted range is from 0.1 to infinity seconds.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::DecayTime']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float DecayTime</unmanaged>	
        /// <unmanaged-short>float DecayTime</unmanaged-short>	
        public float DecayTime;
        
        /// <summary>	
        /// <dd> <p>Controls the modal density in the late field reverberation. For colorless spaces, <em>Density</em> should be set to the maximum value (100). As Density is decreased, the sound becomes hollow (comb filtered). This is an effect that can be useful if you are trying to model a silo. Permitted range as a percentage is from 0 to 100.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::Density']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float Density</unmanaged>	
        /// <unmanaged-short>float Density</unmanaged-short>	
        public float Density;
        
        /// <summary>	
        /// <dd> <p>The apparent size of the acoustic space. Permitted range is from 1 to 100 feet.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::RoomSize']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>float RoomSize</unmanaged>	
        /// <unmanaged-short>float RoomSize</unmanaged-short>	
        public float RoomSize;
        
        /// <summary>	
        /// <dd> <p>If set to TRUE, disables late field reflection calculations. Disabling late field reflection calculations results in a significant CPU time savings.</p> <p><strong>Note</strong>??The DirectX SDK versions of XAUDIO2 don't support this member.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_REVERB_PARAMETERS::DisableLateField']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_reverb_parameters</msdn-id>	
        /// <unmanaged>BOOL DisableLateField</unmanaged>	
        /// <unmanaged-short>BOOL DisableLateField</unmanaged-short>	
        public SharpDX.Mathematics.Interop.RawBool DisableLateField;
    }
    
    /// <summary>	
    /// <p>Describes parameters for use with the volume meter APO.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>This structure is used with the <strong>XAudio2 <see cref="SharpDX.XAudio2.Voice.GetEffectParameters"/></strong> method. </p><p><em>pPeakLevels</em> and <em>pRMSLevels</em> are not returned by <strong><see cref="SharpDX.XAudio2.Voice.GetEffectParameters"/></strong>, the arrays are only filled out if they are present. If <em>pPeakLevels</em> and <em>pRMSLevels</em> are used they must be allocated by the application. The application is responsible for freeing the arrays when they are no longer needed. </p><p><em>ChannelCount</em> must be set by the application to match the number of channels in the voice the effect is applied to.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_VOLUMEMETER_LEVELS']/*"/>	
    /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_volumemeter_levels</msdn-id>	
    /// <unmanaged>XAUDIO2FX_VOLUMEMETER_LEVELS</unmanaged>	
    /// <unmanaged-short>XAUDIO2FX_VOLUMEMETER_LEVELS</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct VolumeMeterLevels {	
        
        /// <summary>	
        /// <dd> <p>Array that will be filled with the maximum absolute level for each channel during a processing pass. The array must be at least <em>ChannelCount</em> ? sizeof(float) bytes. <em>pPeakLevels</em> may be <c>null</c> if <em>pRMSLevels</em> is not <c>null</c>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_VOLUMEMETER_LEVELS::pPeakLevels']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_volumemeter_levels</msdn-id>	
        /// <unmanaged>float* pPeakLevels</unmanaged>	
        /// <unmanaged-short>float pPeakLevels</unmanaged-short>	
        internal System.IntPtr PeakLevelPointer;
        
        /// <summary>	
        /// <dd> <p>Array that will be filled with root mean square level for each channel during a processing pass. The array must be at least <em>ChannelCount</em> ? sizeof(float) bytes. <em>pRMSLevels</em> may be <c>null</c> if <em>pPeakLevels</em> is not <c>null</c>.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_VOLUMEMETER_LEVELS::pRMSLevels']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_volumemeter_levels</msdn-id>	
        /// <unmanaged>float* pRMSLevels</unmanaged>	
        /// <unmanaged-short>float pRMSLevels</unmanaged-short>	
        internal System.IntPtr RmsLevelsPointer;
        
        /// <summary>	
        /// <dd> <p>Number of channels being processed.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='XAUDIO2FX_VOLUMEMETER_LEVELS::ChannelCount']/*"/>	
        /// <msdn-id>microsoft.directx_sdk.xaudio2.xaudio2fx_volumemeter_levels</msdn-id>	
        /// <unmanaged>unsigned int ChannelCount</unmanaged>	
        /// <unmanaged-short>unsigned int ChannelCount</unmanaged-short>	
        public int ChannelCount;
    }
}
