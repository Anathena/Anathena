// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.DirectComposition namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:06 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.DirectComposition {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>Specifies the backface visibility to be applied to a visual.  </p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BACKFACE_VISIBILITY']/*"/>	
    /// <msdn-id>dn280348</msdn-id>	
    /// <unmanaged>DCOMPOSITION_BACKFACE_VISIBILITY</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_BACKFACE_VISIBILITY</unmanaged-short>	
    public enum BackFaceVisibility : int {	
        
        /// <summary>	
        /// <dd> <p>Surfaces in this visual's sub-tree are visible regardless of transformation.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BACKFACE_VISIBILITY_VISIBLE']/*"/>	
        /// <msdn-id>dn280348</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BACKFACE_VISIBILITY_VISIBLE</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BACKFACE_VISIBILITY_VISIBLE</unmanaged-short>	
        Visible = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Surfaces in this visual's sub-tree are only visible when facing the observer.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BACKFACE_VISIBILITY_HIDDEN']/*"/>	
        /// <msdn-id>dn280348</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BACKFACE_VISIBILITY_HIDDEN</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BACKFACE_VISIBILITY_HIDDEN</unmanaged-short>	
        Hidden = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The back face visibility is the same as that of the target visual's parent visual.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BACKFACE_VISIBILITY_INHERIT']/*"/>	
        /// <msdn-id>dn280348</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BACKFACE_VISIBILITY_INHERIT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BACKFACE_VISIBILITY_INHERIT</unmanaged-short>	
        Inherit = unchecked((int)-1),			
    }
    
    /// <summary>	
    /// <p>Specifies the interpolation mode to be used when a bitmap is composed with any transform where the pixels in the bitmap don't line up exactly one-to-one with pixels on screen. </p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The default interpolation mode for a visual is <strong><see cref="SharpDX.DirectComposition.BitmapInterpolationMode.Inherit"/></strong>. If all visuals in a visual tree specify this mode, the default for all visuals is nearest neighbor sampling, which is the fastest mode.</p><p>A single visual can have any combination of visual properties. However, if a 	
    /// visual has the following combination of properties, the borders of the visual will default 	
    /// to <strong><see cref="SharpDX.DirectComposition.BorderMode.Hard"/></strong>. </p><ul> <li><code>SetCompositeMode(<see cref="SharpDX.DirectComposition.CompositeMode.DestinationInvert"/>)	
    /// </code></li> <li><code>SetBorderMode(<see cref="SharpDX.DirectComposition.BorderMode.Soft"/>) 	
    /// </code></li> <li><code>SetBitmapInterpolationMode(<see cref="SharpDX.DirectComposition.BitmapInterpolationMode.NearestNeighbor"/>)</code></li> </ul><p>If you want a visual to be drawn with antialiasing, use <strong><see cref="SharpDX.DirectComposition.BitmapInterpolationMode.Linear"/></strong> for the content of the visual, and <strong><see cref="SharpDX.DirectComposition.BorderMode.Soft"/></strong> for the edges.	
    /// </p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BITMAP_INTERPOLATION_MODE']/*"/>	
    /// <msdn-id>hh437364</msdn-id>	
    /// <unmanaged>DCOMPOSITION_BITMAP_INTERPOLATION_MODE</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_BITMAP_INTERPOLATION_MODE</unmanaged-short>	
    public enum BitmapInterpolationMode : int {	
        
        /// <summary>	
        /// <dd> <p>Bitmaps are interpolated by using nearest-neighbor sampling.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR']/*"/>	
        /// <msdn-id>hh437364</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BITMAP_INTERPOLATION_MODE_NEAREST_NEIGHBOR</unmanaged-short>	
        NearestNeighbor = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Bitmaps are interpolated by using linear sampling.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BITMAP_INTERPOLATION_MODE_LINEAR']/*"/>	
        /// <msdn-id>hh437364</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BITMAP_INTERPOLATION_MODE_LINEAR</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BITMAP_INTERPOLATION_MODE_LINEAR</unmanaged-short>	
        Linear = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Bitmaps are interpolated according to the mode established by the parent visual.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BITMAP_INTERPOLATION_MODE_INHERIT']/*"/>	
        /// <msdn-id>hh437364</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BITMAP_INTERPOLATION_MODE_INHERIT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BITMAP_INTERPOLATION_MODE_INHERIT</unmanaged-short>	
        Inherit = unchecked((int)-1),			
    }
    
    /// <summary>	
    /// <p>Specifies the border mode to use when composing a bitmap or applying a clip with any transform such that the edges of the bitmap or clip are not axis-aligned with integer coordinates. </p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The default border mode for any given visual is <strong><see cref="SharpDX.DirectComposition.BorderMode.Inherit"/></strong>, which delegates the determination of the border mode to the parent visual. If all visuals in a visual tree specify this mode, the default for all visuals is aliased rendering, which is the fastest mode.</p><p>A single visual can have any combination of visual properties. However, if a 	
    /// visual has the following combination of properties, the borders of the visual will default 	
    /// to <strong><see cref="SharpDX.DirectComposition.BorderMode.Hard"/></strong>. </p><ul> <li><code>SetCompositeMode(<see cref="SharpDX.DirectComposition.CompositeMode.DestinationInvert"/>)	
    /// </code></li> <li><code>SetBorderMode(<see cref="SharpDX.DirectComposition.BorderMode.Soft"/>) 	
    /// </code></li> <li><code>SetBitmapInterpolationMode(<see cref="SharpDX.DirectComposition.BitmapInterpolationMode.NearestNeighbor"/>)</code></li> </ul><p>If you want a visual to be drawn with antialiasing, use <strong><see cref="SharpDX.DirectComposition.BitmapInterpolationMode.Linear"/></strong> for the content of the visual, and <strong><see cref="SharpDX.DirectComposition.BorderMode.Soft"/></strong> for the edges.	
    /// </p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BORDER_MODE']/*"/>	
    /// <msdn-id>hh437365</msdn-id>	
    /// <unmanaged>DCOMPOSITION_BORDER_MODE</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_BORDER_MODE</unmanaged-short>	
    public enum BorderMode : int {	
        
        /// <summary>	
        /// <dd> <p>Bitmap and clip edges are antialiased.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BORDER_MODE_SOFT']/*"/>	
        /// <msdn-id>hh437365</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BORDER_MODE_SOFT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BORDER_MODE_SOFT</unmanaged-short>	
        Soft = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Bitmap and clip edges are aliased. See Remarks.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BORDER_MODE_HARD']/*"/>	
        /// <msdn-id>hh437365</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BORDER_MODE_HARD</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BORDER_MODE_HARD</unmanaged-short>	
        Hard = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Bitmap and clip edges are drawn according to the mode established by the parent visual.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_BORDER_MODE_INHERIT']/*"/>	
        /// <msdn-id>hh437365</msdn-id>	
        /// <unmanaged>DCOMPOSITION_BORDER_MODE_INHERIT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_BORDER_MODE_INHERIT</unmanaged-short>	
        Inherit = unchecked((int)-1),			
    }
    
    /// <summary>	
    /// <p>The mode to use to blend the bitmap content of a visual with  the render target.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>A single visual can have any combination of visual properties. However, if a 	
    /// visual has the following combination of properties, the borders of the visual will default 	
    /// to <strong><see cref="SharpDX.DirectComposition.BorderMode.Hard"/></strong>. </p><ul> <li><code>SetCompositeMode(<see cref="SharpDX.DirectComposition.CompositeMode.DestinationInvert"/>)	
    /// </code></li> <li><code>SetBorderMode(<see cref="SharpDX.DirectComposition.BorderMode.Soft"/>) 	
    /// </code></li> <li><code>SetBitmapInterpolationMode(<see cref="SharpDX.DirectComposition.BitmapInterpolationMode.NearestNeighbor"/>)</code></li> </ul><p>If you want a visual to be drawn with antialiasing, use <strong><see cref="SharpDX.DirectComposition.BitmapInterpolationMode.Linear"/></strong> for the content of the visual, and <strong><see cref="SharpDX.DirectComposition.BorderMode.Soft"/></strong> for the edges.	
    /// </p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_COMPOSITE_MODE']/*"/>	
    /// <msdn-id>Hh802900</msdn-id>	
    /// <unmanaged>DCOMPOSITION_COMPOSITE_MODE</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_COMPOSITE_MODE</unmanaged-short>	
    public enum CompositeMode : int {	
        
        /// <summary>	
        /// <dd> <p>The standard source-over-destination blend mode.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_COMPOSITE_MODE_SOURCE_OVER']/*"/>	
        /// <msdn-id>Hh802900</msdn-id>	
        /// <unmanaged>DCOMPOSITION_COMPOSITE_MODE_SOURCE_OVER</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_COMPOSITE_MODE_SOURCE_OVER</unmanaged-short>	
        SourceOver = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The bitmap colors are inverted.  </p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_COMPOSITE_MODE_DESTINATION_INVERT']/*"/>	
        /// <msdn-id>Hh802900</msdn-id>	
        /// <unmanaged>DCOMPOSITION_COMPOSITE_MODE_DESTINATION_INVERT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_COMPOSITE_MODE_DESTINATION_INVERT</unmanaged-short>	
        DestinationInvert = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Bitmap colors subtract for color channels in the background.  </p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_COMPOSITE_MODE_MIN_BLEND']/*"/>	
        /// <msdn-id>Hh802900</msdn-id>	
        /// <unmanaged>DCOMPOSITION_COMPOSITE_MODE_MIN_BLEND</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_COMPOSITE_MODE_MIN_BLEND</unmanaged-short>	
        MinimumBlend = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Bitmaps are blended according to the mode established by the parent visual. </p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_COMPOSITE_MODE_INHERIT']/*"/>	
        /// <msdn-id>Hh802900</msdn-id>	
        /// <unmanaged>DCOMPOSITION_COMPOSITE_MODE_INHERIT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_COMPOSITE_MODE_INHERIT</unmanaged-short>	
        Inherit = unchecked((int)-1),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_DEPTH_MODE']/*"/>	
    /// <unmanaged>DCOMPOSITION_DEPTH_MODE</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_DEPTH_MODE</unmanaged-short>	
    public enum DepthMode : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_DEPTH_MODE_TREE']/*"/>	
        /// <unmanaged>DCOMPOSITION_DEPTH_MODE_TREE</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_DEPTH_MODE_TREE</unmanaged-short>	
        Tree = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_DEPTH_MODE_SPATIAL']/*"/>	
        /// <unmanaged>DCOMPOSITION_DEPTH_MODE_SPATIAL</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_DEPTH_MODE_SPATIAL</unmanaged-short>	
        Spatial = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_DEPTH_MODE_INHERIT']/*"/>	
        /// <unmanaged>DCOMPOSITION_DEPTH_MODE_INHERIT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_DEPTH_MODE_INHERIT</unmanaged-short>	
        Inherit = unchecked((int)-1),			
    }
    
    /// <summary>	
    /// <p>Specifies how the effective opacity value of a visual is applied to that visual?s content and children.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_OPACITY_MODE']/*"/>	
    /// <msdn-id>dn280349</msdn-id>	
    /// <unmanaged>DCOMPOSITION_OPACITY_MODE</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_OPACITY_MODE</unmanaged-short>	
    public enum OpacityMode : int {	
        
        /// <summary>	
        /// <dd> <p>The target visual defines a logical layer into which its entire sub-tree is composed with a starting effective opacity of 1.0. The original opacity value is then used to blend the layer onto the visual?s background.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_OPACITY_MODE_LAYER']/*"/>	
        /// <msdn-id>dn280349</msdn-id>	
        /// <unmanaged>DCOMPOSITION_OPACITY_MODE_LAYER</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_OPACITY_MODE_LAYER</unmanaged-short>	
        Layer = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The opacity value is multiplied with the effective opacity of the parent visual and the result is then individually applied to each piece of content in this visual?s sub-tree.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_OPACITY_MODE_MULTIPLY']/*"/>	
        /// <msdn-id>dn280349</msdn-id>	
        /// <unmanaged>DCOMPOSITION_OPACITY_MODE_MULTIPLY</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_OPACITY_MODE_MULTIPLY</unmanaged-short>	
        Multiply = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The opacity mode is the same as that of the target visual?s parent visual.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_OPACITY_MODE_INHERIT']/*"/>	
        /// <msdn-id>dn280349</msdn-id>	
        /// <unmanaged>DCOMPOSITION_OPACITY_MODE_INHERIT</unmanaged>	
        /// <unmanaged-short>DCOMPOSITION_OPACITY_MODE_INHERIT</unmanaged-short>	
        Inherit = unchecked((int)-1),			
    }
}
