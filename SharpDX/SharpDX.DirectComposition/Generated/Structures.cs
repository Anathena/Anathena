// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.DirectComposition namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:09 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.DirectComposition {

#pragma warning disable 282
#pragma warning disable 649
#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>Describes timing and composition statistics for a frame.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The <strong><see cref="SharpDX.DirectComposition.Device.GetFrameStatistics"/></strong> method fills this structure. An application can use the information in this structure to estimate the timestamp of the next few frames that will be started by the composition engine. Note that this is only an estimate because the composition engine may or may not compose the next frame, depending on whether any active animations or other work are pending for that frame. In addition, the composition engine may change frame rates according to the cost of composing individual frames.</p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_FRAME_STATISTICS']/*"/>	
    /// <msdn-id>hh437366</msdn-id>	
    /// <unmanaged>DCOMPOSITION_FRAME_STATISTICS</unmanaged>	
    /// <unmanaged-short>DCOMPOSITION_FRAME_STATISTICS</unmanaged-short>	
    [StructLayout(LayoutKind.Sequential)]
    public  partial struct FrameStatistics {	
        
        /// <summary>	
        /// <dd> <p>The time stamp of the last batch of commands to be processed by the composition engine.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_FRAME_STATISTICS::lastFrameTime']/*"/>	
        /// <msdn-id>hh437366</msdn-id>	
        /// <unmanaged>LARGE_INTEGER lastFrameTime</unmanaged>	
        /// <unmanaged-short>LARGE_INTEGER lastFrameTime</unmanaged-short>	
        public long LastFrameTime;
        
        /// <summary>	
        /// <dd> <p>The rate at which the composition engine is producing frames, in frames per second.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_FRAME_STATISTICS::currentCompositionRate']/*"/>	
        /// <msdn-id>hh437366</msdn-id>	
        /// <unmanaged>DXGI_RATIONAL currentCompositionRate</unmanaged>	
        /// <unmanaged-short>DXGI_RATIONAL currentCompositionRate</unmanaged-short>	
        public SharpDX.DXGI.Rational CurrentCompositionRate;
        
        /// <summary>	
        /// <dd> <p>The current time as computed by the <strong>QueryPerformanceCounter</strong> function.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_FRAME_STATISTICS::currentTime']/*"/>	
        /// <msdn-id>hh437366</msdn-id>	
        /// <unmanaged>LARGE_INTEGER currentTime</unmanaged>	
        /// <unmanaged-short>LARGE_INTEGER currentTime</unmanaged-short>	
        public long CurrentTime;
        
        /// <summary>	
        /// <dd> <p>The units in which the <strong>lastFrameTime</strong> and <strong>currentTime</strong> members are specified, in Hertz.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_FRAME_STATISTICS::timeFrequency']/*"/>	
        /// <msdn-id>hh437366</msdn-id>	
        /// <unmanaged>LARGE_INTEGER timeFrequency</unmanaged>	
        /// <unmanaged-short>LARGE_INTEGER timeFrequency</unmanaged-short>	
        public long TimeFrequency;
        
        /// <summary>	
        /// <dd> <p>The estimated time when the next frame will be displayed.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DCOMPOSITION_FRAME_STATISTICS::nextEstimatedFrameTime']/*"/>	
        /// <msdn-id>hh437366</msdn-id>	
        /// <unmanaged>LARGE_INTEGER nextEstimatedFrameTime</unmanaged>	
        /// <unmanaged-short>LARGE_INTEGER nextEstimatedFrameTime</unmanaged-short>	
        public long NextEstimatedFrameTime;
    }
}
