// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.DirectWrite namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:06 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.DirectWrite {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.Baseline"/></strong> enumeration contains values that specify the baseline for text alignment.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE']/*"/>	
    /// <msdn-id>jj126257</msdn-id>	
    /// <unmanaged>DWRITE_BASELINE</unmanaged>	
    /// <unmanaged-short>DWRITE_BASELINE</unmanaged-short>	
    public enum Baseline : int {	
        
        /// <summary>	
        /// <dd> <p>The Roman baseline for horizontal; the Central baseline for vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_DEFAULT']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_DEFAULT</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The baseline that is used by alphabetic scripts such as Latin, Greek, and Cyrillic.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_ROMAN']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_ROMAN</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_ROMAN</unmanaged-short>	
        Roman = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Central baseline, which is generally used for vertical text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_CENTRAL']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_CENTRAL</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_CENTRAL</unmanaged-short>	
        Central = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Mathematical baseline, which math characters are centered on.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_MATH']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_MATH</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_MATH</unmanaged-short>	
        Math = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Hanging baseline, which is used in scripts like Devanagari.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_HANGING']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_HANGING</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_HANGING</unmanaged-short>	
        Hanging = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Ideographic bottom baseline for CJK, left in vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_IDEOGRAPHIC_BOTTOM']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_IDEOGRAPHIC_BOTTOM</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_IDEOGRAPHIC_BOTTOM</unmanaged-short>	
        IdeographicBottom = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Ideographic top baseline for CJK, right in vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_IDEOGRAPHIC_TOP']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_IDEOGRAPHIC_TOP</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_IDEOGRAPHIC_TOP</unmanaged-short>	
        IdeographicTop = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The bottom-most extent in horizontal, left-most in vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_MINIMUM']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_MINIMUM</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_MINIMUM</unmanaged-short>	
        Minimum = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>The top-most extent in horizontal, right-most in vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BASELINE_MAXIMUM']/*"/>	
        /// <msdn-id>jj126257</msdn-id>	
        /// <unmanaged>DWRITE_BASELINE_MAXIMUM</unmanaged>	
        /// <unmanaged-short>DWRITE_BASELINE_MAXIMUM</unmanaged-short>	
        Maximum = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p> Indicates the condition at the edges of inline object or text used to determine line-breaking behavior.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BREAK_CONDITION']/*"/>	
    /// <msdn-id>dd368051</msdn-id>	
    /// <unmanaged>DWRITE_BREAK_CONDITION</unmanaged>	
    /// <unmanaged-short>DWRITE_BREAK_CONDITION</unmanaged-short>	
    public enum BreakCondition : int {	
        
        /// <summary>	
        /// <dd> <p> Indicates whether a break is allowed by determining  the condition of the neighboring text span or inline object.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BREAK_CONDITION_NEUTRAL']/*"/>	
        /// <msdn-id>dd368051</msdn-id>	
        /// <unmanaged>DWRITE_BREAK_CONDITION_NEUTRAL</unmanaged>	
        /// <unmanaged-short>DWRITE_BREAK_CONDITION_NEUTRAL</unmanaged-short>	
        Neutral = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p> Indicates that a line break is allowed, unless overruled by the condition of the neighboring text span or inline object, either prohibited by a "may not break" condition or forced by a "must break" condition.				 </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BREAK_CONDITION_CAN_BREAK']/*"/>	
        /// <msdn-id>dd368051</msdn-id>	
        /// <unmanaged>DWRITE_BREAK_CONDITION_CAN_BREAK</unmanaged>	
        /// <unmanaged-short>DWRITE_BREAK_CONDITION_CAN_BREAK</unmanaged-short>	
        CanBreak = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p> Indicates that there should be no line  break, unless overruled by a "must break" condition from the neighboring text span or inline object.		 </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BREAK_CONDITION_MAY_NOT_BREAK']/*"/>	
        /// <msdn-id>dd368051</msdn-id>	
        /// <unmanaged>DWRITE_BREAK_CONDITION_MAY_NOT_BREAK</unmanaged>	
        /// <unmanaged-short>DWRITE_BREAK_CONDITION_MAY_NOT_BREAK</unmanaged-short>	
        MayNotBreak = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p> Indicates that the line break must happen, regardless of the condition of the adjacent text span or inline object.			 </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_BREAK_CONDITION_MUST_BREAK']/*"/>	
        /// <msdn-id>dd368051</msdn-id>	
        /// <unmanaged>DWRITE_BREAK_CONDITION_MUST_BREAK</unmanaged>	
        /// <unmanaged-short>DWRITE_BREAK_CONDITION_MUST_BREAK</unmanaged-short>	
        MustBreak = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Specifies the type of DirectWrite factory object.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>A DirectWrite factory object contains information about its internal state, such as font loader registration and cached font data. In most cases you should use the shared factory object, because it allows multiple components that use DirectWrite to share internal DirectWrite state information, thereby reducing memory usage. However, there are cases when it is desirable to reduce the impact of a component on the rest of the process, such as a plug-in from an untrusted source,  by sandboxing and isolating it from the rest of the process components. In such cases, you should use an isolated factory for the sandboxed component.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FACTORY_TYPE']/*"/>	
    /// <msdn-id>dd368057</msdn-id>	
    /// <unmanaged>DWRITE_FACTORY_TYPE</unmanaged>	
    /// <unmanaged-short>DWRITE_FACTORY_TYPE</unmanaged-short>	
    public enum FactoryType : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates that the DirectWrite factory is a shared factory and that it allows for the reuse of cached font data across multiple in-process components. Such factories also take advantage of cross process font caching components for better performance.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FACTORY_TYPE_SHARED']/*"/>	
        /// <msdn-id>dd368057</msdn-id>	
        /// <unmanaged>DWRITE_FACTORY_TYPE_SHARED</unmanaged>	
        /// <unmanaged-short>DWRITE_FACTORY_TYPE_SHARED</unmanaged-short>	
        Shared = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates that the DirectWrite factory object is isolated. Objects created from the isolated factory do not interact with internal DirectWrite state from other components.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FACTORY_TYPE_ISOLATED']/*"/>	
        /// <msdn-id>dd368057</msdn-id>	
        /// <unmanaged>DWRITE_FACTORY_TYPE_ISOLATED</unmanaged>	
        /// <unmanaged-short>DWRITE_FACTORY_TYPE_ISOLATED</unmanaged-short>	
        Isolated = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p> Indicates the direction of flow for placing lines of text in a paragraph. </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FLOW_DIRECTION']/*"/>	
    /// <msdn-id>dd368060</msdn-id>	
    /// <unmanaged>DWRITE_FLOW_DIRECTION</unmanaged>	
    /// <unmanaged-short>DWRITE_FLOW_DIRECTION</unmanaged-short>	
    public enum FlowDirection : int {	
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p>Specifies that text lines stack in increasing order.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FLOW_DIRECTION_TOP_TO_BOTTOM']/*"/>	
        /// <msdn-id>dd368060</msdn-id>	
        /// <unmanaged>DWRITE_FLOW_DIRECTION_TOP_TO_BOTTOM</unmanaged>	
        /// <unmanaged-short>DWRITE_FLOW_DIRECTION_TOP_TO_BOTTOM</unmanaged-short>	
        TopToBottom = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p>Specifies that text lines stack in decreasing order.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FLOW_DIRECTION_BOTTOM_TO_TOP']/*"/>	
        /// <msdn-id>dd368060</msdn-id>	
        /// <unmanaged>DWRITE_FLOW_DIRECTION_BOTTOM_TO_TOP</unmanaged>	
        /// <unmanaged-short>DWRITE_FLOW_DIRECTION_BOTTOM_TO_TOP</unmanaged-short>	
        BottomToTop = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p>Specifies that text lines are placed from left to right.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FLOW_DIRECTION_LEFT_TO_RIGHT']/*"/>	
        /// <msdn-id>dd368060</msdn-id>	
        /// <unmanaged>DWRITE_FLOW_DIRECTION_LEFT_TO_RIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_FLOW_DIRECTION_LEFT_TO_RIGHT</unmanaged-short>	
        LeftToRight = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only. </p> <p>Specifies that text lines are placed from right to left.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FLOW_DIRECTION_RIGHT_TO_LEFT']/*"/>	
        /// <msdn-id>dd368060</msdn-id>	
        /// <unmanaged>DWRITE_FLOW_DIRECTION_RIGHT_TO_LEFT</unmanaged>	
        /// <unmanaged-short>DWRITE_FLOW_DIRECTION_RIGHT_TO_LEFT</unmanaged-short>	
        RightToLeft = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Indicates the file format of a complete font face.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Font formats that consist of multiple files, such as Type 1 .PFM and .PFB, have a single enum entry.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE']/*"/>	
    /// <msdn-id>dd368063</msdn-id>	
    /// <unmanaged>DWRITE_FONT_FACE_TYPE</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_FACE_TYPE</unmanaged-short>	
    public enum FontFaceType : int {	
        
        /// <summary>	
        /// <dd> <p>OpenType font face with CFF outlines.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_CFF']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_CFF</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_CFF</unmanaged-short>	
        Cff = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>OpenType font face with TrueType outlines.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_TRUETYPE']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_TRUETYPE</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_TRUETYPE</unmanaged-short>	
        Truetype = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>OpenType font face that is a part of a TrueType collection.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_TRUETYPE_COLLECTION']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_TRUETYPE_COLLECTION</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_TRUETYPE_COLLECTION</unmanaged-short>	
        TruetypeCollection = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>A Type 1 font face.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_TYPE1']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_TYPE1</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_TYPE1</unmanaged-short>	
        Type1 = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>A vector .FON format font face.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_VECTOR']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_VECTOR</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_VECTOR</unmanaged-short>	
        Vector = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>A bitmap .FON format font face.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_BITMAP']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_BITMAP</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_BITMAP</unmanaged-short>	
        Bitmap = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Font face type is not recognized by the DirectWrite font system.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_UNKNOWN']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_UNKNOWN</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_UNKNOWN</unmanaged-short>	
        Unknown = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The font data includes only the CFF table from an OpenType CFF font. This font face type can be used only for embedded fonts (i.e., custom font file loaders) and the resulting font face object supports only the minimum functionality necessary to render glyphs.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FACE_TYPE_RAW_CFF']/*"/>	
        /// <msdn-id>dd368063</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FACE_TYPE_RAW_CFF</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FACE_TYPE_RAW_CFF</unmanaged-short>	
        RawCff = unchecked((int)7),			
    }
    
    /// <summary>	
    /// <p>A value that indicates the typographic feature of text supplied by the font.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG']/*"/>	
    /// <msdn-id>dd368069</msdn-id>	
    /// <unmanaged>DWRITE_FONT_FEATURE_TAG</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG</unmanaged-short>	
    public enum FontFeatureTag : int {	
        
        /// <summary>	
        /// <dd> <p> Replaces figures separated by a slash with an alternative form.</p> <p><strong>Equivalent OpenType tag:</strong> 'afrc' </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_ALTERNATIVE_FRACTIONS</unmanaged-short>	
        AlternativeFractions = unchecked((int)1668441697),			
        
        /// <summary>	
        /// <dd> <p> Turns capital characters into petite capitals. It is generally used for words which would otherwise be set in all caps, such as acronyms, but which are desired in petite-cap form to avoid disrupting the flow of text. See the pcap feature description for notes on the relationship of caps, smallcaps and petite caps.</p> <p><strong>Equivalent OpenType tag:</strong> 'c2pc'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS_FROM_CAPITALS</unmanaged-short>	
        PetiteCapitalsFromCapitals = unchecked((int)1668297315),			
        
        /// <summary>	
        /// <dd> <p>Turns capital characters into small capitals. It is generally used for words which would otherwise be set in all caps, such as acronyms, but which are desired in small-cap form to avoid disrupting the flow of text. </p> <p><strong>Equivalent OpenType tag:</strong> 'c2sc'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS_FROM_CAPITALS</unmanaged-short>	
        SmallCapitalsFromCapitals = unchecked((int)1668493923),			
        
        /// <summary>	
        /// <dd> <p> In specified situations, replaces default glyphs with alternate forms which provide better joining behavior. Used in script typefaces which are designed to have some or all of their glyphs join.</p> <p><strong>Equivalent OpenType tag:</strong> 'calt'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_ALTERNATES</unmanaged-short>	
        ContextualAlternates = unchecked((int)1953259875),			
        
        /// <summary>	
        /// <dd> <p> Shifts various punctuation marks up to a position that works better with all-capital sequences or sets of lining figures; also changes oldstyle figures to lining figures. By default, glyphs in a text face are designed to work with lowercase characters. Some characters should be shifted vertically to fit the higher visual center of all-capital or lining text. Also, lining figures are the same height (or close to it) as capitals, and fit much better with all-capital text.</p> <p><strong>Equivalent OpenType tag:</strong> 'case'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_CASE_SENSITIVE_FORMS</unmanaged-short>	
        CaseSensitiveForms = unchecked((int)1702060387),			
        
        /// <summary>	
        /// <dd> <p> To minimize the number of glyph alternates, it is sometimes desired to decompose a character into two glyphs. Additionally, it may be preferable to compose two characters into a single glyph for better glyph processing. This feature permits such composition/decomposition. The feature should be processed as the first feature processed, and should be processed only when it is called.</p> <p><strong>Equivalent OpenType tag:</strong> 'ccmp'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_GLYPH_COMPOSITION_DECOMPOSITION</unmanaged-short>	
        GlyphCompositionDecomposition = unchecked((int)1886217059),			
        
        /// <summary>	
        /// <dd> <p> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. Unlike other ligature features, clig specifies the context in which the ligature is recommended. This capability is important in some script designs and for swash ligatures.</p> <p><strong>Equivalent OpenType tag:</strong> 'clig'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_LIGATURES</unmanaged-short>	
        ContextualLigatures = unchecked((int)1734962275),			
        
        /// <summary>	
        /// <dd> <p> Globally adjusts inter-glyph spacing for all-capital text. Most typefaces contain capitals and lowercase characters, and the capitals are positioned to work with the lowercase. When capitals are used for words, they need more space between them for legibility and esthetics. This feature would not apply to monospaced designs. Of course the user may want to override this behavior in order to do more pronounced letterspacing for esthetic reasons. </p> <p><strong>Equivalent OpenType tag:</strong> 'cpsp'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_CAPITAL_SPACING</unmanaged-short>	
        CapitalSpacing = unchecked((int)1886613603),			
        
        /// <summary>	
        /// <dd> <p>Replaces default character glyphs with corresponding swash glyphs in a specified context. Note that there may be more than one swash alternate for a given character. </p> <p><strong>Equivalent OpenType tag:</strong> 'cswh'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_CONTEXTUAL_SWASH</unmanaged-short>	
        ContextualSwash = unchecked((int)1752658787),			
        
        /// <summary>	
        /// <dd> <p> In cursive scripts like Arabic, this feature cursively positions adjacent glyphs.</p> <p><strong>Equivalent OpenType tag:</strong> 'curs'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_CURSIVE_POSITIONING</unmanaged-short>	
        CursivePositioning = unchecked((int)1936880995),			
        
        /// <summary>	
        /// <dd> <p> Globally adjusts inter-glyph spacing for all-capital text. Most typefaces contain capitals and lowercase characters, and the capitals are positioned to work with the lowercase. When capitals are used for words, they need more space between them for legibility and esthetics. This feature would not apply to monospaced designs. Of course the user may want to override this behavior in order to do more pronounced letterspacing for esthetic reasons. </p> <p><strong>Equivalent OpenType tag:</strong> 'cpsp'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_DEFAULT']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_DEFAULT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_DEFAULT</unmanaged-short>	
        Default = unchecked((int)1953261156),			
        
        /// <summary>	
        /// <dd> <p> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. This feature covers those ligatures which may be used for special effect, at the user's preference.</p> <p><strong>Equivalent OpenType tag:</strong> 'dlig'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_DISCRETIONARY_LIGATURES</unmanaged-short>	
        DiscretionaryLigatures = unchecked((int)1734962276),			
        
        /// <summary>	
        /// <dd> <p> Replaces standard forms in Japanese fonts with corresponding forms preferred by typographers.  For example, a user would invoke this feature to replace kanji character U+5516 with U+555E.	
        /// </p> <p><strong>Equivalent OpenType tag:</strong> 'expt'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_EXPERT_FORMS</unmanaged-short>	
        ExpertForms = unchecked((int)1953527909),			
        
        /// <summary>	
        /// <dd> <p> Replaces figures separated by a slash with 'common' (diagonal) fractions.</p> <p><strong>Equivalent OpenType tag:</strong> 'frac'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_FRACTIONS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_FRACTIONS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_FRACTIONS</unmanaged-short>	
        Fractions = unchecked((int)1667330662),			
        
        /// <summary>	
        /// <dd> <p> Replaces glyphs set on other widths with glyphs set on full (usually em) widths. In a CJKV font, this may include "lower ASCII" Latin characters and various symbols. In a European font, this feature replaces proportionally-spaced glyphs with monospaced glyphs, which are generally set on widths of 0.6 em. For example, a user may invoke this feature in a Japanese font to get full monospaced Latin glyphs instead of the corresponding proportionally-spaced versions.</p> <p><strong>Equivalent OpenType tag:</strong> 'fwid'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_FULL_WIDTH']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_FULL_WIDTH</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_FULL_WIDTH</unmanaged-short>	
        FullWidth = unchecked((int)1684633446),			
        
        /// <summary>	
        /// <dd> <p> Produces the half forms of consonants in Indic scripts. For example, in Hindi (Devanagari script), the conjunct KKa, obtained by doubling the Ka, is denoted with a half form of Ka followed by the full form. </p> <p><strong>Equivalent OpenType tag:</strong> 'half'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HALF_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HALF_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HALF_FORMS</unmanaged-short>	
        HalfForms = unchecked((int)1718378856),			
        
        /// <summary>	
        /// <dd> <p> Produces the halant forms of consonants in Indic scripts. For example, in Sanskrit (Devanagari script), syllable final consonants are frequently required in their halant form.</p> <p><strong>Equivalent OpenType tag:</strong> 'haln'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HALANT_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HALANT_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HALANT_FORMS</unmanaged-short>	
        HalantForms = unchecked((int)1852596584),			
        
        /// <summary>	
        /// <dd> <p> Respaces glyphs designed to be set on full-em widths, fitting them onto half-em widths. This differs from hwid in that it does not substitute new glyphs.</p> <p><strong>Equivalent OpenType tag:</strong> 'halt'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_ALTERNATE_HALF_WIDTH</unmanaged-short>	
        AlternateHalfWidth = unchecked((int)1953259880),			
        
        /// <summary>	
        /// <dd> <p> Replaces the default (current) forms with the historical alternates. While some ligatures are also used for historical effect, this feature deals only with single characters. Some fonts include the historical forms as alternates, so they can be used for a 'period' effect.  </p> <p><strong>Equivalent OpenType tag:</strong> 'hist'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HISTORICAL_FORMS</unmanaged-short>	
        HistoricalForms = unchecked((int)1953720680),			
        
        /// <summary>	
        /// <dd> <p> Replaces standard kana with forms that have been specially designed for only horizontal writing. This is a typographic optimization for improved fit and more even color.</p> <p><strong>Equivalent OpenType tag:</strong> 'hkna'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HORIZONTAL_KANA_ALTERNATES</unmanaged-short>	
        HorizontalKanaAlternates = unchecked((int)1634626408),			
        
        /// <summary>	
        /// <dd> <p> Replaces the default (current) forms with the historical alternates. Some ligatures were in common use in the past, but appear anachronistic today. Some fonts include the historical forms as alternates, so they can be used for a 'period' effect.</p> <p><strong>Equivalent OpenType tag:</strong> 'hlig'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HISTORICAL_LIGATURES</unmanaged-short>	
        HistoricalLigatures = unchecked((int)1734962280),			
        
        /// <summary>	
        /// <dd> <p> Replaces glyphs on proportional widths, or fixed widths other than half an em, with glyphs on half-em (en) widths. Many CJKV fonts have glyphs which are set on multiple widths; this feature selects the half-em version. There are various contexts in which this is the preferred behavior, including compatibility with older desktop documents.</p> <p><strong>Equivalent OpenType tag:</strong> 'hwid'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HALF_WIDTH']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HALF_WIDTH</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HALF_WIDTH</unmanaged-short>	
        HalfWidth = unchecked((int)1684633448),			
        
        /// <summary>	
        /// <dd> <p> Used to access the JIS X 0212-1990 glyphs for the cases when the JIS X 0213:2004 form is encoded. The JIS X 0212-1990 (aka, "Hojo Kanji") and JIS X 0213:2004 character sets overlap significantly. In some cases their prototypical glyphs differ. When building fonts that support both JIS X 0212-1990 and JIS X 0213:2004 (such as those supporting the Adobe-Japan 1-6 character collection), it is recommended that JIS X 0213:2004 forms be the preferred encoded form.</p> <p><strong>Equivalent OpenType tag:</strong> 'hojo'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_HOJO_KANJI_FORMS</unmanaged-short>	
        HojoKanjiForms = unchecked((int)1869246312),			
        
        /// <summary>	
        /// <dd> <p> The National Language Council (NLC) of Japan has defined new glyph shapes for a number of JIS characters, which were incorporated into JIS X 0213:2004 as new prototypical forms. The 'jp04' feature is A subset of the 'nlck' feature, and is used to access these prototypical glyphs in a manner that maintains the integrity of JIS X 0213:2004.</p> <p><strong>Equivalent OpenType tag:</strong> 'jp04'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS04_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS04_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_JIS04_FORMS</unmanaged-short>	
        Jis04Forms = unchecked((int)875589738),			
        
        /// <summary>	
        /// <dd> <p>Replaces default (JIS90) Japanese glyphs with the corresponding forms from the JIS C 6226-1978 (JIS78) specification.</p> <p><strong>Equivalent OpenType tag:</strong> 'jp78'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS78_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS78_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_JIS78_FORMS</unmanaged-short>	
        Jis78Forms = unchecked((int)943157354),			
        
        /// <summary>	
        /// <dd> <p>Replaces default (JIS90) Japanese glyphs with the corresponding forms from the JIS X 0208-1983 (JIS83) specification.</p> <p><strong>Equivalent OpenType tag:</strong> 'jp83'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS83_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS83_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_JIS83_FORMS</unmanaged-short>	
        Jis83Forms = unchecked((int)859336810),			
        
        /// <summary>	
        /// <dd> <p> Replaces Japanese glyphs from the JIS78 or JIS83 specifications with the corresponding forms from the JIS X 0208-1990 (JIS90) specification.</p> <p><strong>Equivalent OpenType tag:</strong> 'jp90'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_JIS90_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_JIS90_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_JIS90_FORMS</unmanaged-short>	
        Jis90Forms = unchecked((int)809070698),			
        
        /// <summary>	
        /// <dd> <p> Adjusts amount of space between glyphs, generally to provide optically consistent spacing between glyphs. Although a well-designed typeface has consistent inter-glyph spacing overall, some glyph combinations require adjustment for improved legibility. Besides standard adjustment in the horizontal direction, this feature can supply size-dependent kerning data via device tables, "cross-stream" kerning in the Y text direction, and adjustment of glyph placement independent of the advance adjustment. Note that this feature may apply to runs of more than two glyphs, and would not be used in monospaced fonts. Also note that this feature does not apply to text set vertically.</p> <p><strong>Equivalent OpenType tag:</strong> 'kern'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_KERNING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_KERNING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_KERNING</unmanaged-short>	
        Kerning = unchecked((int)1852990827),			
        
        /// <summary>	
        /// <dd> <p> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. This feature covers the ligatures which the designer/manufacturer judges should be used in normal conditions.</p> <p><strong>Equivalent OpenType tag:</strong> 'liga'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STANDARD_LIGATURES</unmanaged-short>	
        StandardLigatures = unchecked((int)1634167148),			
        
        /// <summary>	
        /// <dd> <p>Changes selected figures from oldstyle to the default lining form. For example, a user may invoke this feature in order to get lining figures, which fit better with all-capital text. This feature overrides results of the Oldstyle Figures feature (onum).</p> <p><strong>Equivalent OpenType tag:</strong> 'lnum'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_LINING_FIGURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_LINING_FIGURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_LINING_FIGURES</unmanaged-short>	
        LiningFigures = unchecked((int)1836412524),			
        
        /// <summary>	
        /// <dd> <p> Enables localized forms of glyphs to be substituted for default forms. Many scripts used to write multiple languages over wide geographical areas have developed localized variant forms of specific letters, which are used by individual literary communities. For example, a number of letters in the Bulgarian and Serbian alphabets have forms distinct from their Russian counterparts and from each other. In some cases the localized form differs only subtly from the script 'norm', in others the forms are radically distinct. </p> <p><strong>Equivalent OpenType tag:</strong> 'locl'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_LOCALIZED_FORMS</unmanaged-short>	
        LocalizedForms = unchecked((int)1818455916),			
        
        /// <summary>	
        /// <dd> <p> Positions mark glyphs with respect to base glyphs. For example, in Arabic script positioning the Hamza above the Yeh.</p> <p><strong>Equivalent OpenType tag: </strong> 'mark'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_MARK_POSITIONING</unmanaged-short>	
        MarkPositioning = unchecked((int)1802658157),			
        
        /// <summary>	
        /// <dd> <p> Replaces standard typographic forms of Greek glyphs with corresponding forms commonly used in mathematical notation (which are a subset of the Greek alphabet).</p> <p><strong>Equivalent OpenType tag:</strong> 'mgrk'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_MATHEMATICAL_GREEK</unmanaged-short>	
        MathematicalGreek = unchecked((int)1802659693),			
        
        /// <summary>	
        /// <dd> <p> Positions marks with respect to other marks. Required in various non-Latin scripts like Arabic. For example, in Arabic, the ligaturised mark Ha with Hamza above it can also be obtained by positioning these marks relative to one another.</p> <p><strong>Equivalent OpenType tag:</strong> 'mkmk'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_MARK_TO_MARK_POSITIONING</unmanaged-short>	
        MarkToMarkPositioning = unchecked((int)1802333037),			
        
        /// <summary>	
        /// <dd> <p> Replaces default glyphs with various notational forms (such as glyphs placed in open or solid circles, squares, parentheses, diamonds or rounded boxes). In some cases an annotation form may already be present, but the user may want a different one.</p> <p><strong>Equivalent OpenType tag:</strong> 'nalt'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_ALTERNATE_ANNOTATION_FORMS</unmanaged-short>	
        AlternateAnnotationForms = unchecked((int)1953259886),			
        
        /// <summary>	
        /// <dd> <p> Used to access  glyphs made from glyph shapes defined by the National Language Council (NLC) of Japan for a number of JIS characters in 2000. </p> <p><strong>Equivalent OpenType tag:</strong> 'nlck'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_NLC_KANJI_FORMS</unmanaged-short>	
        NlcKanjiForms = unchecked((int)1801677934),			
        
        /// <summary>	
        /// <dd> <p> Changes selected figures from the default lining style to oldstyle form. For example, a user may invoke this feature to get oldstyle figures, which fit better into the flow of normal upper- and lowercase text. This feature overrides results of the Lining Figures feature (lnum).</p> <p><strong>Equivalent OpenType tag:</strong> 'onum'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_OLD_STYLE_FIGURES</unmanaged-short>	
        OldStyleFigures = unchecked((int)1836412527),			
        
        /// <summary>	
        /// <dd> <p> Replaces default alphabetic glyphs with the corresponding ordinal forms for use after figures. One exception to the follows-a-figure rule is the numero character (U+2116), which is actually a ligature substitution, but is best accessed through this feature.</p> <p><strong>Equivalent OpenType tag:</strong> 'ordn'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_ORDINALS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_ORDINALS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_ORDINALS</unmanaged-short>	
        Ordinals = unchecked((int)1852076655),			
        
        /// <summary>	
        /// <dd> <p> Respaces glyphs designed to be set on full-em widths, fitting them onto individual (more or less proportional) horizontal widths. This differs from pwid in that it does not substitute new glyphs (GPOS, not GSUB feature). The user may prefer the monospaced form, or may simply want to ensure that the glyph is well-fit and not rotated in vertical setting (Latin forms designed for proportional spacing would be rotated).</p> <p><strong>Equivalent OpenType tag:</strong> 'palt'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_ALTERNATE_WIDTH</unmanaged-short>	
        ProportionalAlternateWidth = unchecked((int)1953259888),			
        
        /// <summary>	
        /// <dd> <p>Turns lowercase characters into petite capitals. Forms related to petite capitals, such as specially designed figures, may be included. Some fonts contain an additional size of capital letters, shorter than the regular smallcaps and it is referred to as petite caps. Such forms are most likely to be found in designs with a small lowercase x-height, where they better harmonise with lowercase text than the taller smallcaps (for examples of petite caps, see the Emigre type families Mrs Eaves and Filosofia). </p> <p><strong>Equivalent OpenType tag:</strong> 'pcap'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_PETITE_CAPITALS</unmanaged-short>	
        PetiteCapitals = unchecked((int)1885430640),			
        
        /// <summary>	
        /// <dd> <p> Replaces figure glyphs set on uniform (tabular) widths with corresponding glyphs set on glyph-specific (proportional) widths. Tabular widths will generally be the default, but this cannot be safely assumed. Of course this feature would not be present in monospaced designs.</p> <p><strong>Equivalent OpenType tag:</strong> 'pnum'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_FIGURES</unmanaged-short>	
        ProportionalFigures = unchecked((int)1836412528),			
        
        /// <summary>	
        /// <dd> <p> Replaces glyphs set on uniform widths (typically full or half-em) with proportionally spaced glyphs. The proportional variants are often used for the Latin characters in CJKV fonts, but may also be used for Kana in Japanese fonts.</p> <p><strong>Equivalent OpenType tag:</strong> 'pwid'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_PROPORTIONAL_WIDTHS</unmanaged-short>	
        ProportionalWidths = unchecked((int)1684633456),			
        
        /// <summary>	
        /// <dd> <p> Replaces glyphs on other widths with glyphs set on widths of one quarter of an em (half an en). The characters involved are normally figures and some forms of punctuation.</p> <p><strong>Equivalent OpenType tag:</strong> 'qwid'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_QUARTER_WIDTHS</unmanaged-short>	
        QuarterWidths = unchecked((int)1684633457),			
        
        /// <summary>	
        /// <dd> <p> Replaces a sequence of glyphs with a single glyph which is preferred for typographic purposes. This feature covers those ligatures, which the script determines as required to be used in normal conditions. This feature is important for some scripts to ensure correct glyph formation. </p> <p><strong>Equivalent OpenType tag:</strong> 'rlig'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_REQUIRED_LIGATURES</unmanaged-short>	
        RequiredLigatures = unchecked((int)1734962290),			
        
        /// <summary>	
        /// <dd> <p> Identifies glyphs in the font which have been designed for "ruby", from the old typesetting term for four-point-sized type. Japanese typesetting often uses smaller kana glyphs, generally in superscripted form, to clarify the meaning of kanji which may be unfamiliar to the reader. </p> <p><strong>Equivalent OpenType tag:</strong> 'ruby'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_RUBY_NOTATION_FORMS</unmanaged-short>	
        RubyNotationForms = unchecked((int)2036495730),			
        
        /// <summary>	
        /// <dd> <p> Replaces the default forms with the stylistic alternates. Many fonts contain alternate glyph designs for a purely esthetic effect; these don't always fit into a clear category like swash or historical. As in the case of swash glyphs, there may be more than one alternate form.  </p> <p><strong>Equivalent OpenType tag:</strong> 'salt'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_ALTERNATES</unmanaged-short>	
        StylisticAlternates = unchecked((int)1953259891),			
        
        /// <summary>	
        /// <dd> <p> Replaces lining or oldstyle figures with inferior figures (smaller glyphs which sit lower than the standard baseline, primarily for chemical or mathematical notation). May also replace lowercase characters with alphabetic inferiors.</p> <p><strong>Equivalent OpenType tag:</strong> 'sinf'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SCIENTIFIC_INFERIORS</unmanaged-short>	
        ScientificInferiors = unchecked((int)1718511987),			
        
        /// <summary>	
        /// <dd> <p> Turns lowercase characters into small capitals. This corresponds to the common SC font layout. It is generally used for display lines set in Large &amp; small caps, such as titles. Forms related to small capitals, such as oldstyle figures, may be included.</p> <p><strong>Equivalent OpenType tag:</strong> 'smcp'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SMALL_CAPITALS</unmanaged-short>	
        SmallCapitals = unchecked((int)1885564275),			
        
        /// <summary>	
        /// <dd> <p> Replaces 'traditional' Chinese or Japanese forms with the corresponding 'simplified' forms.</p> <p><strong>Equivalent OpenType tag:</strong> 'smpl'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SIMPLIFIED_FORMS</unmanaged-short>	
        SimplifiedForms = unchecked((int)1819307379),			
        
        /// <summary>	
        /// <dd> <p> In addition to, or instead of, stylistic alternatives of individual glyphs (see 'salt' feature), some fonts may contain sets of stylistic variant glyphs corresponding to portions of the character set, such as multiple variants for lowercase letters in a Latin font. Glyphs in stylistic sets may be designed to harmonise visually, interract in particular ways, or otherwise work together. Examples of fonts including stylistic sets are Zapfino Linotype and Adobe's Poetica. Individual features numbered sequentially with the tag name convention 'ss01' 'ss02' 'ss03' . 'ss20' provide a mechanism for glyphs in these sets to be associated via GSUB lookup indexes to default forms and to each other, and for users to select from available stylistic sets</p> <p><strong>Equivalent OpenType tag:</strong> 'ss01'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_1</unmanaged-short>	
        StylisticSet1 = unchecked((int)825258867),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss02'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_2</unmanaged-short>	
        StylisticSet2 = unchecked((int)842036083),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss03'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_3</unmanaged-short>	
        StylisticSet3 = unchecked((int)858813299),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss04'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_4</unmanaged-short>	
        StylisticSet4 = unchecked((int)875590515),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss05'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_5</unmanaged-short>	
        StylisticSet5 = unchecked((int)892367731),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss06'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_6</unmanaged-short>	
        StylisticSet6 = unchecked((int)909144947),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss07'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_7</unmanaged-short>	
        StylisticSet7 = unchecked((int)925922163),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss08'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_8</unmanaged-short>	
        StylisticSet8 = unchecked((int)942699379),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss09'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_9</unmanaged-short>	
        StylisticSet9 = unchecked((int)959476595),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss10'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_10</unmanaged-short>	
        StylisticSet10 = unchecked((int)808547187),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss11'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_11</unmanaged-short>	
        StylisticSet11 = unchecked((int)825324403),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss12'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_12</unmanaged-short>	
        StylisticSet12 = unchecked((int)842101619),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss13'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_13</unmanaged-short>	
        StylisticSet13 = unchecked((int)858878835),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss14'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_14</unmanaged-short>	
        StylisticSet14 = unchecked((int)875656051),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss15'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_15</unmanaged-short>	
        StylisticSet15 = unchecked((int)892433267),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss16'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_16</unmanaged-short>	
        StylisticSet16 = unchecked((int)909210483),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss17'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_17</unmanaged-short>	
        StylisticSet17 = unchecked((int)925987699),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss18'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_18</unmanaged-short>	
        StylisticSet18 = unchecked((int)942764915),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss19'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_19</unmanaged-short>	
        StylisticSet19 = unchecked((int)959542131),			
        
        /// <summary>	
        /// <dd> <p>See the description for <strong><see cref="SharpDX.DirectWrite.FontFeatureTag.StylisticSet1"/></strong>.</p> <p><strong>Equivalent OpenType tag:</strong> 'ss20'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_STYLISTIC_SET_20</unmanaged-short>	
        StylisticSet20 = unchecked((int)808612723),			
        
        /// <summary>	
        /// <dd> <p> May replace a default glyph with a subscript glyph, or it may combine a glyph substitution with positioning adjustments for proper placement.</p> <p><strong>Equivalent OpenType tag:</strong> 'subs'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SUBSCRIPT']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SUBSCRIPT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SUBSCRIPT</unmanaged-short>	
        Subscript = unchecked((int)1935832435),			
        
        /// <summary>	
        /// <dd> <p> Replaces lining or oldstyle figures with superior figures (primarily for footnote indication), and replaces lowercase letters with superior letters (primarily for abbreviated French titles).</p> <p><strong>Equivalent OpenType tag:</strong> 'sups'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SUPERSCRIPT</unmanaged-short>	
        Superscript = unchecked((int)1936749939),			
        
        /// <summary>	
        /// <dd> <p> Replaces default character glyphs with corresponding swash glyphs. Note that there may be more than one swash alternate for a given character.</p> <p><strong>Equivalent OpenType tag:</strong> 'swsh'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SWASH']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SWASH</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SWASH</unmanaged-short>	
        Swash = unchecked((int)1752397683),			
        
        /// <summary>	
        /// <dd> <p> Replaces the default glyphs with corresponding forms designed specifically for titling. These may be all-capital and/or larger on the body, and adjusted for viewing at larger sizes.</p> <p><strong>Equivalent OpenType tag:</strong> 'titl'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TITLING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_TITLING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_TITLING</unmanaged-short>	
        Titling = unchecked((int)1819568500),			
        
        /// <summary>	
        /// <dd> <p> Replaces 'simplified' Japanese kanji forms with the corresponding 'traditional' forms. This is equivalent to the Traditional Forms feature, but explicitly limited to the traditional forms considered proper for use in personal names (as many as 205 glyphs in some fonts).</p> <p><strong>Equivalent OpenType tag:</strong> 'tnam'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_TRADITIONAL_NAME_FORMS</unmanaged-short>	
        TraditionalNameForms = unchecked((int)1835101812),			
        
        /// <summary>	
        /// <dd> <p> Replaces figure glyphs set on proportional widths with corresponding glyphs set on uniform (tabular) widths. Tabular widths will generally be the default, but this cannot be safely assumed. Of course this feature would not be present in monospaced designs.</p> <p><strong>Equivalent OpenType tag:</strong> 'tnum'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_TABULAR_FIGURES</unmanaged-short>	
        TabularFigures = unchecked((int)1836412532),			
        
        /// <summary>	
        /// <dd> <p> Replaces 'simplified' Chinese hanzi or Japanese kanji forms with the corresponding 'traditional' forms.</p> <p><strong>Equivalent OpenType tag:</strong> 'trad'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_TRADITIONAL_FORMS</unmanaged-short>	
        TraditionalForms = unchecked((int)1684107892),			
        
        /// <summary>	
        /// <dd> <p> Replaces glyphs on other widths with glyphs set on widths of one third of an em. The characters involved are normally figures and some forms of punctuation.</p> <p><strong>Equivalent OpenType tag:</strong> 'twid'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_THIRD_WIDTHS</unmanaged-short>	
        ThirdWidths = unchecked((int)1684633460),			
        
        /// <summary>	
        /// <dd> <p> Maps upper- and lowercase letters to a mixed set of lowercase and small capital forms, resulting in a single case alphabet (for an example of unicase, see the Emigre type family Filosofia). The letters substituted may vary from font to font, as appropriate to the design. If aligning to the x-height, smallcap glyphs may be substituted, or specially designed unicase forms might be used. Substitutions might also include specially designed figures.	
        /// </p> <p><strong>Equivalent OpenType tag:</strong> 'unic'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_UNICASE']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_UNICASE</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_UNICASE</unmanaged-short>	
        Unicase = unchecked((int)1667853941),			
        
        /// <summary>	
        /// <dd> <p>Indicates that the font is displayed vertically.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_VERTICAL_WRITING']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_VERTICAL_WRITING</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_VERTICAL_WRITING</unmanaged-short>	
        VerticalWriting = unchecked((int)1953654134),			
        
        /// <summary>	
        /// <dd> <p>Replaces normal figures with figures adjusted for vertical display.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_VERTICAL_ALTERNATES_AND_ROTATION']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_VERTICAL_ALTERNATES_AND_ROTATION</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_VERTICAL_ALTERNATES_AND_ROTATION</unmanaged-short>	
        VerticalAlternatesAndRotation = unchecked((int)846492278),			
        
        /// <summary>	
        /// <dd> <p>Allows the user to change from the default 0 to a slashed form. Some fonts contain both a default form of zero, and an alternative form which uses a diagonal slash through the counter. Especially in condensed designs, it can be difficult to distinguish between 0 and O (zero and capital O) in any situation where capitals and lining figures may be arbitrarily mixed. </p> <p><strong>Equivalent OpenType tag:</strong> 'zero'</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO']/*"/>	
        /// <msdn-id>dd368069</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FEATURE_TAG_SLASHED_ZERO</unmanaged-short>	
        SlashedZero = unchecked((int)1869768058),			
    }
    
    /// <summary>	
    /// <p>The type of a font represented by a single font file. Font formats that consist of multiple files, for example Type 1 .PFM and .PFB, have separate enum values for each of the file types.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE']/*"/>	
    /// <msdn-id>dd368072</msdn-id>	
    /// <unmanaged>DWRITE_FONT_FILE_TYPE</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_FILE_TYPE</unmanaged-short>	
    public enum FontFileType : int {	
        
        /// <summary>	
        /// <dd> <p>Font type is not recognized by the DirectWrite font system.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_UNKNOWN']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_UNKNOWN</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_UNKNOWN</unmanaged-short>	
        Unknown = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>OpenType font with CFF outlines.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_CFF']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_CFF</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_CFF</unmanaged-short>	
        Cff = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>OpenType font with TrueType outlines.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TRUETYPE']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_TRUETYPE</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_TRUETYPE</unmanaged-short>	
        Truetype = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>OpenType font that contains a TrueType collection.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TRUETYPE_COLLECTION']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_TRUETYPE_COLLECTION</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_TRUETYPE_COLLECTION</unmanaged-short>	
        TruetypeCollection = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Type 1 PFM font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TYPE1_PFM']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_TYPE1_PFM</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_TYPE1_PFM</unmanaged-short>	
        Type1Pfm = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Type 1 PFB font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_TYPE1_PFB']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_TYPE1_PFB</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_TYPE1_PFB</unmanaged-short>	
        Type1Pfb = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Vector .FON font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_VECTOR']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_VECTOR</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_VECTOR</unmanaged-short>	
        Vector = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Bitmap .FON font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_FILE_TYPE_BITMAP']/*"/>	
        /// <msdn-id>dd368072</msdn-id>	
        /// <unmanaged>DWRITE_FONT_FILE_TYPE_BITMAP</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_FILE_TYPE_BITMAP</unmanaged-short>	
        Bitmap = unchecked((int)7),			
    }
    
    /// <summary>	
    /// <p>Specifies algorithmic style simulations to be applied to the font face. Bold and oblique simulations can be combined via bitwise OR operation.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p> Style simulations are not recommended for good typographic quality.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS']/*"/>	
    /// <msdn-id>dd368076</msdn-id>	
    /// <unmanaged>DWRITE_FONT_SIMULATIONS</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_SIMULATIONS</unmanaged-short>	
    public enum FontSimulations : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates that no simulations are applied to the font face.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS_NONE']/*"/>	
        /// <msdn-id>dd368076</msdn-id>	
        /// <unmanaged>DWRITE_FONT_SIMULATIONS_NONE</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_SIMULATIONS_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates that algorithmic emboldening is applied to the font face.  <strong><see cref="SharpDX.DirectWrite.FontSimulations.Bold"/></strong> increases weight by applying a widening algorithm to the glyph outline. This may  be used to simulate a bold weight where no designed bold weight is available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS_BOLD']/*"/>	
        /// <msdn-id>dd368076</msdn-id>	
        /// <unmanaged>DWRITE_FONT_SIMULATIONS_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_SIMULATIONS_BOLD</unmanaged-short>	
        Bold = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Indicates that algorithmic italicization is applied to the font face. <strong><see cref="SharpDX.DirectWrite.FontSimulations.Oblique"/></strong> applies obliquing (shear) to the glyph outline. This may be used to simulate an oblique/italic style where no designed oblique/italic style is available.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_SIMULATIONS_OBLIQUE']/*"/>	
        /// <msdn-id>dd368076</msdn-id>	
        /// <unmanaged>DWRITE_FONT_SIMULATIONS_OBLIQUE</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_SIMULATIONS_OBLIQUE</unmanaged-short>	
        Oblique = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Represents the degree to which a font has been stretched compared to a font's normal aspect ratio. The enumerated values correspond to the <em>usWidthClass</em> definition in the OpenType specification. The usWidthClass represents an integer value between 1 and 9?lower values indicate narrower widths; higher values indicate wider widths.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>A font stretch describes the degree to which a font form is stretched from its normal aspect ratio, which is the original width to height ratio specified for the glyphs in the font. 	
    /// The following illustration shows an example of Normal and Condensed stretches for the Rockwell Bold typeface.</p><p></p><p><strong>Note</strong>??Values other than the ones defined in the enumeration are considered to be invalid, and are rejected by font API functions.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH']/*"/>	
    /// <msdn-id>dd368078</msdn-id>	
    /// <unmanaged>DWRITE_FONT_STRETCH</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_STRETCH</unmanaged-short>	
    public enum FontStretch : int {	
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Not known (0).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_UNDEFINED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_UNDEFINED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_UNDEFINED</unmanaged-short>	
        Undefined = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Ultra-condensed (1).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_ULTRA_CONDENSED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_ULTRA_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_ULTRA_CONDENSED</unmanaged-short>	
        UltraCondensed = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Extra-condensed (2).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_EXTRA_CONDENSED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_EXTRA_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_EXTRA_CONDENSED</unmanaged-short>	
        ExtraCondensed = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Condensed (3).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_CONDENSED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_CONDENSED</unmanaged-short>	
        Condensed = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Semi-condensed (4).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_SEMI_CONDENSED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_SEMI_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_SEMI_CONDENSED</unmanaged-short>	
        SemiCondensed = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Normal (5).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_NORMAL']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_NORMAL</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_NORMAL</unmanaged-short>	
        Normal = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Medium (5).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_MEDIUM']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_MEDIUM</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_MEDIUM</unmanaged-short>	
        Medium = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Semi-expanded (6).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_SEMI_EXPANDED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_SEMI_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_SEMI_EXPANDED</unmanaged-short>	
        SemiExpanded = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Expanded (7).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_EXPANDED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_EXPANDED</unmanaged-short>	
        Expanded = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Extra-expanded (8).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_EXTRA_EXPANDED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_EXTRA_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_EXTRA_EXPANDED</unmanaged-short>	
        ExtraExpanded = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Predefined font stretch : Ultra-expanded (9).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STRETCH_ULTRA_EXPANDED']/*"/>	
        /// <msdn-id>dd368078</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STRETCH_ULTRA_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STRETCH_ULTRA_EXPANDED</unmanaged-short>	
        UltraExpanded = unchecked((int)9),			
    }
    
    /// <summary>	
    /// <p>Represents the style of a font face as normal, italic, or oblique.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Three terms categorize the slant of a font: normal, italic, and oblique. </p><table> <tr><th>Font style</th><th>Description</th></tr> <tr><td>Normal</td><td>The characters in a normal, or roman, font are upright. 	
    /// </td></tr> <tr><td>Italic 	
    /// </td><td>The characters in an italic font are truly slanted and appear as they were designed. 	
    /// </td></tr> <tr><td>Oblique</td><td>The characters in an oblique font are artificially slanted.</td></tr> </table><p>?</p><p>For Oblique, the slant is achieved by performing a shear transformation on the characters from a normal font. When a true italic font is not available on a computer or printer, an oblique style can be generated from the normal font and used to simulate an italic font.  The following illustration shows the normal, italic, and oblique font styles for the Palatino Linotype font. Notice how the italic font style has a more flowing and visually appealing appearance than the oblique font style, which is simply created by skewing the normal font style version of the text.</p><p></p><p><strong>Note</strong>?? Values other than the ones defined in the enumeration are considered to be invalid, and they are rejected by font API functions.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STYLE']/*"/>	
    /// <msdn-id>dd368080</msdn-id>	
    /// <unmanaged>DWRITE_FONT_STYLE</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_STYLE</unmanaged-short>	
    public enum FontStyle : int {	
        
        /// <summary>	
        /// <dd> <p>Font style : Normal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STYLE_NORMAL']/*"/>	
        /// <msdn-id>dd368080</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STYLE_NORMAL</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STYLE_NORMAL</unmanaged-short>	
        Normal = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Font style : Oblique. </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STYLE_OBLIQUE']/*"/>	
        /// <msdn-id>dd368080</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STYLE_OBLIQUE</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STYLE_OBLIQUE</unmanaged-short>	
        Oblique = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Font style : Italic.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_STYLE_ITALIC']/*"/>	
        /// <msdn-id>dd368080</msdn-id>	
        /// <unmanaged>DWRITE_FONT_STYLE_ITALIC</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_STYLE_ITALIC</unmanaged-short>	
        Italic = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Represents the density of a typeface, in terms of the lightness or heaviness of the strokes. The enumerated values correspond to the usWeightClass definition in the OpenType specification. The <em>usWeightClass</em> represents an integer value between 1 and 999. Lower values indicate lighter weights; higher values indicate heavier weights.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Weight differences are generally differentiated by an increased stroke or thickness that is associated with a given character in a typeface, as compared to a "normal" character from that same typeface. 	
    /// The following illustration shows an example of Normal and UltraBold weights for the Palatino Linotype typeface.</p><p></p><p><strong>Note</strong>??Not all weights are available for all typefaces. When a weight is not available for a typeface, the closest matching weight is returned.</p><p>Font weight values less than 1 or greater than 999 are considered invalid, and they are rejected by font API functions.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT']/*"/>	
    /// <msdn-id>dd368082</msdn-id>	
    /// <unmanaged>DWRITE_FONT_WEIGHT</unmanaged>	
    /// <unmanaged-short>DWRITE_FONT_WEIGHT</unmanaged-short>	
    public enum FontWeight : int {	
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Thin (100).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_THIN']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_THIN</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_THIN</unmanaged-short>	
        Thin = unchecked((int)100),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Extra-light (200).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_EXTRA_LIGHT']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_EXTRA_LIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_EXTRA_LIGHT</unmanaged-short>	
        ExtraLight = unchecked((int)200),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Ultra-light (200).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_ULTRA_LIGHT']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_ULTRA_LIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_ULTRA_LIGHT</unmanaged-short>	
        UltraLight = unchecked((int)200),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Light (300).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_LIGHT']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_LIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_LIGHT</unmanaged-short>	
        Light = unchecked((int)300),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Semi-Light (350).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_SEMI_LIGHT']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_SEMI_LIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_SEMI_LIGHT</unmanaged-short>	
        SemiLight = unchecked((int)350),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Normal (400).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_NORMAL']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_NORMAL</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_NORMAL</unmanaged-short>	
        Normal = unchecked((int)400),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Regular (400).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_REGULAR']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_REGULAR</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_REGULAR</unmanaged-short>	
        Regular = unchecked((int)400),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Medium (500).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_MEDIUM']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_MEDIUM</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_MEDIUM</unmanaged-short>	
        Medium = unchecked((int)500),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Demi-bold (600).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_DEMI_BOLD']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_DEMI_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_DEMI_BOLD</unmanaged-short>	
        DemiBold = unchecked((int)600),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Semi-bold (600).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_SEMI_BOLD']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_SEMI_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_SEMI_BOLD</unmanaged-short>	
        SemiBold = unchecked((int)600),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Bold (700).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_BOLD']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_BOLD</unmanaged-short>	
        Bold = unchecked((int)700),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Extra-bold (800).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_EXTRA_BOLD']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_EXTRA_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_EXTRA_BOLD</unmanaged-short>	
        ExtraBold = unchecked((int)800),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Ultra-bold (800).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_ULTRA_BOLD']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_ULTRA_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_ULTRA_BOLD</unmanaged-short>	
        UltraBold = unchecked((int)800),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Black (900).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_BLACK']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_BLACK</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_BLACK</unmanaged-short>	
        Black = unchecked((int)900),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Heavy (900).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_HEAVY']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_HEAVY</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_HEAVY</unmanaged-short>	
        Heavy = unchecked((int)900),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Extra-black (950).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_EXTRA_BLACK']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_EXTRA_BLACK</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_EXTRA_BLACK</unmanaged-short>	
        ExtraBlack = unchecked((int)950),			
        
        /// <summary>	
        /// <dd> <p>Predefined font weight : Ultra-black (950).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_FONT_WEIGHT_ULTRA_BLACK']/*"/>	
        /// <msdn-id>dd368082</msdn-id>	
        /// <unmanaged>DWRITE_FONT_WEIGHT_ULTRA_BLACK</unmanaged>	
        /// <unmanaged-short>DWRITE_FONT_WEIGHT_ULTRA_BLACK</unmanaged-short>	
        UltraBlack = unchecked((int)950),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.GlyphOrientationAngle"/></strong> enumeration contains values that specify how the glyph is oriented to the x-axis.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The text analyzer outputs <strong><see cref="SharpDX.DirectWrite.GlyphOrientationAngle"/></strong> values. The value that it outputs depends on the desired orientation, bidi level, and character properties.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_GLYPH_ORIENTATION_ANGLE']/*"/>	
    /// <msdn-id>jj126260</msdn-id>	
    /// <unmanaged>DWRITE_GLYPH_ORIENTATION_ANGLE</unmanaged>	
    /// <unmanaged-short>DWRITE_GLYPH_ORIENTATION_ANGLE</unmanaged-short>	
    public enum GlyphOrientationAngle : int {	
        
        /// <summary>	
        /// <dd> <p>Glyph orientation is upright.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_GLYPH_ORIENTATION_ANGLE_0_DEGREES']/*"/>	
        /// <msdn-id>jj126260</msdn-id>	
        /// <unmanaged>DWRITE_GLYPH_ORIENTATION_ANGLE_0_DEGREES</unmanaged>	
        /// <unmanaged-short>DWRITE_GLYPH_ORIENTATION_ANGLE_0_DEGREES</unmanaged-short>	
        Degrees0 = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Glyph orientation is rotated 90 degrees clockwise.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_GLYPH_ORIENTATION_ANGLE_90_DEGREES']/*"/>	
        /// <msdn-id>jj126260</msdn-id>	
        /// <unmanaged>DWRITE_GLYPH_ORIENTATION_ANGLE_90_DEGREES</unmanaged>	
        /// <unmanaged-short>DWRITE_GLYPH_ORIENTATION_ANGLE_90_DEGREES</unmanaged-short>	
        Degrees90 = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Glyph orientation is upside-down.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_GLYPH_ORIENTATION_ANGLE_180_DEGREES']/*"/>	
        /// <msdn-id>jj126260</msdn-id>	
        /// <unmanaged>DWRITE_GLYPH_ORIENTATION_ANGLE_180_DEGREES</unmanaged>	
        /// <unmanaged-short>DWRITE_GLYPH_ORIENTATION_ANGLE_180_DEGREES</unmanaged-short>	
        Degrees180 = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Glyph orientation is rotated 270 degrees clockwise.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_GLYPH_ORIENTATION_ANGLE_270_DEGREES']/*"/>	
        /// <msdn-id>jj126260</msdn-id>	
        /// <unmanaged>DWRITE_GLYPH_ORIENTATION_ANGLE_270_DEGREES</unmanaged>	
        /// <unmanaged-short>DWRITE_GLYPH_ORIENTATION_ANGLE_270_DEGREES</unmanaged-short>	
        Degrees270 = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>The informational string enumeration which identifies a string embedded in a font file.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_ID']/*"/>	
    /// <msdn-id>dd368094</msdn-id>	
    /// <unmanaged>DWRITE_INFORMATIONAL_STRING_ID</unmanaged>	
    /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_ID</unmanaged-short>	
    public enum InformationalStringId : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the unspecified name ID.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_NONE']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_NONE</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the copyright notice provided by the font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_COPYRIGHT_NOTICE']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_COPYRIGHT_NOTICE</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_COPYRIGHT_NOTICE</unmanaged-short>	
        CopyrightNotice = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing a version number.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_VERSION_STRINGS']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_VERSION_STRINGS</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_VERSION_STRINGS</unmanaged-short>	
        VersionStrings = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the trademark information provided by the font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_TRADEMARK']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_TRADEMARK</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_TRADEMARK</unmanaged-short>	
        Trademark = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the name of the font manufacturer.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_MANUFACTURER']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_MANUFACTURER</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_MANUFACTURER</unmanaged-short>	
        Manufacturer = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the name of the font designer.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESIGNER']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_DESIGNER</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_DESIGNER</unmanaged-short>	
        Designer = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the URL of the font designer (with protocol, e.g., http://, ftp://).</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESIGNER_URL']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_DESIGNER_URL</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_DESIGNER_URL</unmanaged-short>	
        DesignerUrl = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the description of the font. This may also contain revision information, usage recommendations, history, features, and so on.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESCRIPTION']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_DESCRIPTION</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_DESCRIPTION</unmanaged-short>	
        Description = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the URL of the font vendor (with protocol, e.g., http://, ftp://). If a unique serial number is embedded in the URL, it can be used to register the font.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_FONT_VENDOR_URL']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_FONT_VENDOR_URL</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_FONT_VENDOR_URL</unmanaged-short>	
        FontVendorUrl = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the description of how the font may be legally used, or different example scenarios for licensed use.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_LICENSE_DESCRIPTION']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_LICENSE_DESCRIPTION</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_LICENSE_DESCRIPTION</unmanaged-short>	
        LicenseDescription = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the URL where additional licensing information can be found.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_LICENSE_INFO_URL']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_LICENSE_INFO_URL</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_LICENSE_INFO_URL</unmanaged-short>	
        LicenseInformationUrl = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the GDI-compatible family name. Since GDI allows a maximum of four fonts per family, fonts in the same family may have different GDI-compatible family names (e.g., "Arial", "Arial Narrow", "Arial Black").</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_WIN32_FAMILY_NAMES']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_WIN32_FAMILY_NAMES</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_WIN32_FAMILY_NAMES</unmanaged-short>	
        Win32FamilyNames = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing a GDI-compatible subfamily name.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_WIN32_SUBFAMILY_NAMES']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_WIN32_SUBFAMILY_NAMES</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_WIN32_SUBFAMILY_NAMES</unmanaged-short>	
        Win32SubFamilyNames = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the family name preferred by the designer. This enables font designers to group more than four fonts in a single family without losing compatibility with GDI. This name is typically only present if it differs from the GDI-compatible family name.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_PREFERRED_FAMILY_NAMES']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_PREFERRED_FAMILY_NAMES</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_PREFERRED_FAMILY_NAMES</unmanaged-short>	
        PreferRedFamilyNames = unchecked((int)13),			
        
        /// <summary>	
        /// <dd> <p>Indicates the string containing the subfamily name preferred by the designer. This name is typically only present if it differs from the GDI-compatible subfamily name.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_PREFERRED_SUBFAMILY_NAMES']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_PREFERRED_SUBFAMILY_NAMES</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_PREFERRED_SUBFAMILY_NAMES</unmanaged-short>	
        PreferRedSubFamilyNames = unchecked((int)14),			
        
        /// <summary>	
        /// <dd> <p>Contains sample text for display in font lists. This can be the font name or any other text that the designer thinks is the best  example to display the font in.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_SAMPLE_TEXT']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_SAMPLE_TEXT</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_SAMPLE_TEXT</unmanaged-short>	
        SampleText = unchecked((int)15),			
        
        /// <summary>	
        /// <dd> <p>The full name of the font, like Arial Bold, from <em>name id 4</em> in the name table</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_FULL_NAME']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_FULL_NAME</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_FULL_NAME</unmanaged-short>	
        FullName = unchecked((int)16),			
        
        /// <summary>	
        /// <dd> <p>The postscript name of the font, like GillSans-Bold, from <em>name id 6</em> in the name table.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_NAME']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_NAME</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_NAME</unmanaged-short>	
        PostscriptName = unchecked((int)17),			
        
        /// <summary>	
        /// <dd> <p>The postscript CID findfont name, from <em>name id 20</em> in the name table</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_CID_NAME']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_CID_NAME</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_POSTSCRIPT_CID_NAME</unmanaged-short>	
        PostscriptCidName = unchecked((int)18),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_WWS_FAMILY_NAME']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_WWS_FAMILY_NAME</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_WWS_FAMILY_NAME</unmanaged-short>	
        WwsFamilyName = unchecked((int)19),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_DESIGN_SCRIPT_LANGUAGE_TAG']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_DESIGN_SCRIPT_LANGUAGE_TAG</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_DESIGN_SCRIPT_LANGUAGE_TAG</unmanaged-short>	
        DesignScriptLanguageTag = unchecked((int)20),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_INFORMATIONAL_STRING_SUPPORTED_SCRIPT_LANGUAGE_TAG']/*"/>	
        /// <msdn-id>dd368094</msdn-id>	
        /// <unmanaged>DWRITE_INFORMATIONAL_STRING_SUPPORTED_SCRIPT_LANGUAGE_TAG</unmanaged>	
        /// <unmanaged-short>DWRITE_INFORMATIONAL_STRING_SUPPORTED_SCRIPT_LANGUAGE_TAG</unmanaged-short>	
        SupportedScriptLanguageTag = unchecked((int)21),			
    }
    
    /// <summary>	
    /// <p>The method used for line spacing in a text layout.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The line spacing method is set by using the <strong>SetLineSpacing</strong> method of the <strong><see cref="SharpDX.DirectWrite.TextFormat"/></strong> or <strong><see cref="SharpDX.DirectWrite.TextLayout"/></strong> interfaces.  To get  the current line spacing method of a text format or text layou use the <strong>GetLineSpacing</strong>.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD']/*"/>	
    /// <msdn-id>dd368101</msdn-id>	
    /// <unmanaged>DWRITE_LINE_SPACING_METHOD</unmanaged>	
    /// <unmanaged-short>DWRITE_LINE_SPACING_METHOD</unmanaged-short>	
    public enum LineSpacingMethod : int {	
        
        /// <summary>	
        /// <dd> <p>Line spacing depends solely on the content, adjusting to accommodate the size of fonts and inline objects.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD_DEFAULT']/*"/>	
        /// <msdn-id>dd368101</msdn-id>	
        /// <unmanaged>DWRITE_LINE_SPACING_METHOD_DEFAULT</unmanaged>	
        /// <unmanaged-short>DWRITE_LINE_SPACING_METHOD_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Lines are explicitly set to uniform spacing, regardless of the size of fonts and inline objects. This can be useful to avoid the uneven appearance that can occur from font fallback.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD_UNIFORM']/*"/>	
        /// <msdn-id>dd368101</msdn-id>	
        /// <unmanaged>DWRITE_LINE_SPACING_METHOD_UNIFORM</unmanaged>	
        /// <unmanaged-short>DWRITE_LINE_SPACING_METHOD_UNIFORM</unmanaged-short>	
        Uniform = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_LINE_SPACING_METHOD_PROPORTIONAL']/*"/>	
        /// <msdn-id>dd368101</msdn-id>	
        /// <unmanaged>DWRITE_LINE_SPACING_METHOD_PROPORTIONAL</unmanaged>	
        /// <unmanaged-short>DWRITE_LINE_SPACING_METHOD_PROPORTIONAL</unmanaged-short>	
        Proportional = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Specifies how to apply number substitution on digits and related punctuation.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD']/*"/>	
    /// <msdn-id>dd368107</msdn-id>	
    /// <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD</unmanaged>	
    /// <unmanaged-short>DWRITE_NUMBER_SUBSTITUTION_METHOD</unmanaged-short>	
    public enum NumberSubstitutionMethod : int {	
        
        /// <summary>	
        /// <dd> <p>Specifies that the substitution method should be determined based on the LOCALE_IDIGITSUBSTITUTION value of the specified text culture.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_FROM_CULTURE']/*"/>	
        /// <msdn-id>dd368107</msdn-id>	
        /// <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_FROM_CULTURE</unmanaged>	
        /// <unmanaged-short>DWRITE_NUMBER_SUBSTITUTION_METHOD_FROM_CULTURE</unmanaged-short>	
        FromCulture = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>If the culture is Arabic or Persian, specifies that the number shapes depend on the context. Either traditional or nominal number shapes are used, depending on the nearest preceding strong character or (if there is none) the reading direction of the paragraph.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_CONTEXTUAL']/*"/>	
        /// <msdn-id>dd368107</msdn-id>	
        /// <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_CONTEXTUAL</unmanaged>	
        /// <unmanaged-short>DWRITE_NUMBER_SUBSTITUTION_METHOD_CONTEXTUAL</unmanaged-short>	
        Contextual = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Specifies that code points 0x30-0x39 are always rendered as nominal numeral shapes (ones of the European number), that is, no substitution is performed.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_NONE']/*"/>	
        /// <msdn-id>dd368107</msdn-id>	
        /// <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_NONE</unmanaged>	
        /// <unmanaged-short>DWRITE_NUMBER_SUBSTITUTION_METHOD_NONE</unmanaged-short>	
        None = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Specifies that numbers are rendered using the national number shapes as specified by the LOCALE_SNATIVEDIGITS value of the specified text culture.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_NATIONAL']/*"/>	
        /// <msdn-id>dd368107</msdn-id>	
        /// <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_NATIONAL</unmanaged>	
        /// <unmanaged-short>DWRITE_NUMBER_SUBSTITUTION_METHOD_NATIONAL</unmanaged-short>	
        National = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Specifies that numbers are rendered using the traditional shapes for the specified culture. For most cultures, this is the same as NativeNational. However, NativeNational results in Latin numbers for some Arabic cultures, whereasDWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL results in arabic numbers for all Arabic cultures.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL']/*"/>	
        /// <msdn-id>dd368107</msdn-id>	
        /// <unmanaged>DWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL</unmanaged>	
        /// <unmanaged-short>DWRITE_NUMBER_SUBSTITUTION_METHOD_TRADITIONAL</unmanaged-short>	
        Traditional = unchecked((int)4),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.OutlineThreshold"/></strong> enumeration contains values that specify the policy used by the <strong><see cref="SharpDX.DirectWrite.FontFace1.GetRecommendedRenderingMode"/></strong> method to determine whether to render glyphs in outline mode.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>Glyphs are rendered in outline mode by default at large sizes for performance reasons, but how large (that is, the outline threshold) depends on the quality of outline rendering. If the graphics system renders anti-aliased outlines, a relatively low threshold is used. But if the graphics system renders aliased outlines, a much higher threshold is used.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_OUTLINE_THRESHOLD']/*"/>	
    /// <msdn-id>jj126262</msdn-id>	
    /// <unmanaged>DWRITE_OUTLINE_THRESHOLD</unmanaged>	
    /// <unmanaged-short>DWRITE_OUTLINE_THRESHOLD</unmanaged-short>	
    public enum OutlineThreshold : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_OUTLINE_THRESHOLD_ANTIALIASED']/*"/>	
        /// <msdn-id>jj126262</msdn-id>	
        /// <unmanaged>DWRITE_OUTLINE_THRESHOLD_ANTIALIASED</unmanaged>	
        /// <unmanaged-short>DWRITE_OUTLINE_THRESHOLD_ANTIALIASED</unmanaged-short>	
        Antialiased = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_OUTLINE_THRESHOLD_ALIASED']/*"/>	
        /// <msdn-id>jj126262</msdn-id>	
        /// <unmanaged>DWRITE_OUTLINE_THRESHOLD_ALIASED</unmanaged>	
        /// <unmanaged-short>DWRITE_OUTLINE_THRESHOLD_ALIASED</unmanaged-short>	
        Aliased = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseArmStyle"/></strong> enumeration contains values that specify the style of termination of stems and rounded letterforms for text.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE']/*"/>	
    /// <msdn-id>hh997721</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_ARM_STYLE</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE</unmanaged-short>	
    public enum PanoseArmStyle : int {	
        
        /// <summary>	
        /// <dd> <p>Any arm style.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_ANY']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit arm style.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_NO_FIT']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORIZONTAL']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORIZONTAL</unmanaged-short>	
        StraightArmsHorizontal = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight wedge.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_WEDGE']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_WEDGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_WEDGE</unmanaged-short>	
        StraightArmsWedge = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERTICAL']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERTICAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERTICAL</unmanaged-short>	
        StraightArmsVertical = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight single serif.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_SINGLE_SERIF']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_SINGLE_SERIF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_SINGLE_SERIF</unmanaged-short>	
        StraightArmsSingleSerif = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight double serif.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_DOUBLE_SERIF']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_DOUBLE_SERIF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_DOUBLE_SERIF</unmanaged-short>	
        StraightArmsDoubleSerif = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_HORIZONTAL']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_HORIZONTAL</unmanaged-short>	
        NonstraightArmsHorizontal = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight wedge.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_WEDGE']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_WEDGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_WEDGE</unmanaged-short>	
        NonstraightArmsWedge = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_VERTICAL']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_VERTICAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_VERTICAL</unmanaged-short>	
        NonstraightArmsVertical = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight single serif.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_SINGLE_SERIF']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_SINGLE_SERIF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_SINGLE_SERIF</unmanaged-short>	
        NonstraightArmsSingleSerif = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight double serif.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_DOUBLE_SERIF']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_DOUBLE_SERIF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_NONSTRAIGHT_ARMS_DOUBLE_SERIF</unmanaged-short>	
        NonstraightArmsDoubleSerif = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORZ']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORZ</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_HORZ</unmanaged-short>	
        StraightArmsHorz = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The arm style is straight vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERT']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_STRAIGHT_ARMS_VERT</unmanaged-short>	
        StraightArmsVert = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_HORZ']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_HORZ</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_HORZ</unmanaged-short>	
        BentArmsHorz = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight wedge.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_WEDGE']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_WEDGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_WEDGE</unmanaged-short>	
        BentArmsWedge = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_VERT']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_VERT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_VERT</unmanaged-short>	
        BentArmsVert = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight single serif.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_SINGLE_SERIF']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_SINGLE_SERIF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_SINGLE_SERIF</unmanaged-short>	
        BentArmsSingleSerif = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>The arm style is non-straight double serif.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_DOUBLE_SERIF']/*"/>	
        /// <msdn-id>hh997721</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_DOUBLE_SERIF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ARM_STYLE_BENT_ARMS_DOUBLE_SERIF</unmanaged-short>	
        BentArmsDoubleSerif = unchecked((int)11),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseAspectRatio"/></strong> enumeration contains values that specify info about the ratio between width and height of the character face.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT']/*"/>	
    /// <msdn-id>hh997723</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_ASPECT</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_ASPECT</unmanaged-short>	
    public enum PanoseAspect : int {	
        
        /// <summary>	
        /// <dd> <p>Any aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_ANY']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_NO_FIT']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Very condensed aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_SUPER_CONDENSED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_SUPER_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_SUPER_CONDENSED</unmanaged-short>	
        SuperCondensed = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Condensed aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_VERY_CONDENSED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_VERY_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_VERY_CONDENSED</unmanaged-short>	
        VeryCondensed = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Normal aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_CONDENSED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_CONDENSED</unmanaged-short>	
        Condensed = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Expanded aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_NORMAL']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_NORMAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_NORMAL</unmanaged-short>	
        Normal = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Very expanded aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_EXTENDED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_EXTENDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_EXTENDED</unmanaged-short>	
        Extended = unchecked((int)6),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_VERY_EXTENDED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_VERY_EXTENDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_VERY_EXTENDED</unmanaged-short>	
        VeryExtended = unchecked((int)7),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_SUPER_EXTENDED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_SUPER_EXTENDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_SUPER_EXTENDED</unmanaged-short>	
        SuperExtended = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_MONOSPACED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_MONOSPACED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_MONOSPACED</unmanaged-short>	
        Monospaced = unchecked((int)9),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseAspectRatio"/></strong> enumeration contains values that specify info about the ratio between width and height of the character face.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO']/*"/>	
    /// <msdn-id>hh997723</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO</unmanaged-short>	
    public enum PanoseAspectRatio : int {	
        
        /// <summary>	
        /// <dd> <p>Any aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_ANY']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_NO_FIT']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Very condensed aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_VERY_CONDENSED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_VERY_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_VERY_CONDENSED</unmanaged-short>	
        VeryCondensed = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Condensed aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_CONDENSED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_CONDENSED</unmanaged-short>	
        Condensed = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Normal aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_NORMAL']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_NORMAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_NORMAL</unmanaged-short>	
        Normal = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Expanded aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_EXPANDED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_EXPANDED</unmanaged-short>	
        Expanded = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Very expanded aspect ratio.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_ASPECT_RATIO_VERY_EXPANDED']/*"/>	
        /// <msdn-id>hh997723</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_ASPECT_RATIO_VERY_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_ASPECT_RATIO_VERY_EXPANDED</unmanaged-short>	
        VeryExpanded = unchecked((int)6),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseCharacterRanges"/></strong> enumeration contains values that specify the type of characters available in the font.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES']/*"/>	
    /// <msdn-id>hh997724</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES</unmanaged-short>	
    public enum PanoseCharacterRanges : int {	
        
        /// <summary>	
        /// <dd> <p>Any range.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES_ANY']/*"/>	
        /// <msdn-id>hh997724</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for range.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES_NO_FIT']/*"/>	
        /// <msdn-id>hh997724</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The range includes extended collection.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES_EXTENDED_COLLECTION']/*"/>	
        /// <msdn-id>hh997724</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES_EXTENDED_COLLECTION</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES_EXTENDED_COLLECTION</unmanaged-short>	
        ExtendedCollection = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The range includes literals.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES_LITERALS']/*"/>	
        /// <msdn-id>hh997724</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES_LITERALS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES_LITERALS</unmanaged-short>	
        Literals = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The range doesn't include lower case.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES_NO_LOWER_CASE']/*"/>	
        /// <msdn-id>hh997724</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES_NO_LOWER_CASE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES_NO_LOWER_CASE</unmanaged-short>	
        NoLowerCase = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The range includes small capitals.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CHARACTER_RANGES_SMALL_CAPS']/*"/>	
        /// <msdn-id>hh997724</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CHARACTER_RANGES_SMALL_CAPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CHARACTER_RANGES_SMALL_CAPS</unmanaged-short>	
        SmallCaps = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseContrast"/></strong> enumeration contains values that specify the ratio between thickest and thinnest point of the stroke for a letter such as uppercase 'O'.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST']/*"/>	
    /// <msdn-id>hh997725</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_CONTRAST</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_CONTRAST</unmanaged-short>	
    public enum PanoseContrast : int {	
        
        /// <summary>	
        /// <dd> <p>Any contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_ANY']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_NO_FIT']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>No contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_NONE']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_NONE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_NONE</unmanaged-short>	
        None = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Very low contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_VERY_LOW']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_VERY_LOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_VERY_LOW</unmanaged-short>	
        VeryLow = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Low contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_LOW']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_LOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_LOW</unmanaged-short>	
        Low = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Medium low contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_MEDIUM_LOW']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_MEDIUM_LOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_MEDIUM_LOW</unmanaged-short>	
        MediumLow = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Medium contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_MEDIUM']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_MEDIUM</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_MEDIUM</unmanaged-short>	
        Medium = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Medium high contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_MEDIUM_HIGH']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_MEDIUM_HIGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_MEDIUM_HIGH</unmanaged-short>	
        MediumHigh = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>High contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_HIGH']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_HIGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_HIGH</unmanaged-short>	
        High = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Very high contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_VERY_HIGH']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_VERY_HIGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_VERY_HIGH</unmanaged-short>	
        VeryHigh = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Horizontal low contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_HORIZONTAL_LOW']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_HORIZONTAL_LOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_HORIZONTAL_LOW</unmanaged-short>	
        HorizontalLow = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Horizontal medium contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_HORIZONTAL_MEDIUM']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_HORIZONTAL_MEDIUM</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_HORIZONTAL_MEDIUM</unmanaged-short>	
        HorizontalMedium = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Horizontal high contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_HORIZONTAL_HIGH']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_HORIZONTAL_HIGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_HORIZONTAL_HIGH</unmanaged-short>	
        HorizontalHigh = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Broken contrast.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_CONTRAST_BROKEN']/*"/>	
        /// <msdn-id>hh997725</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_CONTRAST_BROKEN</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_CONTRAST_BROKEN</unmanaged-short>	
        Broken = unchecked((int)13),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseDecorativeClass"/></strong> enumeration contains values that specify the general look of the character face.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS']/*"/>	
    /// <msdn-id>hh997726</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS</unmanaged-short>	
    public enum PanoseDecorativeClass : int {	
        
        /// <summary>	
        /// <dd> <p>Any class of decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_ANY']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_NO_FIT']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Derivative decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_DERIVATIVE']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_DERIVATIVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_DERIVATIVE</unmanaged-short>	
        Derivative = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Nonstandard topology decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_TOPOLOGY']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_TOPOLOGY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_TOPOLOGY</unmanaged-short>	
        NonStandardTopology = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Nonstandard elements decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ELEMENTS']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ELEMENTS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ELEMENTS</unmanaged-short>	
        NonStandardElements = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Nonstandard aspect decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ASPECT']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ASPECT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_NONSTANDARD_ASPECT</unmanaged-short>	
        NonStandardAspect = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Initials decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_INITIALS']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_INITIALS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_INITIALS</unmanaged-short>	
        Initials = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Cartoon decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_CARTOON']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_CARTOON</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_CARTOON</unmanaged-short>	
        Cartoon = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Picture stems decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_PICTURE_STEMS']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_PICTURE_STEMS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_PICTURE_STEMS</unmanaged-short>	
        PictureStems = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Ornamented decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_ORNAMENTED']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_ORNAMENTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_ORNAMENTED</unmanaged-short>	
        Ornamented = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Text and background decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_TEXT_AND_BACKGROUND']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_TEXT_AND_BACKGROUND</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_TEXT_AND_BACKGROUND</unmanaged-short>	
        TextAndBackground = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Collage decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_COLLAGE']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_COLLAGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_COLLAGE</unmanaged-short>	
        Collage = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Montage decorative typeface.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_CLASS_MONTAGE']/*"/>	
        /// <msdn-id>hh997726</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_CLASS_MONTAGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_CLASS_MONTAGE</unmanaged-short>	
        Montage = unchecked((int)12),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseDecorativeTopology"/></strong> enumeration contains values that specify the overall shape characteristics of the font.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY']/*"/>	
    /// <msdn-id>hh997727</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY</unmanaged-short>	
    public enum PanoseDecorativeTopology : int {	
        
        /// <summary>	
        /// <dd> <p>Any decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ANY']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_NO_FIT']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Standard decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_STANDARD']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_STANDARD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_STANDARD</unmanaged-short>	
        Standard = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Square decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SQUARE']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SQUARE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SQUARE</unmanaged-short>	
        Square = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Multiple segment decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_MULTIPLE_SEGMENT']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_MULTIPLE_SEGMENT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_MULTIPLE_SEGMENT</unmanaged-short>	
        MultipleSegment = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Art deco decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ART_DECO']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ART_DECO</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_ART_DECO</unmanaged-short>	
        ArtDeco = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Uneven weighting decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UNEVEN_WEIGHTING']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UNEVEN_WEIGHTING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UNEVEN_WEIGHTING</unmanaged-short>	
        UnevenWeighting = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Diverse arms decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_ARMS']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_ARMS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_ARMS</unmanaged-short>	
        DiverseArms = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Diverse forms decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_FORMS']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_DIVERSE_FORMS</unmanaged-short>	
        DiverseForms = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Lombardic forms decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_LOMBARDIC_FORMS']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_LOMBARDIC_FORMS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_LOMBARDIC_FORMS</unmanaged-short>	
        LombardicForms = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Upper case in lower case decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UPPER_CASE_IN_LOWER_CASE']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UPPER_CASE_IN_LOWER_CASE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_UPPER_CASE_IN_LOWER_CASE</unmanaged-short>	
        UpperCaseInLowerCase = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>The decorative topology is implied.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_IMPLIED_TOPOLOGY']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_IMPLIED_TOPOLOGY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_IMPLIED_TOPOLOGY</unmanaged-short>	
        ImpliedTopology = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Horseshoe E and A decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_HORSESHOE_E_AND_A']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_HORSESHOE_E_AND_A</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_HORSESHOE_E_AND_A</unmanaged-short>	
        HorseshoeEAndA = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Cursive decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_CURSIVE']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_CURSIVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_CURSIVE</unmanaged-short>	
        Cursive = unchecked((int)13),			
        
        /// <summary>	
        /// <dd> <p>Blackletter decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_BLACKLETTER']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_BLACKLETTER</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_BLACKLETTER</unmanaged-short>	
        Blackletter = unchecked((int)14),			
        
        /// <summary>	
        /// <dd> <p>Swash variance decorative topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SWASH_VARIANCE']/*"/>	
        /// <msdn-id>hh997727</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SWASH_VARIANCE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_DECORATIVE_TOPOLOGY_SWASH_VARIANCE</unmanaged-short>	
        SwashVariance = unchecked((int)15),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseFamily"/></strong> enumeration contains values that specify the kind of typeface classification.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY']/*"/>	
    /// <msdn-id>hh995028</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_FAMILY</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_FAMILY</unmanaged-short>	
    public enum PanoseFamily : int {	
        
        /// <summary>	
        /// <dd> <p>Any typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_ANY']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_NO_FIT']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Text display typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_TEXT_DISPLAY']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_TEXT_DISPLAY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_TEXT_DISPLAY</unmanaged-short>	
        TextDisplay = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Script (or hand written) typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_SCRIPT']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_SCRIPT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_SCRIPT</unmanaged-short>	
        Script = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Decorative typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_DECORATIVE']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_DECORATIVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_DECORATIVE</unmanaged-short>	
        Decorative = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Symbol typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_SYMBOL']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_SYMBOL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_SYMBOL</unmanaged-short>	
        Symbol = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Pictorial (or symbol) typeface classification.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FAMILY_PICTORIAL']/*"/>	
        /// <msdn-id>hh995028</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FAMILY_PICTORIAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FAMILY_PICTORIAL</unmanaged-short>	
        Pictorial = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseFill"/></strong> enumeration contains values that specify the type of fill and line treatment.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL']/*"/>	
    /// <msdn-id>hh997728</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_FILL</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_FILL</unmanaged-short>	
    public enum PanoseFill : int {	
        
        /// <summary>	
        /// <dd> <p>Any fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_ANY']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_NO_FIT']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The fill is the standard solid fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_STANDARD_SOLID_FILL']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_STANDARD_SOLID_FILL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_STANDARD_SOLID_FILL</unmanaged-short>	
        StandardSolidFill = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>No fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_NO_FILL']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_NO_FILL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_NO_FILL</unmanaged-short>	
        NoFill = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The fill is patterned fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_PATTERNED_FILL']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_PATTERNED_FILL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_PATTERNED_FILL</unmanaged-short>	
        PatternedFill = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The fill is complex fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_COMPLEX_FILL']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_COMPLEX_FILL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_COMPLEX_FILL</unmanaged-short>	
        ComplexFill = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>The fill is shaped fill.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_SHAPED_FILL']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_SHAPED_FILL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_SHAPED_FILL</unmanaged-short>	
        ShapedFill = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The fill is drawn distressed.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FILL_DRAWN_DISTRESSED']/*"/>	
        /// <msdn-id>hh997728</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FILL_DRAWN_DISTRESSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FILL_DRAWN_DISTRESSED</unmanaged-short>	
        DrawnDistressed = unchecked((int)7),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseFinials"/></strong> enumeration contains values that specify how character ends and miniscule ascenders are treated.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS']/*"/>	
    /// <msdn-id>hh997729</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_FINIALS</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_FINIALS</unmanaged-short>	
    public enum PanoseFinials : int {	
        
        /// <summary>	
        /// <dd> <p>Any finials.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_ANY']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for finials.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_NO_FIT']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>No loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_NONE_NO_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_NONE_NO_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_NONE_NO_LOOPS</unmanaged-short>	
        NoneNoLoops = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>No closed loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_NONE_CLOSED_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_NONE_CLOSED_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_NONE_CLOSED_LOOPS</unmanaged-short>	
        NoneClosedLoops = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>No open loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_NONE_OPEN_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_NONE_OPEN_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_NONE_OPEN_LOOPS</unmanaged-short>	
        NoneOpenLoops = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Sharp with no loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_SHARP_NO_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_SHARP_NO_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_SHARP_NO_LOOPS</unmanaged-short>	
        SharpNoLoops = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Sharp with closed loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_SHARP_CLOSED_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_SHARP_CLOSED_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_SHARP_CLOSED_LOOPS</unmanaged-short>	
        SharpClosedLoops = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Sharp with open loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_SHARP_OPEN_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_SHARP_OPEN_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_SHARP_OPEN_LOOPS</unmanaged-short>	
        SharpOpenLoops = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Tapered with no loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_TAPERED_NO_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_TAPERED_NO_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_TAPERED_NO_LOOPS</unmanaged-short>	
        TaperedNoLoops = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Tapered with closed loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_TAPERED_CLOSED_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_TAPERED_CLOSED_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_TAPERED_CLOSED_LOOPS</unmanaged-short>	
        TaperedClosedLoops = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Tapered with open loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_TAPERED_OPEN_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_TAPERED_OPEN_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_TAPERED_OPEN_LOOPS</unmanaged-short>	
        TaperedOpenLoops = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Round with no loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_ROUND_NO_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_ROUND_NO_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_ROUND_NO_LOOPS</unmanaged-short>	
        RoundNoLoops = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Round with closed loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_ROUND_CLOSED_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_ROUND_CLOSED_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_ROUND_CLOSED_LOOPS</unmanaged-short>	
        RoundClosedLoops = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Round with open loops.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_FINIALS_ROUND_OPEN_LOOPS']/*"/>	
        /// <msdn-id>hh997729</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_FINIALS_ROUND_OPEN_LOOPS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_FINIALS_ROUND_OPEN_LOOPS</unmanaged-short>	
        RoundOpenLoops = unchecked((int)13),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseLetterform"/></strong> enumeration contains values that specify the roundness of letterform for text.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM']/*"/>	
    /// <msdn-id>hh997730</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_LETTERFORM</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM</unmanaged-short>	
    public enum PanoseLetterform : int {	
        
        /// <summary>	
        /// <dd> <p>Any letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_ANY']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NO_FIT']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Normal contact letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_CONTACT']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_CONTACT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_CONTACT</unmanaged-short>	
        NormalContact = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Normal weighted letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_WEIGHTED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_WEIGHTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_WEIGHTED</unmanaged-short>	
        NormalWeighted = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Normal boxed letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_BOXED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_BOXED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_BOXED</unmanaged-short>	
        NormalBoxed = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Normal flattened letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_FLATTENED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_FLATTENED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_FLATTENED</unmanaged-short>	
        NormalFlattened = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Normal rounded letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_ROUNDED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_ROUNDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_ROUNDED</unmanaged-short>	
        NormalRounded = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Normal off-center letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_OFF_CENTER']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_OFF_CENTER</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_OFF_CENTER</unmanaged-short>	
        NormalOffCenter = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Normal square letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_NORMAL_SQUARE']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_NORMAL_SQUARE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_NORMAL_SQUARE</unmanaged-short>	
        NormalSquare = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Oblique contact letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_CONTACT']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_CONTACT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_CONTACT</unmanaged-short>	
        ObliqueContact = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Oblique weighted letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_WEIGHTED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_WEIGHTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_WEIGHTED</unmanaged-short>	
        ObliqueWeighted = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Oblique boxed letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_BOXED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_BOXED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_BOXED</unmanaged-short>	
        ObliqueBoxed = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Oblique flattened letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_FLATTENED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_FLATTENED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_FLATTENED</unmanaged-short>	
        ObliqueFlattened = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Oblique rounded letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_ROUNDED']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_ROUNDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_ROUNDED</unmanaged-short>	
        ObliqueRounded = unchecked((int)13),			
        
        /// <summary>	
        /// <dd> <p>Oblique off-center letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_OFF_CENTER']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_OFF_CENTER</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_OFF_CENTER</unmanaged-short>	
        ObliqueOffCenter = unchecked((int)14),			
        
        /// <summary>	
        /// <dd> <p>Oblique square letterform.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LETTERFORM_OBLIQUE_SQUARE']/*"/>	
        /// <msdn-id>hh997730</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LETTERFORM_OBLIQUE_SQUARE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LETTERFORM_OBLIQUE_SQUARE</unmanaged-short>	
        ObliqueSquare = unchecked((int)15),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseLining"/></strong> enumeration contains values that specify the handling of the outline for the decorative typeface.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING']/*"/>	
    /// <msdn-id>hh997731</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_LINING</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_LINING</unmanaged-short>	
    public enum PanoseLining : int {	
        
        /// <summary>	
        /// <dd> <p>Any lining.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_ANY']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for lining.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_NO_FIT']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>No lining.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_NONE']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_NONE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_NONE</unmanaged-short>	
        None = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The lining is inline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_INLINE']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_INLINE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_INLINE</unmanaged-short>	
        Inline = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The lining is outline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_OUTLINE']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_OUTLINE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_OUTLINE</unmanaged-short>	
        Outline = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The lining is engraved.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_ENGRAVED']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_ENGRAVED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_ENGRAVED</unmanaged-short>	
        Engraved = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>The lining is shadowed.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_SHADOW']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_SHADOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_SHADOW</unmanaged-short>	
        Shadow = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The lining is relief.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_RELIEF']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_RELIEF</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_RELIEF</unmanaged-short>	
        Relief = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>The lining is backdrop.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_LINING_BACKDROP']/*"/>	
        /// <msdn-id>hh997731</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_LINING_BACKDROP</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_LINING_BACKDROP</unmanaged-short>	
        Backdrop = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseMidline"/></strong> enumeration contains values that specify info about the placement of midline across uppercase characters and the treatment of diagonal stem apexes.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE']/*"/>	
    /// <msdn-id>hh997732</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_MIDLINE</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_MIDLINE</unmanaged-short>	
    public enum PanoseMidline : int {	
        
        /// <summary>	
        /// <dd> <p>Any midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_ANY']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_NO_FIT']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Standard trimmed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_STANDARD_TRIMMED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_STANDARD_TRIMMED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_STANDARD_TRIMMED</unmanaged-short>	
        StandardTrimmed = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Standard pointed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_STANDARD_POINTED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_STANDARD_POINTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_STANDARD_POINTED</unmanaged-short>	
        StandardPointed = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Standard serifed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_STANDARD_SERIFED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_STANDARD_SERIFED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_STANDARD_SERIFED</unmanaged-short>	
        StandardSerifed = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>High trimmed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_HIGH_TRIMMED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_HIGH_TRIMMED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_HIGH_TRIMMED</unmanaged-short>	
        HighTrimmed = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>High pointed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_HIGH_POINTED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_HIGH_POINTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_HIGH_POINTED</unmanaged-short>	
        HighPointed = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>High serifed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_HIGH_SERIFED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_HIGH_SERIFED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_HIGH_SERIFED</unmanaged-short>	
        HighSerifed = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Constant trimmed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_CONSTANT_TRIMMED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_CONSTANT_TRIMMED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_CONSTANT_TRIMMED</unmanaged-short>	
        ConstantTrimmed = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Constant pointed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_CONSTANT_POINTED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_CONSTANT_POINTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_CONSTANT_POINTED</unmanaged-short>	
        ConstantPointed = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Constant serifed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_CONSTANT_SERIFED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_CONSTANT_SERIFED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_CONSTANT_SERIFED</unmanaged-short>	
        ConstantSerifed = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Low trimmed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_LOW_TRIMMED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_LOW_TRIMMED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_LOW_TRIMMED</unmanaged-short>	
        LowTrimmed = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Low pointed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_LOW_POINTED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_LOW_POINTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_LOW_POINTED</unmanaged-short>	
        LowPointed = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Low serifed midline.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_MIDLINE_LOW_SERIFED']/*"/>	
        /// <msdn-id>hh997732</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_MIDLINE_LOW_SERIFED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_MIDLINE_LOW_SERIFED</unmanaged-short>	
        LowSerifed = unchecked((int)13),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseProportion"/></strong> enumeration contains values that specify the proportion of the glyph shape by considering additional detail to standard characters.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION']/*"/>	
    /// <msdn-id>hh995029</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_PROPORTION</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_PROPORTION</unmanaged-short>	
    public enum PanoseProportion : int {	
        
        /// <summary>	
        /// <dd> <p>Any proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_ANY']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_NO_FIT']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Old style proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_OLD_STYLE']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_OLD_STYLE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_OLD_STYLE</unmanaged-short>	
        OldStyle = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Modern proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_MODERN']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_MODERN</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_MODERN</unmanaged-short>	
        Modern = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Extra width proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_EVEN_WIDTH']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_EVEN_WIDTH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_EVEN_WIDTH</unmanaged-short>	
        EvenWidth = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Expanded proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_EXPANDED']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_EXPANDED</unmanaged-short>	
        Expanded = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Condensed proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_CONDENSED']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_CONDENSED</unmanaged-short>	
        Condensed = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Very expanded proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_VERY_EXPANDED']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_VERY_EXPANDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_VERY_EXPANDED</unmanaged-short>	
        VeryExpanded = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Very condensed proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_VERY_CONDENSED']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_VERY_CONDENSED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_VERY_CONDENSED</unmanaged-short>	
        VeryCondensed = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Monospaced proportion for the text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_PROPORTION_MONOSPACED']/*"/>	
        /// <msdn-id>hh995029</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_PROPORTION_MONOSPACED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_PROPORTION_MONOSPACED</unmanaged-short>	
        Monospaced = unchecked((int)9),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseScriptForm"/></strong> enumeration contains values that specify the general look of the character face, with consideration of its  slope and tails.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM']/*"/>	
    /// <msdn-id>hh997733</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM</unmanaged-short>	
    public enum PanoseScriptForm : int {	
        
        /// <summary>	
        /// <dd> <p>Any script form.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_ANY']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for script form.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_NO_FIT']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Script form is upright with no wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_NO_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_NO_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_NO_WRAPPING</unmanaged-short>	
        UprightNoWrapping = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Script form is upright with some wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_SOME_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_SOME_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_SOME_WRAPPING</unmanaged-short>	
        UprightSomeWrapping = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Script form is upright with more wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_MORE_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_MORE_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_MORE_WRAPPING</unmanaged-short>	
        UprightMoreWrapping = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Script form is upright with extreme wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_EXTREME_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_EXTREME_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_UPRIGHT_EXTREME_WRAPPING</unmanaged-short>	
        UprightExtremeWrapping = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Script form is oblique with no wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_NO_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_NO_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_NO_WRAPPING</unmanaged-short>	
        ObliqueNoWrapping = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Script form is oblique with some wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_SOME_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_SOME_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_SOME_WRAPPING</unmanaged-short>	
        ObliqueSomeWrapping = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Script form is oblique with more wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_MORE_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_MORE_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_MORE_WRAPPING</unmanaged-short>	
        ObliqueMoreWrapping = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Script form is oblique with extreme wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_EXTREME_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_EXTREME_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_OBLIQUE_EXTREME_WRAPPING</unmanaged-short>	
        ObliqueExtremeWrapping = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Script form is exaggerated with no wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_NO_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_NO_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_NO_WRAPPING</unmanaged-short>	
        ExaggeratedNoWrapping = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Script form is exaggerated with some wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_SOME_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_SOME_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_SOME_WRAPPING</unmanaged-short>	
        ExaggeratedSomeWrapping = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Script form is exaggerated with more wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_MORE_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_MORE_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_MORE_WRAPPING</unmanaged-short>	
        ExaggeratedMoreWrapping = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Script form is exaggerated with extreme wrapping.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_EXTREME_WRAPPING']/*"/>	
        /// <msdn-id>hh997733</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_EXTREME_WRAPPING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_FORM_EXAGGERATED_EXTREME_WRAPPING</unmanaged-short>	
        ExaggeratedExtremeWrapping = unchecked((int)13),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseScriptTopology"/></strong> enumeration contains values that specify the topology of letterforms.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY']/*"/>	
    /// <msdn-id>hh997734</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY</unmanaged-short>	
    public enum PanoseScriptTopology : int {	
        
        /// <summary>	
        /// <dd> <p>Any script topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_ANY']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for script topology.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_NO_FIT']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Script topology is roman disconnected.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_DISCONNECTED']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_DISCONNECTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_DISCONNECTED</unmanaged-short>	
        RomanDisconnected = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Script topology is roman trailing.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_TRAILING']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_TRAILING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_TRAILING</unmanaged-short>	
        RomanTrailing = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Script topology is roman connected.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_CONNECTED']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_CONNECTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_ROMAN_CONNECTED</unmanaged-short>	
        RomanConnected = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Script topology is cursive disconnected.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_DISCONNECTED']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_DISCONNECTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_DISCONNECTED</unmanaged-short>	
        CursiveDisconnected = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Script topology is cursive trailing.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_TRAILING']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_TRAILING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_TRAILING</unmanaged-short>	
        CursiveTrailing = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Script topology is cursive connected.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_CONNECTED']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_CONNECTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_CURSIVE_CONNECTED</unmanaged-short>	
        CursiveConnected = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Script topology is black-letter disconnected.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_DISCONNECTED']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_DISCONNECTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_DISCONNECTED</unmanaged-short>	
        BlackletterDisconnected = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Script topology is black-letter trailing.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_TRAILING']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_TRAILING</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_TRAILING</unmanaged-short>	
        BlackletterTrailing = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Script topology is black-letter connected.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_CONNECTED']/*"/>	
        /// <msdn-id>hh997734</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_CONNECTED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SCRIPT_TOPOLOGY_BLACKLETTER_CONNECTED</unmanaged-short>	
        BlackletterConnected = unchecked((int)10),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseSerifStyle"/></strong> enumeration contains values that specify the appearance of the serif text.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE']/*"/>	
    /// <msdn-id>hh995030</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE</unmanaged-short>	
    public enum PanoseSerifStyle : int {	
        
        /// <summary>	
        /// <dd> <p>Any appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_ANY']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_NO_FIT']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Cove appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_COVE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_COVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_COVE</unmanaged-short>	
        Cove = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Obtuse cove appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_OBTUSE_COVE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_OBTUSE_COVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_OBTUSE_COVE</unmanaged-short>	
        ObtuseCove = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Square cove appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_SQUARE_COVE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_SQUARE_COVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_SQUARE_COVE</unmanaged-short>	
        SquareCove = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Obtuse square cove appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SQUARE_COVE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SQUARE_COVE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SQUARE_COVE</unmanaged-short>	
        ObtuseSquareCove = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Square appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_SQUARE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_SQUARE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_SQUARE</unmanaged-short>	
        Square = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Thin appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_THIN']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_THIN</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_THIN</unmanaged-short>	
        Thin = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Oval appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_OVAL']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_OVAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_OVAL</unmanaged-short>	
        Oval = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Exaggerated appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_EXAGGERATED']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_EXAGGERATED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_EXAGGERATED</unmanaged-short>	
        Exaggerated = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Triangle appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_TRIANGLE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_TRIANGLE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_TRIANGLE</unmanaged-short>	
        Triangle = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Normal sans appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_NORMAL_SANS']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_NORMAL_SANS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_NORMAL_SANS</unmanaged-short>	
        NormalSans = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Obtuse sans appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SANS']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SANS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_OBTUSE_SANS</unmanaged-short>	
        ObtuseSans = unchecked((int)12),			
        
        /// <summary>	
        /// <dd> <p>Perpendicular sans appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_PERPENDICULAR_SANS']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_PERPENDICULAR_SANS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_PERPENDICULAR_SANS</unmanaged-short>	
        PerpendicularSans = unchecked((int)13),			
        
        /// <summary>	
        /// <dd> <p>Flared appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_FLARED']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_FLARED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_FLARED</unmanaged-short>	
        Flared = unchecked((int)14),			
        
        /// <summary>	
        /// <dd> <p>Rounded appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_ROUNDED']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_ROUNDED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_ROUNDED</unmanaged-short>	
        Rounded = unchecked((int)15),			
        
        /// <summary>	
        /// <dd> <p>Script appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_SCRIPT']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_SCRIPT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_SCRIPT</unmanaged-short>	
        Script = unchecked((int)16),			
        
        /// <summary>	
        /// <dd> <p>Perpendicular sans appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_PERP_SANS']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_PERP_SANS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_PERP_SANS</unmanaged-short>	
        PerpSans = unchecked((int)13),			
        
        /// <summary>	
        /// <dd> <p>Oval appearance of the serif text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SERIF_STYLE_BONE']/*"/>	
        /// <msdn-id>hh995030</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SERIF_STYLE_BONE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SERIF_STYLE_BONE</unmanaged-short>	
        Bone = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseSpacing"/></strong> enumeration contains values that specify character spacing (monospace versus proportional).</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SPACING']/*"/>	
    /// <msdn-id>hh997735</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_SPACING</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_SPACING</unmanaged-short>	
    public enum PanoseSpacing : int {	
        
        /// <summary>	
        /// <dd> <p>Any spacing.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SPACING_ANY']/*"/>	
        /// <msdn-id>hh997735</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SPACING_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SPACING_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for spacing.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SPACING_NO_FIT']/*"/>	
        /// <msdn-id>hh997735</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SPACING_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SPACING_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Spacing is proportional.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SPACING_PROPORTIONAL_SPACED']/*"/>	
        /// <msdn-id>hh997735</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SPACING_PROPORTIONAL_SPACED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SPACING_PROPORTIONAL_SPACED</unmanaged-short>	
        ProportionalSpaced = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Spacing is monospace.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SPACING_MONOSPACED']/*"/>	
        /// <msdn-id>hh997735</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SPACING_MONOSPACED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SPACING_MONOSPACED</unmanaged-short>	
        Monospaced = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseStrokeVariation"/></strong> enumeration contains values that specify the relationship between thin and thick stems of text characters.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION']/*"/>	
    /// <msdn-id>hh997736</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION</unmanaged-short>	
    public enum PanoseStrokeVariation : int {	
        
        /// <summary>	
        /// <dd> <p>Any stroke variation for text characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_ANY']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit stroke variation for text characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_NO_FIT']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>No stroke variation for text characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_NO_VARIATION']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_NO_VARIATION</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_NO_VARIATION</unmanaged-short>	
        NoVariation = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is gradual diagonal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_DIAGONAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_DIAGONAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_DIAGONAL</unmanaged-short>	
        GradualDiagonal = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is gradual transitional.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_TRANSITIONAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_TRANSITIONAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_TRANSITIONAL</unmanaged-short>	
        GradualTransitional = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is gradual vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_VERTICAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_VERTICAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_VERTICAL</unmanaged-short>	
        GradualVertical = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is gradual horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_HORIZONTAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_GRADUAL_HORIZONTAL</unmanaged-short>	
        GradualHorizontal = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is rapid vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_RAPID_VERTICAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_RAPID_VERTICAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_RAPID_VERTICAL</unmanaged-short>	
        RapidVertical = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is rapid horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_RAPID_HORIZONTAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_RAPID_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_RAPID_HORIZONTAL</unmanaged-short>	
        RapidHorizontal = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is instant vertical.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_INSTANT_VERTICAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_INSTANT_VERTICAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_INSTANT_VERTICAL</unmanaged-short>	
        InstantVertical = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>The stroke variation for text characters is instant horizontal.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_STROKE_VARIATION_INSTANT_HORIZONTAL']/*"/>	
        /// <msdn-id>hh997736</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_STROKE_VARIATION_INSTANT_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_STROKE_VARIATION_INSTANT_HORIZONTAL</unmanaged-short>	
        InstantHorizontal = unchecked((int)10),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseSymbolAspectRatio"/></strong> enumeration contains values that specify the aspect ratio of symbolic characters.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO']/*"/>	
    /// <msdn-id>jj126263</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO</unmanaged-short>	
    public enum PanoseSymbolAspectRatio : int {	
        
        /// <summary>	
        /// <dd> <p>Any aspect ratio of symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_ANY']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for aspect ratio of symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_FIT']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>No width aspect ratio of symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_WIDTH']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_WIDTH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NO_WIDTH</unmanaged-short>	
        NoWidth = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Exceptionally wide symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_EXCEPTIONALLY_WIDE']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_EXCEPTIONALLY_WIDE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_EXCEPTIONALLY_WIDE</unmanaged-short>	
        ExceptionallyWide = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Super wide symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_SUPER_WIDE']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_SUPER_WIDE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_SUPER_WIDE</unmanaged-short>	
        SuperWide = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Very wide symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_WIDE']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_WIDE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_WIDE</unmanaged-short>	
        VeryWide = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Wide symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_WIDE']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_WIDE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_WIDE</unmanaged-short>	
        Wide = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Normal aspect ratio of symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NORMAL']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NORMAL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NORMAL</unmanaged-short>	
        Normal = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Narrow symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NARROW']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NARROW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_NARROW</unmanaged-short>	
        Narrow = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Very narrow symbolic characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_NARROW']/*"/>	
        /// <msdn-id>jj126263</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_NARROW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_ASPECT_RATIO_VERY_NARROW</unmanaged-short>	
        VeryNarrow = unchecked((int)9),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseSymbolKind"/></strong> enumeration contains values that specify the kind of symbol set.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND']/*"/>	
    /// <msdn-id>hh997737</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND</unmanaged-short>	
    public enum PanoseSymbolKind : int {	
        
        /// <summary>	
        /// <dd> <p>Any kind of symbol set.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_ANY']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for the kind of symbol set.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_NO_FIT']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is montages.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_MONTAGES']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_MONTAGES</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_MONTAGES</unmanaged-short>	
        Montages = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is pictures.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_PICTURES']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_PICTURES</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_PICTURES</unmanaged-short>	
        Pictures = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is shapes.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_SHAPES']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_SHAPES</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_SHAPES</unmanaged-short>	
        Shapes = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is scientific symbols.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_SCIENTIFIC']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_SCIENTIFIC</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_SCIENTIFIC</unmanaged-short>	
        Scientific = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is music symbols.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_MUSIC']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_MUSIC</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_MUSIC</unmanaged-short>	
        Music = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is expert symbols.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_EXPERT']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_EXPERT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_EXPERT</unmanaged-short>	
        Expert = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is patterns.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_PATTERNS']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_PATTERNS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_PATTERNS</unmanaged-short>	
        Patterns = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is boarders.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_BOARDERS']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_BOARDERS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_BOARDERS</unmanaged-short>	
        Boarders = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is icons.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_ICONS']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_ICONS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_ICONS</unmanaged-short>	
        Icons = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is logos.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_LOGOS']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_LOGOS</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_LOGOS</unmanaged-short>	
        Logos = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>The kind of symbol set is industry specific.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_SYMBOL_KIND_INDUSTRY_SPECIFIC']/*"/>	
        /// <msdn-id>hh997737</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_SYMBOL_KIND_INDUSTRY_SPECIFIC</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_SYMBOL_KIND_INDUSTRY_SPECIFIC</unmanaged-short>	
        IndustrySpecific = unchecked((int)12),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseToolKind"/></strong> enumeration contains values that specify the kind of tool that is used to create character forms.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND']/*"/>	
    /// <msdn-id>hh997738</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_TOOL_KIND</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND</unmanaged-short>	
    public enum PanoseToolKind : int {	
        
        /// <summary>	
        /// <dd> <p>Any kind of tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_ANY']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for the kind of tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_NO_FIT']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Flat NIB tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_FLAT_NIB']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_FLAT_NIB</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_FLAT_NIB</unmanaged-short>	
        FlatNib = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Pressure point tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_PRESSURE_POINT']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_PRESSURE_POINT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_PRESSURE_POINT</unmanaged-short>	
        PressurePoint = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Engraved tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_ENGRAVED']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_ENGRAVED</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_ENGRAVED</unmanaged-short>	
        Engraved = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Ball tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_BALL']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_BALL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_BALL</unmanaged-short>	
        Ball = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Brush tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_BRUSH']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_BRUSH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_BRUSH</unmanaged-short>	
        Brush = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Rough tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_ROUGH']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_ROUGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_ROUGH</unmanaged-short>	
        Rough = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Felt-pen-brush-tip tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_FELT_PEN_BRUSH_TIP']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_FELT_PEN_BRUSH_TIP</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_FELT_PEN_BRUSH_TIP</unmanaged-short>	
        FeltPenBrushTip = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Wild-brush tool.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_TOOL_KIND_WILD_BRUSH']/*"/>	
        /// <msdn-id>hh997738</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_TOOL_KIND_WILD_BRUSH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_TOOL_KIND_WILD_BRUSH</unmanaged-short>	
        WildBrush = unchecked((int)9),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseWeight"/></strong> enumeration contains values that specify the weight of characters.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseWeight"/></strong> values roughly correspond to the <strong><see cref="SharpDX.DirectWrite.FontWeight"/></strong> values by using (panose_weight - 2) * 100 = font_weight.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT']/*"/>	
    /// <msdn-id>hh995031</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_WEIGHT</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_WEIGHT</unmanaged-short>	
    public enum PanoseWeight : int {	
        
        /// <summary>	
        /// <dd> <p>Any weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_ANY']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_NO_FIT']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Very light weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_VERY_LIGHT']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_VERY_LIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_VERY_LIGHT</unmanaged-short>	
        VeryLight = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Light weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_LIGHT']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_LIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_LIGHT</unmanaged-short>	
        Light = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Thin weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_THIN']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_THIN</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_THIN</unmanaged-short>	
        Thin = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Book weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_BOOK']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_BOOK</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_BOOK</unmanaged-short>	
        Book = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Medium weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_MEDIUM']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_MEDIUM</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_MEDIUM</unmanaged-short>	
        Medium = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Demi weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_DEMI']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_DEMI</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_DEMI</unmanaged-short>	
        Demi = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Bold weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_BOLD']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_BOLD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_BOLD</unmanaged-short>	
        Bold = unchecked((int)8),			
        
        /// <summary>	
        /// <dd> <p>Heavy weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_HEAVY']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_HEAVY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_HEAVY</unmanaged-short>	
        Heavy = unchecked((int)9),			
        
        /// <summary>	
        /// <dd> <p>Black weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_BLACK']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_BLACK</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_BLACK</unmanaged-short>	
        Black = unchecked((int)10),			
        
        /// <summary>	
        /// <dd> <p>Extra black weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_EXTRA_BLACK']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_EXTRA_BLACK</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_EXTRA_BLACK</unmanaged-short>	
        ExtraBlack = unchecked((int)11),			
        
        /// <summary>	
        /// <dd> <p>Extra black weight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_WEIGHT_NORD']/*"/>	
        /// <msdn-id>hh995031</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_WEIGHT_NORD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_WEIGHT_NORD</unmanaged-short>	
        Nord = unchecked((int)11),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseXascent"/></strong> enumeration contains values that specify the relative size of the lowercase letters.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT']/*"/>	
    /// <msdn-id>hh997739</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_XASCENT</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_XASCENT</unmanaged-short>	
    public enum PanoseXascent : int {	
        
        /// <summary>	
        /// <dd> <p>Any xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_ANY']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit for xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_NO_FIT']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Very low xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_VERY_LOW']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_VERY_LOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_VERY_LOW</unmanaged-short>	
        VeryLow = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Low xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_LOW']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_LOW</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_LOW</unmanaged-short>	
        Low = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Medium xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_MEDIUM']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_MEDIUM</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_MEDIUM</unmanaged-short>	
        Medium = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>High xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_HIGH']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_HIGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_HIGH</unmanaged-short>	
        High = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Very high xascent.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XASCENT_VERY_HIGH']/*"/>	
        /// <msdn-id>hh997739</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XASCENT_VERY_HIGH</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XASCENT_VERY_HIGH</unmanaged-short>	
        VeryHigh = unchecked((int)6),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.PanoseXheight"/></strong> enumeration contains values that specify info about the relative size of lowercase letters and the treatment of diacritic marks (xheight).</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT']/*"/>	
    /// <msdn-id>hh997740</msdn-id>	
    /// <unmanaged>DWRITE_PANOSE_XHEIGHT</unmanaged>	
    /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT</unmanaged-short>	
    public enum PanoseXheight : int {	
        
        /// <summary>	
        /// <dd> <p>Any xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_ANY']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_ANY</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_ANY</unmanaged-short>	
        Any = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>No fit xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_NO_FIT']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_NO_FIT</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_NO_FIT</unmanaged-short>	
        NoFit = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Constant small xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_CONSTANT_SMALL']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_CONSTANT_SMALL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_CONSTANT_SMALL</unmanaged-short>	
        ConstantSmall = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Constant standard xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_CONSTANT_STANDARD']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_CONSTANT_STANDARD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_CONSTANT_STANDARD</unmanaged-short>	
        ConstantStandard = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Constant large xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_CONSTANT_LARGE']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_CONSTANT_LARGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_CONSTANT_LARGE</unmanaged-short>	
        ConstantLarge = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Ducking small xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_DUCKING_SMALL']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_DUCKING_SMALL</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_DUCKING_SMALL</unmanaged-short>	
        DuckingSmall = unchecked((int)5),			
        
        /// <summary>	
        /// <dd> <p>Ducking standard xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_DUCKING_STANDARD']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_DUCKING_STANDARD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_DUCKING_STANDARD</unmanaged-short>	
        DuckingStandard = unchecked((int)6),			
        
        /// <summary>	
        /// <dd> <p>Ducking large xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_DUCKING_LARGE']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_DUCKING_LARGE</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_DUCKING_LARGE</unmanaged-short>	
        DuckingLarge = unchecked((int)7),			
        
        /// <summary>	
        /// <dd> <p>Constant standard xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_CONSTANT_STD']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_CONSTANT_STD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_CONSTANT_STD</unmanaged-short>	
        ConstantStd = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>Ducking standard xheight.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PANOSE_XHEIGHT_DUCKING_STD']/*"/>	
        /// <msdn-id>hh997740</msdn-id>	
        /// <unmanaged>DWRITE_PANOSE_XHEIGHT_DUCKING_STD</unmanaged>	
        /// <unmanaged-short>DWRITE_PANOSE_XHEIGHT_DUCKING_STD</unmanaged-short>	
        DuckingStd = unchecked((int)6),			
    }
    
    /// <summary>	
    /// <p> Specifies the alignment of paragraph text along the flow direction axis, relative to the top and bottom of the flow's layout box. </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT']/*"/>	
    /// <msdn-id>dd368112</msdn-id>	
    /// <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT</unmanaged>	
    /// <unmanaged-short>DWRITE_PARAGRAPH_ALIGNMENT</unmanaged-short>	
    public enum ParagraphAlignment : int {	
        
        /// <summary>	
        /// <dd> <p>The top of the text flow is aligned to the top edge of the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT_NEAR']/*"/>	
        /// <msdn-id>dd368112</msdn-id>	
        /// <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT_NEAR</unmanaged>	
        /// <unmanaged-short>DWRITE_PARAGRAPH_ALIGNMENT_NEAR</unmanaged-short>	
        Near = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The bottom of the text flow is aligned to the bottom edge of the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT_FAR']/*"/>	
        /// <msdn-id>dd368112</msdn-id>	
        /// <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT_FAR</unmanaged>	
        /// <unmanaged-short>DWRITE_PARAGRAPH_ALIGNMENT_FAR</unmanaged-short>	
        Far = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The center of the flow is aligned to the center of the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PARAGRAPH_ALIGNMENT_CENTER']/*"/>	
        /// <msdn-id>dd368112</msdn-id>	
        /// <unmanaged>DWRITE_PARAGRAPH_ALIGNMENT_CENTER</unmanaged>	
        /// <unmanaged-short>DWRITE_PARAGRAPH_ALIGNMENT_CENTER</unmanaged-short>	
        Center = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p> Represents the internal structure of a device pixel (that is, the physical arrangement of red, green, and blue color components) that is assumed for purposes of rendering text.	
    /// </p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY']/*"/>	
    /// <msdn-id>dd368114</msdn-id>	
    /// <unmanaged>DWRITE_PIXEL_GEOMETRY</unmanaged>	
    /// <unmanaged-short>DWRITE_PIXEL_GEOMETRY</unmanaged-short>	
    public enum PixelGeometry : int {	
        
        /// <summary>	
        /// <dd> <p>The red, green, and blue color components of each pixel are assumed to occupy the same point.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY_FLAT']/*"/>	
        /// <msdn-id>dd368114</msdn-id>	
        /// <unmanaged>DWRITE_PIXEL_GEOMETRY_FLAT</unmanaged>	
        /// <unmanaged-short>DWRITE_PIXEL_GEOMETRY_FLAT</unmanaged-short>	
        Flat = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Each pixel is composed of three vertical stripes, with red on the left, green in the center, and  blue on the right. This is the most common pixel geometry for LCD monitors.	   </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY_RGB']/*"/>	
        /// <msdn-id>dd368114</msdn-id>	
        /// <unmanaged>DWRITE_PIXEL_GEOMETRY_RGB</unmanaged>	
        /// <unmanaged-short>DWRITE_PIXEL_GEOMETRY_RGB</unmanaged-short>	
        Rgb = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Each pixel is composed of three vertical stripes, with blue on the left, green in the center, and  red on the right.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_PIXEL_GEOMETRY_BGR']/*"/>	
        /// <msdn-id>dd368114</msdn-id>	
        /// <unmanaged>DWRITE_PIXEL_GEOMETRY_BGR</unmanaged>	
        /// <unmanaged-short>DWRITE_PIXEL_GEOMETRY_BGR</unmanaged-short>	
        Bgr = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p> Specifies the direction in which reading progresses. </p><p><strong>Note</strong>??<strong><see cref="SharpDX.DirectWrite.ReadingDirection.TopToBottom"/></strong> and <strong><see cref="SharpDX.DirectWrite.ReadingDirection.BottomToTop"/></strong> are available in Windows?8.1 and later, only.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_READING_DIRECTION']/*"/>	
    /// <msdn-id>dd368116</msdn-id>	
    /// <unmanaged>DWRITE_READING_DIRECTION</unmanaged>	
    /// <unmanaged-short>DWRITE_READING_DIRECTION</unmanaged-short>	
    public enum ReadingDirection : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates that reading progresses from left to right.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_READING_DIRECTION_LEFT_TO_RIGHT']/*"/>	
        /// <msdn-id>dd368116</msdn-id>	
        /// <unmanaged>DWRITE_READING_DIRECTION_LEFT_TO_RIGHT</unmanaged>	
        /// <unmanaged-short>DWRITE_READING_DIRECTION_LEFT_TO_RIGHT</unmanaged-short>	
        LeftToRight = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates that reading progresses from right to left.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_READING_DIRECTION_RIGHT_TO_LEFT']/*"/>	
        /// <msdn-id>dd368116</msdn-id>	
        /// <unmanaged>DWRITE_READING_DIRECTION_RIGHT_TO_LEFT</unmanaged>	
        /// <unmanaged-short>DWRITE_READING_DIRECTION_RIGHT_TO_LEFT</unmanaged-short>	
        RightToLeft = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p>Indicates that reading progresses from top to bottom.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_READING_DIRECTION_TOP_TO_BOTTOM']/*"/>	
        /// <msdn-id>dd368116</msdn-id>	
        /// <unmanaged>DWRITE_READING_DIRECTION_TOP_TO_BOTTOM</unmanaged>	
        /// <unmanaged-short>DWRITE_READING_DIRECTION_TOP_TO_BOTTOM</unmanaged-short>	
        TopToBottom = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p> Indicates that reading progresses from bottom to top.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_READING_DIRECTION_BOTTOM_TO_TOP']/*"/>	
        /// <msdn-id>dd368116</msdn-id>	
        /// <unmanaged>DWRITE_READING_DIRECTION_BOTTOM_TO_TOP</unmanaged>	
        /// <unmanaged-short>DWRITE_READING_DIRECTION_BOTTOM_TO_TOP</unmanaged-short>	
        BottomToTop = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p> Represents a method of rendering glyphs. </p><p><strong>Note</strong>??This topic is about <strong><see cref="SharpDX.DirectWrite.RenderingMode"/></strong> in Windows?8 and later.  For info on the previous version see <strong>this topic</strong>.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE']/*"/>	
    /// <msdn-id>dd368118</msdn-id>	
    /// <unmanaged>DWRITE_RENDERING_MODE</unmanaged>	
    /// <unmanaged-short>DWRITE_RENDERING_MODE</unmanaged-short>	
    public enum RenderingMode : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_DEFAULT']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_DEFAULT</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_ALIASED']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_ALIASED</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_ALIASED</unmanaged-short>	
        Aliased = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_GDI_CLASSIC']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_GDI_CLASSIC</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_GDI_CLASSIC</unmanaged-short>	
        GdiClassic = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_GDI_NATURAL']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_GDI_NATURAL</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_GDI_NATURAL</unmanaged-short>	
        GdiNatural = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_NATURAL']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_NATURAL</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_NATURAL</unmanaged-short>	
        Natural = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC</unmanaged-short>	
        NaturalSymmetric = unchecked((int)5),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_OUTLINE']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_OUTLINE</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_OUTLINE</unmanaged-short>	
        Outline = unchecked((int)6),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_CLASSIC</unmanaged-short>	
        CleartypeGdiClassic = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_CLEARTYPE_GDI_NATURAL</unmanaged-short>	
        CleartypeGdiNatural = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL</unmanaged-short>	
        CleartypeNatural = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC']/*"/>	
        /// <msdn-id>dd368118</msdn-id>	
        /// <unmanaged>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC</unmanaged>	
        /// <unmanaged-short>DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL_SYMMETRIC</unmanaged-short>	
        CleartypeNaturalSymmetric = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>Indicates additional shaping requirements for text.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_SCRIPT_SHAPES']/*"/>	
    /// <msdn-id>dd368121</msdn-id>	
    /// <unmanaged>DWRITE_SCRIPT_SHAPES</unmanaged>	
    /// <unmanaged-short>DWRITE_SCRIPT_SHAPES</unmanaged-short>	
    public enum ScriptShapes : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates that there is no additional shaping requirements for text. Text is shaped with the writing system default behavior.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_SCRIPT_SHAPES_DEFAULT']/*"/>	
        /// <msdn-id>dd368121</msdn-id>	
        /// <unmanaged>DWRITE_SCRIPT_SHAPES_DEFAULT</unmanaged>	
        /// <unmanaged-short>DWRITE_SCRIPT_SHAPES_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates that text should leave no visible control or format control characters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_SCRIPT_SHAPES_NO_VISUAL']/*"/>	
        /// <msdn-id>dd368121</msdn-id>	
        /// <unmanaged>DWRITE_SCRIPT_SHAPES_NO_VISUAL</unmanaged>	
        /// <unmanaged-short>DWRITE_SCRIPT_SHAPES_NO_VISUAL</unmanaged-short>	
        NoVisual = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies the alignment of paragraph text along the reading direction axis, relative to the leading and trailing edge of the layout box.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT']/*"/>	
    /// <msdn-id>dd368131</msdn-id>	
    /// <unmanaged>DWRITE_TEXT_ALIGNMENT</unmanaged>	
    /// <unmanaged-short>DWRITE_TEXT_ALIGNMENT</unmanaged-short>	
    public enum TextAlignment : int {	
        
        /// <summary>	
        /// <dd> <p>The leading edge of the paragraph text is aligned to the leading edge of the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_LEADING']/*"/>	
        /// <msdn-id>dd368131</msdn-id>	
        /// <unmanaged>DWRITE_TEXT_ALIGNMENT_LEADING</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXT_ALIGNMENT_LEADING</unmanaged-short>	
        Leading = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The trailing edge of the paragraph text is aligned to the  trailing edge of the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_TRAILING']/*"/>	
        /// <msdn-id>dd368131</msdn-id>	
        /// <unmanaged>DWRITE_TEXT_ALIGNMENT_TRAILING</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXT_ALIGNMENT_TRAILING</unmanaged-short>	
        Trailing = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The center of the paragraph text is aligned to the center of the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_CENTER']/*"/>	
        /// <msdn-id>dd368131</msdn-id>	
        /// <unmanaged>DWRITE_TEXT_ALIGNMENT_CENTER</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXT_ALIGNMENT_CENTER</unmanaged-short>	
        Center = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Align text to the leading side, and also justify text to fill the lines.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ALIGNMENT_JUSTIFIED']/*"/>	
        /// <msdn-id>dd368131</msdn-id>	
        /// <unmanaged>DWRITE_TEXT_ALIGNMENT_JUSTIFIED</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXT_ALIGNMENT_JUSTIFIED</unmanaged-short>	
        Justified = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.TextAntialiasMode"/></strong> enumeration contains values that specify the type of antialiasing to use for text when the rendering mode calls for antialiasing.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ANTIALIAS_MODE']/*"/>	
    /// <msdn-id>jj127237</msdn-id>	
    /// <unmanaged>DWRITE_TEXT_ANTIALIAS_MODE</unmanaged>	
    /// <unmanaged-short>DWRITE_TEXT_ANTIALIAS_MODE</unmanaged-short>	
    public enum TextAntialiasMode : int {	
        
        /// <summary>	
        /// <dd> <p>ClearType antialiasing computes coverage independently for the red, green, and blue color elements of each pixel. This allows for more detail than conventional antialiasing. However, because there is no one alpha value for each pixel, ClearType is not suitable for rendering text onto a transparent intermediate bitmap.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ANTIALIAS_MODE_CLEARTYPE']/*"/>	
        /// <msdn-id>jj127237</msdn-id>	
        /// <unmanaged>DWRITE_TEXT_ANTIALIAS_MODE_CLEARTYPE</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXT_ANTIALIAS_MODE_CLEARTYPE</unmanaged-short>	
        Cleartype = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Grayscale antialiasing computes one coverage value for each pixel. Because the alpha value of each pixel is well-defined, text can be rendered onto a transparent bitmap, which can then be composited with other content.</p> <p><strong>Note</strong>??Grayscale rendering with <strong><see cref="SharpDX.DirectWrite.BitmapRenderTarget1"/></strong> uses premultiplied alpha.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXT_ANTIALIAS_MODE_GRAYSCALE']/*"/>	
        /// <msdn-id>jj127237</msdn-id>	
        /// <unmanaged>DWRITE_TEXT_ANTIALIAS_MODE_GRAYSCALE</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXT_ANTIALIAS_MODE_GRAYSCALE</unmanaged-short>	
        Grayscale = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Identifies a type of alpha texture.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>An alpha texture is a bitmap of alpha values, each representing opacity of a pixel or subpixel.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXTURE_TYPE']/*"/>	
    /// <msdn-id>dd368129</msdn-id>	
    /// <unmanaged>DWRITE_TEXTURE_TYPE</unmanaged>	
    /// <unmanaged-short>DWRITE_TEXTURE_TYPE</unmanaged-short>	
    public enum TextureType : int {	
        
        /// <summary>	
        /// <dd> <p>Specifies an alpha texture for aliased text rendering (that is,  each pixel is either fully opaque or fully transparent), with one byte per pixel.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXTURE_ALIASED_1x1']/*"/>	
        /// <msdn-id>dd368129</msdn-id>	
        /// <unmanaged>DWRITE_TEXTURE_ALIASED_1x1</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXTURE_ALIASED_1x1</unmanaged-short>	
        Aliased1x1 = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Specifies an alpha texture for ClearType text rendering, with three bytes per pixel in the horizontal dimension and one byte per pixel in the vertical dimension.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TEXTURE_CLEARTYPE_3x1']/*"/>	
        /// <msdn-id>dd368129</msdn-id>	
        /// <unmanaged>DWRITE_TEXTURE_CLEARTYPE_3x1</unmanaged>	
        /// <unmanaged-short>DWRITE_TEXTURE_CLEARTYPE_3x1</unmanaged-short>	
        Cleartype3x1 = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Specifies  the text granularity used to trim text overflowing the layout box.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY']/*"/>	
    /// <msdn-id>dd368141</msdn-id>	
    /// <unmanaged>DWRITE_TRIMMING_GRANULARITY</unmanaged>	
    /// <unmanaged-short>DWRITE_TRIMMING_GRANULARITY</unmanaged-short>	
    public enum TrimmingGranularity : int {	
        
        /// <summary>	
        /// <dd> <p>No trimming occurs. Text flows beyond the layout width.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY_NONE']/*"/>	
        /// <msdn-id>dd368141</msdn-id>	
        /// <unmanaged>DWRITE_TRIMMING_GRANULARITY_NONE</unmanaged>	
        /// <unmanaged-short>DWRITE_TRIMMING_GRANULARITY_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Trimming occurs at a character cluster boundary.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY_CHARACTER']/*"/>	
        /// <msdn-id>dd368141</msdn-id>	
        /// <unmanaged>DWRITE_TRIMMING_GRANULARITY_CHARACTER</unmanaged>	
        /// <unmanaged-short>DWRITE_TRIMMING_GRANULARITY_CHARACTER</unmanaged-short>	
        Character = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Trimming occurs at a word boundary.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_TRIMMING_GRANULARITY_WORD']/*"/>	
        /// <msdn-id>dd368141</msdn-id>	
        /// <unmanaged>DWRITE_TRIMMING_GRANULARITY_WORD</unmanaged>	
        /// <unmanaged-short>DWRITE_TRIMMING_GRANULARITY_WORD</unmanaged-short>	
        Word = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>The <strong><see cref="SharpDX.DirectWrite.VerticalGlyphOrientation"/></strong> enumeration contains values that specify the desired kind of glyph orientation for the text.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>The client specifies a <strong><see cref="SharpDX.DirectWrite.VerticalGlyphOrientation"/></strong>-typed value to the analyzer as the desired orientation.</p><p><strong>Note</strong>??This is the client preference, and the constraints of the script determine the final presentation.</p>	
    /// </remarks>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_VERTICAL_GLYPH_ORIENTATION']/*"/>	
    /// <msdn-id>jj126266</msdn-id>	
    /// <unmanaged>DWRITE_VERTICAL_GLYPH_ORIENTATION</unmanaged>	
    /// <unmanaged-short>DWRITE_VERTICAL_GLYPH_ORIENTATION</unmanaged-short>	
    public enum VerticalGlyphOrientation : int {	
        
        /// <summary>	
        /// <dd> <p>The default glyph orientation. In vertical layout, naturally horizontal scripts (Latin, Thai, Arabic, Devanagari) rotate 90 degrees clockwise, while ideographic scripts (Chinese, Japanese, Korean) remain upright, 0 degrees.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_VERTICAL_GLYPH_ORIENTATION_DEFAULT']/*"/>	
        /// <msdn-id>jj126266</msdn-id>	
        /// <unmanaged>DWRITE_VERTICAL_GLYPH_ORIENTATION_DEFAULT</unmanaged>	
        /// <unmanaged-short>DWRITE_VERTICAL_GLYPH_ORIENTATION_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Stacked glyph orientation. Ideographic scripts and scripts that permit stacking (Latin, Hebrew) are stacked in vertical reading layout. Connected scripts (Arabic, Syriac, 'Phags-pa, Ogham), which would otherwise look broken if glyphs were kept at 0 degrees, remain connected and rotate.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_VERTICAL_GLYPH_ORIENTATION_STACKED']/*"/>	
        /// <msdn-id>jj126266</msdn-id>	
        /// <unmanaged>DWRITE_VERTICAL_GLYPH_ORIENTATION_STACKED</unmanaged>	
        /// <unmanaged-short>DWRITE_VERTICAL_GLYPH_ORIENTATION_STACKED</unmanaged-short>	
        Stacked = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p> Specifies the word wrapping to be used in a particular multiline paragraph.  </p><p><strong>Note</strong>??<strong><see cref="SharpDX.DirectWrite.WordWrapping.EmergencyBreak"/></strong>, <strong>DWRITE_WORD_WRAPPING_WHOLE _WORD</strong>, and <strong><see cref="SharpDX.DirectWrite.WordWrapping.Character"/></strong> are available in Windows?8.1 and later, only.</p>	
    /// </summary>	
    /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_WORD_WRAPPING']/*"/>	
    /// <msdn-id>dd368146</msdn-id>	
    /// <unmanaged>DWRITE_WORD_WRAPPING</unmanaged>	
    /// <unmanaged-short>DWRITE_WORD_WRAPPING</unmanaged-short>	
    public enum WordWrapping : int {	
        
        /// <summary>	
        /// <dd> <p>Indicates that words are broken across lines to avoid text overflowing the layout box.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_WORD_WRAPPING_WRAP']/*"/>	
        /// <msdn-id>dd368146</msdn-id>	
        /// <unmanaged>DWRITE_WORD_WRAPPING_WRAP</unmanaged>	
        /// <unmanaged-short>DWRITE_WORD_WRAPPING_WRAP</unmanaged-short>	
        Wrap = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Indicates that words are kept within the same line even when it overflows the layout box. This option is often used with scrolling to reveal overflow text.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_WORD_WRAPPING_NO_WRAP']/*"/>	
        /// <msdn-id>dd368146</msdn-id>	
        /// <unmanaged>DWRITE_WORD_WRAPPING_NO_WRAP</unmanaged>	
        /// <unmanaged-short>DWRITE_WORD_WRAPPING_NO_WRAP</unmanaged-short>	
        NoWrap = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p>Words are broken across lines to avoid text overflowing the layout box. Emergency wrapping occurs if the word is larger than the maximum width.	
        /// </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_WORD_WRAPPING_EMERGENCY_BREAK']/*"/>	
        /// <msdn-id>dd368146</msdn-id>	
        /// <unmanaged>DWRITE_WORD_WRAPPING_EMERGENCY_BREAK</unmanaged>	
        /// <unmanaged-short>DWRITE_WORD_WRAPPING_EMERGENCY_BREAK</unmanaged-short>	
        EmergencyBreak = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p> When emergency wrapping, only wrap whole words, never breaking words when the layout width is too small for even a single word.	
        /// </p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_WORD_WRAPPING_WHOLE_WORD']/*"/>	
        /// <msdn-id>dd368146</msdn-id>	
        /// <unmanaged>DWRITE_WORD_WRAPPING_WHOLE_WORD</unmanaged>	
        /// <unmanaged-short>DWRITE_WORD_WRAPPING_WHOLE_WORD</unmanaged-short>	
        WholeWord = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p><strong>Note</strong>??Windows?8.1 and later only.</p> <p>Wrap between any valid character clusters.</p> </dd>	
        /// </summary>	
        /// <include file='..\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DWRITE_WORD_WRAPPING_CHARACTER']/*"/>	
        /// <msdn-id>dd368146</msdn-id>	
        /// <unmanaged>DWRITE_WORD_WRAPPING_CHARACTER</unmanaged>	
        /// <unmanaged-short>DWRITE_WORD_WRAPPING_CHARACTER</unmanaged-short>	
        Character = unchecked((int)4),			
    }
}
