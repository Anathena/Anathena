// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.RawInput namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:07 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.RawInput {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>There are many user-input devices beside the traditional keyboard and mouse. For example, user input can come from a joystick, a touch screen, a microphone, or other devices that allow great flexibility in user input. These devices are collectively known as Human Interface Devices (HIDs). The raw input API provides a stable and robust way for applications to accept raw input from any HID, including the keyboard and mouse.</p><p>This section covers the following topics:</p><p> </p><ul> <li>Raw</li> <li>Registration</li> <li>Reading</li> </ul>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_DEVICE_FLAGS']/*"/>	
    /// <msdn-id>ms645543</msdn-id>	
    /// <unmanaged>RAW_DEVICE_FLAGS</unmanaged>	
    /// <unmanaged-short>RAW_DEVICE_FLAGS</unmanaged-short>	
    [Flags]
    public enum DeviceFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_REMOVE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_REMOVE</unmanaged>	
        /// <unmanaged-short>RIDEV_REMOVE</unmanaged-short>	
        Remove = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_EXCLUDE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_EXCLUDE</unmanaged>	
        /// <unmanaged-short>RIDEV_EXCLUDE</unmanaged-short>	
        Exclude = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_PAGEONLY']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_PAGEONLY</unmanaged>	
        /// <unmanaged-short>RIDEV_PAGEONLY</unmanaged-short>	
        PageOnly = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_NOLEGACY']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_NOLEGACY</unmanaged>	
        /// <unmanaged-short>RIDEV_NOLEGACY</unmanaged-short>	
        NoLegacy = unchecked((int)48),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_INPUTSINK']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_INPUTSINK</unmanaged>	
        /// <unmanaged-short>RIDEV_INPUTSINK</unmanaged-short>	
        InputSink = unchecked((int)256),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_CAPTUREMOUSE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_CAPTUREMOUSE</unmanaged>	
        /// <unmanaged-short>RIDEV_CAPTUREMOUSE</unmanaged-short>	
        CaptureMouse = unchecked((int)512),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_NOHOTKEYS']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_NOHOTKEYS</unmanaged>	
        /// <unmanaged-short>RIDEV_NOHOTKEYS</unmanaged-short>	
        NoHotKeys = unchecked((int)512),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_APPKEYS']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_APPKEYS</unmanaged>	
        /// <unmanaged-short>RIDEV_APPKEYS</unmanaged-short>	
        AppKeys = unchecked((int)1024),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_EXINPUTSINK']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_EXINPUTSINK</unmanaged>	
        /// <unmanaged-short>RIDEV_EXINPUTSINK</unmanaged-short>	
        ExclusiveInputSink = unchecked((int)4096),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDEV_DEVNOTIFY']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDEV_DEVNOTIFY</unmanaged>	
        /// <unmanaged-short>RIDEV_DEVNOTIFY</unmanaged-short>	
        DeviceNotify = unchecked((int)8192),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='']/*"/>	
        /// <unmanaged>None</unmanaged>	
        /// <unmanaged-short>None</unmanaged-short>	
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// <p>There are many user-input devices beside the traditional keyboard and mouse. For example, user input can come from a joystick, a touch screen, a microphone, or other devices that allow great flexibility in user input. These devices are collectively known as Human Interface Devices (HIDs). The raw input API provides a stable and robust way for applications to accept raw input from any HID, including the keyboard and mouse.</p><p>This section covers the following topics:</p><p> </p><ul> <li>Raw</li> <li>Registration</li> <li>Reading</li> </ul>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_DEVICE_TYPE']/*"/>	
    /// <msdn-id>ms645543</msdn-id>	
    /// <unmanaged>RAW_DEVICE_TYPE</unmanaged>	
    /// <unmanaged-short>RAW_DEVICE_TYPE</unmanaged-short>	
    public enum DeviceType : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIM_TYPEMOUSE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIM_TYPEMOUSE</unmanaged>	
        /// <unmanaged-short>RIM_TYPEMOUSE</unmanaged-short>	
        Mouse = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIM_TYPEKEYBOARD']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIM_TYPEKEYBOARD</unmanaged>	
        /// <unmanaged-short>RIM_TYPEKEYBOARD</unmanaged-short>	
        Keyboard = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIM_TYPEHID']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIM_TYPEHID</unmanaged>	
        /// <unmanaged-short>RIM_TYPEHID</unmanaged-short>	
        HumanInputDevice = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIM_TYPEMAX']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIM_TYPEMAX</unmanaged>	
        /// <unmanaged-short>RIM_TYPEMAX</unmanaged-short>	
        Maximum = unchecked((int)2),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_KEY_STATE']/*"/>	
    /// <unmanaged>RAW_KEY_STATE</unmanaged>	
    /// <unmanaged-short>RAW_KEY_STATE</unmanaged-short>	
    public enum KeyState : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_VKEYTOITEM']/*"/>	
        /// <unmanaged>WM_VKEYTOITEM</unmanaged>	
        /// <unmanaged-short>WM_VKEYTOITEM</unmanaged-short>	
        VirtualKeyToItem = unchecked((int)46),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_SETHOTKEY']/*"/>	
        /// <unmanaged>WM_SETHOTKEY</unmanaged>	
        /// <unmanaged-short>WM_SETHOTKEY</unmanaged-short>	
        SetHotKey = unchecked((int)50),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_GETHOTKEY']/*"/>	
        /// <unmanaged>WM_GETHOTKEY</unmanaged>	
        /// <unmanaged-short>WM_GETHOTKEY</unmanaged-short>	
        GetHotKey = unchecked((int)51),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_KEYFIRST']/*"/>	
        /// <unmanaged>WM_KEYFIRST</unmanaged>	
        /// <unmanaged-short>WM_KEYFIRST</unmanaged-short>	
        KeyFirst = unchecked((int)256),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_KEYDOWN']/*"/>	
        /// <unmanaged>WM_KEYDOWN</unmanaged>	
        /// <unmanaged-short>WM_KEYDOWN</unmanaged-short>	
        KeyDown = unchecked((int)256),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_KEYUP']/*"/>	
        /// <unmanaged>WM_KEYUP</unmanaged>	
        /// <unmanaged-short>WM_KEYUP</unmanaged-short>	
        KeyUp = unchecked((int)257),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_SYSKEYDOWN']/*"/>	
        /// <unmanaged>WM_SYSKEYDOWN</unmanaged>	
        /// <unmanaged-short>WM_SYSKEYDOWN</unmanaged-short>	
        SystemKeyDown = unchecked((int)260),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_SYSKEYUP']/*"/>	
        /// <unmanaged>WM_SYSKEYUP</unmanaged>	
        /// <unmanaged-short>WM_SYSKEYUP</unmanaged-short>	
        SystemKeyUp = unchecked((int)261),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_KEYLAST']/*"/>	
        /// <unmanaged>WM_KEYLAST</unmanaged>	
        /// <unmanaged-short>WM_KEYLAST</unmanaged-short>	
        KeyLast = unchecked((int)265),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_IME_KEYLAST']/*"/>	
        /// <unmanaged>WM_IME_KEYLAST</unmanaged>	
        /// <unmanaged-short>WM_IME_KEYLAST</unmanaged-short>	
        ImeKeyLast = unchecked((int)271),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_IME_KEYDOWN']/*"/>	
        /// <unmanaged>WM_IME_KEYDOWN</unmanaged>	
        /// <unmanaged-short>WM_IME_KEYDOWN</unmanaged-short>	
        ImeKeyDown = unchecked((int)656),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_IME_KEYUP']/*"/>	
        /// <unmanaged>WM_IME_KEYUP</unmanaged>	
        /// <unmanaged-short>WM_IME_KEYUP</unmanaged-short>	
        ImeKeyUp = unchecked((int)657),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='WM_HOTKEY']/*"/>	
        /// <unmanaged>WM_HOTKEY</unmanaged>	
        /// <unmanaged-short>WM_HOTKEY</unmanaged-short>	
        HotKey = unchecked((int)786),			
    }
    
    /// <summary>	
    /// <p>There are many user-input devices beside the traditional keyboard and mouse. For example, user input can come from a joystick, a touch screen, a microphone, or other devices that allow great flexibility in user input. These devices are collectively known as Human Interface Devices (HIDs). The raw input API provides a stable and robust way for applications to accept raw input from any HID, including the keyboard and mouse.</p><p>This section covers the following topics:</p><p> </p><ul> <li>Raw</li> <li>Registration</li> <li>Reading</li> </ul>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_MOUSE_BUTTON_FLAGS']/*"/>	
    /// <msdn-id>ms645543</msdn-id>	
    /// <unmanaged>RAW_MOUSE_BUTTON_FLAGS</unmanaged>	
    /// <unmanaged-short>RAW_MOUSE_BUTTON_FLAGS</unmanaged-short>	
    [Flags]
    public enum MouseButtonFlags : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_LEFT_BUTTON_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_LEFT_BUTTON_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_LEFT_BUTTON_DOWN</unmanaged-short>	
        LeftButtonDown = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_LEFT_BUTTON_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_LEFT_BUTTON_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_LEFT_BUTTON_UP</unmanaged-short>	
        LeftButtonUp = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_RIGHT_BUTTON_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_RIGHT_BUTTON_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_RIGHT_BUTTON_DOWN</unmanaged-short>	
        RightButtonDown = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_RIGHT_BUTTON_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_RIGHT_BUTTON_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_RIGHT_BUTTON_UP</unmanaged-short>	
        RightButtonUp = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_MIDDLE_BUTTON_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_MIDDLE_BUTTON_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_MIDDLE_BUTTON_DOWN</unmanaged-short>	
        MiddleButtonDown = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_MIDDLE_BUTTON_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_MIDDLE_BUTTON_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_MIDDLE_BUTTON_UP</unmanaged-short>	
        MiddleButtonUp = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_1_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_1_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_1_DOWN</unmanaged-short>	
        Button1Down = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_1_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_1_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_1_UP</unmanaged-short>	
        Button1Up = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_2_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_2_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_2_DOWN</unmanaged-short>	
        Button2Down = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_2_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_2_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_2_UP</unmanaged-short>	
        Button2Up = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_3_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_3_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_3_DOWN</unmanaged-short>	
        Button3Down = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_3_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_3_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_3_UP</unmanaged-short>	
        Button3Up = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_4_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_4_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_4_DOWN</unmanaged-short>	
        Button4Down = unchecked((int)64),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_4_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_4_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_4_UP</unmanaged-short>	
        Button4Up = unchecked((int)128),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_5_DOWN']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_5_DOWN</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_5_DOWN</unmanaged-short>	
        Button5Down = unchecked((int)256),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_BUTTON_5_UP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_BUTTON_5_UP</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_BUTTON_5_UP</unmanaged-short>	
        Button5Up = unchecked((int)512),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_WHEEL']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_WHEEL</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_WHEEL</unmanaged-short>	
        MouseWheel = unchecked((int)1024),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_MOUSE_HWHEEL']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RI_MOUSE_HWHEEL</unmanaged>	
        /// <unmanaged-short>RI_MOUSE_HWHEEL</unmanaged-short>	
        Hwheel = unchecked((int)2048),			
        
        /// <summary>	
        /// None.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='']/*"/>	
        /// <unmanaged>None</unmanaged>	
        /// <unmanaged-short>None</unmanaged-short>	
        None = unchecked((int)0),			
    }
    
    /// <summary>	
    /// <p>There are many user-input devices beside the traditional keyboard and mouse. For example, user input can come from a joystick, a touch screen, a microphone, or other devices that allow great flexibility in user input. These devices are collectively known as Human Interface Devices (HIDs). The raw input API provides a stable and robust way for applications to accept raw input from any HID, including the keyboard and mouse.</p><p>This section covers the following topics:</p><p> </p><ul> <li>Raw</li> <li>Registration</li> <li>Reading</li> </ul>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_MOUSE_MODE']/*"/>	
    /// <msdn-id>ms645543</msdn-id>	
    /// <unmanaged>RAW_MOUSE_MODE</unmanaged>	
    /// <unmanaged-short>RAW_MOUSE_MODE</unmanaged-short>	
    [Flags]
    public enum MouseMode : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='MOUSE_MOVE_RELATIVE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>MOUSE_MOVE_RELATIVE</unmanaged>	
        /// <unmanaged-short>MOUSE_MOVE_RELATIVE</unmanaged-short>	
        MoveRelative = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='MOUSE_MOVE_ABSOLUTE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>MOUSE_MOVE_ABSOLUTE</unmanaged>	
        /// <unmanaged-short>MOUSE_MOVE_ABSOLUTE</unmanaged-short>	
        MoveAbsolute = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='MOUSE_VIRTUAL_DESKTOP']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>MOUSE_VIRTUAL_DESKTOP</unmanaged>	
        /// <unmanaged-short>MOUSE_VIRTUAL_DESKTOP</unmanaged-short>	
        VirtualDesktop = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='MOUSE_ATTRIBUTES_CHANGED']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>MOUSE_ATTRIBUTES_CHANGED</unmanaged>	
        /// <unmanaged-short>MOUSE_ATTRIBUTES_CHANGED</unmanaged-short>	
        AttributesChanged = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='MOUSE_MOVE_NOCOALESCE']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>MOUSE_MOVE_NOCOALESCE</unmanaged>	
        /// <unmanaged-short>MOUSE_MOVE_NOCOALESCE</unmanaged-short>	
        MoveNoCoalesce = unchecked((int)8),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_INPUT_DATA_TYPE']/*"/>	
    /// <msdn-id>ff561902</msdn-id>	
    /// <unmanaged>RAW_INPUT_DATA_TYPE</unmanaged>	
    /// <unmanaged-short>RAW_INPUT_DATA_TYPE</unmanaged-short>	
    internal enum RawInputDataType : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RID_INPUT']/*"/>	
        /// <msdn-id>ff561902</msdn-id>	
        /// <unmanaged>RID_INPUT</unmanaged>	
        /// <unmanaged-short>RID_INPUT</unmanaged-short>	
        Input = unchecked((int)268435459),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RID_HEADER']/*"/>	
        /// <msdn-id>ff561902</msdn-id>	
        /// <unmanaged>RID_HEADER</unmanaged>	
        /// <unmanaged-short>RID_HEADER</unmanaged-short>	
        Header = unchecked((int)268435461),			
    }
    
    /// <summary>	
    /// <p>There are many user-input devices beside the traditional keyboard and mouse. For example, user input can come from a joystick, a touch screen, a microphone, or other devices that allow great flexibility in user input. These devices are collectively known as Human Interface Devices (HIDs). The raw input API provides a stable and robust way for applications to accept raw input from any HID, including the keyboard and mouse.</p><p>This section covers the following topics:</p><p> </p><ul> <li>Raw</li> <li>Registration</li> <li>Reading</li> </ul>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_INPUT_DEVICE_INFO_TYPE']/*"/>	
    /// <msdn-id>ms645543</msdn-id>	
    /// <unmanaged>RAW_INPUT_DEVICE_INFO_TYPE</unmanaged>	
    /// <unmanaged-short>RAW_INPUT_DEVICE_INFO_TYPE</unmanaged-short>	
    internal enum RawInputDeviceInfoType : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDI_PREPARSEDDATA']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDI_PREPARSEDDATA</unmanaged>	
        /// <unmanaged-short>RIDI_PREPARSEDDATA</unmanaged-short>	
        PreparsedData = unchecked((int)536870917),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDI_DEVICENAME']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDI_DEVICENAME</unmanaged>	
        /// <unmanaged-short>RIDI_DEVICENAME</unmanaged-short>	
        DeviceName = unchecked((int)536870919),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RIDI_DEVICEINFO']/*"/>	
        /// <msdn-id>ms645543</msdn-id>	
        /// <unmanaged>RIDI_DEVICEINFO</unmanaged>	
        /// <unmanaged-short>RIDI_DEVICEINFO</unmanaged-short>	
        DeviceInfo = unchecked((int)536870923),			
    }
    
    /// <summary>	
    /// No documentation.	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RAW_SCAN_CODE_FLAGS']/*"/>	
    /// <unmanaged>RAW_SCAN_CODE_FLAGS</unmanaged>	
    /// <unmanaged-short>RAW_SCAN_CODE_FLAGS</unmanaged-short>	
    [Flags]
    public enum ScanCodeFlags : short {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_KEY_MAKE']/*"/>	
        /// <unmanaged>RI_KEY_MAKE</unmanaged>	
        /// <unmanaged-short>RI_KEY_MAKE</unmanaged-short>	
        Make = unchecked((short)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_KEY_BREAK']/*"/>	
        /// <unmanaged>RI_KEY_BREAK</unmanaged>	
        /// <unmanaged-short>RI_KEY_BREAK</unmanaged-short>	
        Break = unchecked((short)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_KEY_E0']/*"/>	
        /// <unmanaged>RI_KEY_E0</unmanaged>	
        /// <unmanaged-short>RI_KEY_E0</unmanaged-short>	
        E0 = unchecked((short)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='RI_KEY_E1']/*"/>	
        /// <unmanaged>RI_KEY_E1</unmanaged>	
        /// <unmanaged-short>RI_KEY_E1</unmanaged-short>	
        E1 = unchecked((short)4),			
    }
}
