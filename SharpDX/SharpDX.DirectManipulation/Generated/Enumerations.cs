// Copyright (c) 2010-2014 SharpDX - Alexandre Mutel
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

//------------------------------------------------------------------------------
// <auto-generated>
//     Types declaration for SharpDX.DirectManipulation namespace.
//     This code was generated by a tool.
//     Date : 6/25/2016 10:38:06 PM
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;
namespace SharpDX.DirectManipulation {

#pragma warning disable 419
#pragma warning disable 1587
#pragma warning disable 1574
    
    /// <summary>	
    /// <p>Determines the type and direction of automatic scrolling animation to apply. </p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION']/*"/>	
    /// <msdn-id>dn280383</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION</unmanaged-short>	
    public enum AutoScrollConfiguration : int {	
        
        /// <summary>	
        /// <dd> <p>If content is scrolling, slowly stop along the direction of the motion.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_STOP']/*"/>	
        /// <msdn-id>dn280383</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_STOP</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_STOP</unmanaged-short>	
        Stop = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Scroll towards the positive boundary of the content.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_FORWARD']/*"/>	
        /// <msdn-id>dn280383</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_FORWARD</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_FORWARD</unmanaged-short>	
        Forward = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Scroll towards the origin of the content.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_REVERSE']/*"/>	
        /// <msdn-id>dn280383</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_REVERSE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_AUTOSCROLL_CONFIGURATION_REVERSE</unmanaged-short>	
        Reverse = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Defines the interaction configuration states available in Direct Manipulation.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION']/*"/>	
    /// <msdn-id>hh446956</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION</unmanaged-short>	
    public enum Configuration : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_NONE']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_NONE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_INTERACTION']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_INTERACTION</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_INTERACTION</unmanaged-short>	
        Interaction = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_X']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_X</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_X</unmanaged-short>	
        TranslationX = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_Y']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_Y</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_Y</unmanaged-short>	
        TranslationY = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_SCALING']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_SCALING</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_SCALING</unmanaged-short>	
        Scaling = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_INERTIA']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_INERTIA</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_TRANSLATION_INERTIA</unmanaged-short>	
        TranslationInertia = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_SCALING_INERTIA']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_SCALING_INERTIA</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_SCALING_INERTIA</unmanaged-short>	
        ScalingInertia = unchecked((int)128),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_RAILS_X']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_RAILS_X</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_RAILS_X</unmanaged-short>	
        RailsX = unchecked((int)256),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_CONFIGURATION_RAILS_Y']/*"/>	
        /// <msdn-id>hh446956</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_CONFIGURATION_RAILS_Y</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_CONFIGURATION_RAILS_Y</unmanaged-short>	
        RailsY = unchecked((int)512),			
    }
    
    /// <summary>	
    /// <p>Defines behaviors for the drag-drop interaction.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION']/*"/>	
    /// <msdn-id>dn280384</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION</unmanaged-short>	
    public enum DragDropConfiguration : int {	
        
        /// <summary>	
        /// <dd> <p>Specifies that vertical movement is applicable to the chosen gesture.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_VERTICAL']/*"/>	
        /// <msdn-id>dn280384</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_VERTICAL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_VERTICAL</unmanaged-short>	
        Vertical = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Specifies that horizontal movement is applicable to the chosen gesture.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_HORIZONTAL']/*"/>	
        /// <msdn-id>dn280384</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_HORIZONTAL</unmanaged-short>	
        Horizontal = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Specifies that the gesture is to be cross-slide only.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_SELECT_ONLY']/*"/>	
        /// <msdn-id>dn280384</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_SELECT_ONLY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_SELECT_ONLY</unmanaged-short>	
        SelectOnly = unchecked((int)16),			
        
        /// <summary>	
        /// <dd> <p>Specifies that the gesture is a drag initiated by cross-slide.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_SELECT_DRAG']/*"/>	
        /// <msdn-id>dn280384</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_SELECT_DRAG</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_SELECT_DRAG</unmanaged-short>	
        SelectDrag = unchecked((int)32),			
        
        /// <summary>	
        /// <dd> <p>Specifies that the gesture a drag initiated by press-and-hold.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_HOLD_DRAG']/*"/>	
        /// <msdn-id>dn280384</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_HOLD_DRAG</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CONFIGURATION_HOLD_DRAG</unmanaged-short>	
        HoldDrag = unchecked((int)64),			
    }
    
    /// <summary>	
    /// <p>Defines the drag-and-drop interaction states for the viewport.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>For each interaction, the status always starts at <strong><see cref="SharpDX.DirectManipulation.DragDropStatus.Ready"/></strong> and ends at either <strong><see cref="SharpDX.DirectManipulation.DragDropStatus.Cancelled"/></strong> or <strong><see cref="SharpDX.DirectManipulation.DragDropStatus.Committed"/></strong>. There are no explicit callbacks for the transition from CANCELLED/COMMITTED to READY.	
    /// </p><p>The meaning of the CANCELLED and COMMITED values depend on the previous status.</p><ul> <li>For <strong><see cref="SharpDX.DirectManipulation.DragDropStatus.Preselect"/></strong>, they mean the same thing: the content goes back to the original location and no other actions should be taken.</li> <li>FOR <strong><see cref="SharpDX.DirectManipulation.DragDropStatus.Selecting"/></strong>, COMMITED means apply the selection change; CANCELLED means avoid the selection change.</li> <li>For <strong><see cref="SharpDX.DirectManipulation.DragDropStatus.Dragging"/></strong>, COMMITED means perform the drop action; CANCELLED means cancel the drop action.</li> </ul>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_STATUS']/*"/>	
    /// <msdn-id>dn280385</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_STATUS</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_STATUS</unmanaged-short>	
    public enum DragDropStatus : int {	
        
        /// <summary>	
        /// <dd> <p>The viewport is at rest and ready for input.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_READY']/*"/>	
        /// <msdn-id>dn280385</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_READY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_READY</unmanaged-short>	
        Ready = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>The viewport is updating its content and the content is not selected.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_PRESELECT']/*"/>	
        /// <msdn-id>dn280385</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_PRESELECT</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_PRESELECT</unmanaged-short>	
        Preselect = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>The viewport is updating its content and the content is selected.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_SELECTING']/*"/>	
        /// <msdn-id>dn280385</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_SELECTING</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_SELECTING</unmanaged-short>	
        Selecting = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>The viewport is updating its content and the content is being dragged.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_DRAGGING']/*"/>	
        /// <msdn-id>dn280385</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_DRAGGING</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_DRAGGING</unmanaged-short>	
        Dragging = unchecked((int)3),			
        
        /// <summary>	
        /// <dd> <p>The viewport has concluded the interaction and requests a revert.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_CANCELLED']/*"/>	
        /// <msdn-id>dn280385</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_CANCELLED</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_CANCELLED</unmanaged-short>	
        Cancelled = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>The viewport has concluded the interaction and requests a commit.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DRAG_DROP_COMMITTED']/*"/>	
        /// <msdn-id>dn280385</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DRAG_DROP_COMMITTED</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DRAG_DROP_COMMITTED</unmanaged-short>	
        Committed = unchecked((int)5),			
    }
    
    /// <summary>	
    /// <p>Defines the gestures that can be passed to <strong>SetManualGesture</strong>.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>By default, Direct Manipulation always reassigns tap and press-and-hold gestures to the application. 	
    /// </p><p>Use <strong><see cref="SharpDX.DirectManipulation.GestureConfiguration.PinchZoom"/></strong> to zoom instead of scale.	
    /// </p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_GESTURE_CONFIGURATION']/*"/>	
    /// <msdn-id>jj647928</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_GESTURE_CONFIGURATION</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_GESTURE_CONFIGURATION</unmanaged-short>	
    public enum GestureConfiguration : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_GESTURE_NONE']/*"/>	
        /// <msdn-id>jj647928</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_GESTURE_NONE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_GESTURE_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_GESTURE_DEFAULT']/*"/>	
        /// <msdn-id>jj647928</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_GESTURE_DEFAULT</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_GESTURE_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_GESTURE_CROSS_SLIDE_VERTICAL']/*"/>	
        /// <msdn-id>jj647928</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_GESTURE_CROSS_SLIDE_VERTICAL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_GESTURE_CROSS_SLIDE_VERTICAL</unmanaged-short>	
        CrossSlideVertical = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_GESTURE_CROSS_SLIDE_HORIZONTAL']/*"/>	
        /// <msdn-id>jj647928</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_GESTURE_CROSS_SLIDE_HORIZONTAL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_GESTURE_CROSS_SLIDE_HORIZONTAL</unmanaged-short>	
        CrossSlideHorizontal = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_GESTURE_PINCH_ZOOM']/*"/>	
        /// <msdn-id>jj647928</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_GESTURE_PINCH_ZOOM</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_GESTURE_PINCH_ZOOM</unmanaged-short>	
        PinchZoom = unchecked((int)32),			
    }
    
    /// <summary>	
    /// <p>Defines how hit testing is handled by Direct Manipulation when using a dedicated hit-test thread registered through <strong>RegisterHitTestTarget</strong>.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HITTEST_TYPE']/*"/>	
    /// <msdn-id>Hh768894</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_HITTEST_TYPE</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_HITTEST_TYPE</unmanaged-short>	
    public enum HitTestType : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HITTEST_TYPE_ASYNCHRONOUS']/*"/>	
        /// <msdn-id>Hh768894</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HITTEST_TYPE_ASYNCHRONOUS</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HITTEST_TYPE_ASYNCHRONOUS</unmanaged-short>	
        Asynchronous = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HITTEST_TYPE_SYNCHRONOUS']/*"/>	
        /// <msdn-id>Hh768894</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HITTEST_TYPE_SYNCHRONOUS</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HITTEST_TYPE_SYNCHRONOUS</unmanaged-short>	
        Synchronous = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HITTEST_TYPE_AUTO_SYNCHRONOUS']/*"/>	
        /// <msdn-id>Hh768894</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HITTEST_TYPE_AUTO_SYNCHRONOUS</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HITTEST_TYPE_AUTO_SYNCHRONOUS</unmanaged-short>	
        AutoSynchronous = unchecked((int)2),			
    }
    
    /// <summary>	
    /// <p>Defines the horizontal alignment options for content within a viewport.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HORIZONTALALIGNMENT']/*"/>	
    /// <msdn-id>hh446957</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_HORIZONTALALIGNMENT</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_HORIZONTALALIGNMENT</unmanaged-short>	
    public enum HorizontalAlignment : int {	
        
        /// <summary>	
        /// <dd> <p>No alignment. The object can be positioned anywhere within the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HORIZONTALALIGNMENT_NONE']/*"/>	
        /// <msdn-id>hh446957</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HORIZONTALALIGNMENT_NONE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HORIZONTALALIGNMENT_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Align object along the left side of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HORIZONTALALIGNMENT_LEFT']/*"/>	
        /// <msdn-id>hh446957</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HORIZONTALALIGNMENT_LEFT</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HORIZONTALALIGNMENT_LEFT</unmanaged-short>	
        Left = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Align object to the center of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HORIZONTALALIGNMENT_CENTER']/*"/>	
        /// <msdn-id>hh446957</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HORIZONTALALIGNMENT_CENTER</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HORIZONTALALIGNMENT_CENTER</unmanaged-short>	
        Center = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Align object along the right side of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HORIZONTALALIGNMENT_RIGHT']/*"/>	
        /// <msdn-id>hh446957</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HORIZONTALALIGNMENT_RIGHT</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HORIZONTALALIGNMENT_RIGHT</unmanaged-short>	
        Right = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Content zooms around the center point of the contacts, instead of being locked with the horizontal alignment.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_HORIZONTALALIGNMENT_UNLOCKCENTER']/*"/>	
        /// <msdn-id>hh446957</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_HORIZONTALALIGNMENT_UNLOCKCENTER</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_HORIZONTALALIGNMENT_UNLOCKCENTER</unmanaged-short>	
        UnlockCenter = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>Defines the threading behavior for <strong>SetInputMode</strong> or <strong>SetUpdateMode</strong>. The exact meaning of each constant depends on the method called.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INPUT_MODE']/*"/>	
    /// <msdn-id>hh446958</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_INPUT_MODE</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_INPUT_MODE</unmanaged-short>	
    public enum InputMode : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INPUT_MODE_AUTOMATIC']/*"/>	
        /// <msdn-id>hh446958</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INPUT_MODE_AUTOMATIC</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INPUT_MODE_AUTOMATIC</unmanaged-short>	
        Automatic = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INPUT_MODE_MANUAL']/*"/>	
        /// <msdn-id>hh446958</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INPUT_MODE_MANUAL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INPUT_MODE_MANUAL</unmanaged-short>	
        Manual = unchecked((int)1),			
    }
    
    /// <summary>	
    /// <p>Defines gestures recognized by Direct Manipulation.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_TYPE']/*"/>	
    /// <msdn-id>dn280386</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_INTERACTION_TYPE</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_TYPE</unmanaged-short>	
    public enum InteractionType : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_BEGIN']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_BEGIN</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_BEGIN</unmanaged-short>	
        Begin = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_TYPE_MANIPULATION']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_TYPE_MANIPULATION</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_TYPE_MANIPULATION</unmanaged-short>	
        TypeManipulation = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_TAP']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_TAP</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_TAP</unmanaged-short>	
        TypeGestureTap = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_HOLD']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_HOLD</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_HOLD</unmanaged-short>	
        TypeGestureHold = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_CROSS_SLIDE']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_CROSS_SLIDE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_CROSS_SLIDE</unmanaged-short>	
        TypeGestureCrossSlide = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_PINCH_ZOOM']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_PINCH_ZOOM</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_TYPE_GESTURE_PINCH_ZOOM</unmanaged-short>	
        TypeGesturePinchZoom = unchecked((int)5),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INTERACTION_END']/*"/>	
        /// <msdn-id>dn280386</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INTERACTION_END</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INTERACTION_END</unmanaged-short>	
        End = unchecked((int)100),			
    }
    
    /// <summary>	
    /// <p> Defines the Direct Manipulation motion type.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_TYPES']/*"/>	
    /// <msdn-id>hh446960</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_MOTION_TYPES</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_MOTION_TYPES</unmanaged-short>	
    public enum MotionTypes : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_NONE']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_NONE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_TRANSLATEX']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_TRANSLATEX</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_TRANSLATEX</unmanaged-short>	
        Translatex = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_TRANSLATEY']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_TRANSLATEY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_TRANSLATEY</unmanaged-short>	
        Translatey = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_ZOOM']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_ZOOM</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_ZOOM</unmanaged-short>	
        Zoom = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_CENTERX']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_CENTERX</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_CENTERX</unmanaged-short>	
        Centerx = unchecked((int)16),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_CENTERY']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_CENTERY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_CENTERY</unmanaged-short>	
        Centery = unchecked((int)32),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_MOTION_ALL']/*"/>	
        /// <msdn-id>hh446960</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_MOTION_ALL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_MOTION_ALL</unmanaged-short>	
        All = unchecked((int)55),			
    }
    
    /// <summary>	
    /// <p>Defines the coordinate system for a collection of snap points.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>If <strong><see cref="SharpDX.DirectManipulation.SnapPointCoordinate.CoordinateOrigin"/></strong> and <strong><see cref="SharpDX.DirectManipulation.SnapPointCoordinate.CoordinateMirrorEd"/></strong> are both specified, the snap points are interpreted as specified from the bottom and right boundaries of the content (the size of the content - the size of the viewport). This is intended for RTL reading scenarios where content is normally specified and rendered from right-to-left or bottom-to-top.</p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SNAPPOINT_COORDINATE']/*"/>	
    /// <msdn-id>Hh768895</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_SNAPPOINT_COORDINATE</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_SNAPPOINT_COORDINATE</unmanaged-short>	
    public enum SnapPointCoordinate : int {	
        
        /// <summary>	
        /// <dd> <p>Default. </p> <p>Snap points are specified relative to the top and left boundaries of the content unless <strong><see cref="SharpDX.DirectManipulation.SnapPointCoordinate.CoordinateMirrorEd"/></strong> is also specified, in which case they are relative to the bottom and right boundaries of the content. For zoom, the boundary is 1.0f.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_COORDINATE_BOUNDARY']/*"/>	
        /// <msdn-id>Hh768895</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_COORDINATE_BOUNDARY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_COORDINATE_BOUNDARY</unmanaged-short>	
        CoordinateBoundary = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Snap points are specified relative to the origin of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_COORDINATE_ORIGIN']/*"/>	
        /// <msdn-id>Hh768895</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_COORDINATE_ORIGIN</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_COORDINATE_ORIGIN</unmanaged-short>	
        CoordinateOrigin = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Snap points are interpreted as specified in the negative direction of the origin. The origin is shifted to the bottom and right of the viewport or content. Cannot be set for zoom.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_COORDINATE_MIRRORED']/*"/>	
        /// <msdn-id>Hh768895</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_COORDINATE_MIRRORED</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_COORDINATE_MIRRORED</unmanaged-short>	
        CoordinateMirrorEd = unchecked((int)16),			
    }
    
    /// <summary>	
    /// <p>Modifies how the final inertia end position is calculated.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p>For <strong><see cref="SharpDX.DirectManipulation.SnapPointType.Mandatory"/></strong> or <strong><see cref="SharpDX.DirectManipulation.SnapPointType.Optional"/></strong> snap points, the snap points are chosen based on the natural ending position of inertia as calculated by the touch interaction engine. For <strong><see cref="SharpDX.DirectManipulation.SnapPointType.MandatorySingle"/></strong> or <strong><see cref="SharpDX.DirectManipulation.SnapPointType.OptionalSingle"/></strong> snap points, the selected snap point depends on where inertia started.</p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SNAPPOINT_TYPE']/*"/>	
    /// <msdn-id>Hh768896</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_SNAPPOINT_TYPE</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_SNAPPOINT_TYPE</unmanaged-short>	
    public enum SnapPointType : int {	
        
        /// <summary>	
        /// <dd> <p>Content always stops at the snap point closest to where inertia would naturally stop along the direction of inertia.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SNAPPOINT_MANDATORY']/*"/>	
        /// <msdn-id>Hh768896</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_SNAPPOINT_MANDATORY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_SNAPPOINT_MANDATORY</unmanaged-short>	
        Mandatory = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Content stops at a snap point closest to where inertia would naturally stop along the direction of inertia, depending on how close the snap point is. </p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SNAPPOINT_OPTIONAL']/*"/>	
        /// <msdn-id>Hh768896</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_SNAPPOINT_OPTIONAL</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_SNAPPOINT_OPTIONAL</unmanaged-short>	
        Optional = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Content always stops at the snap point closest to the release point along the direction of inertia.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SNAPPOINT_MANDATORY_SINGLE']/*"/>	
        /// <msdn-id>Hh768896</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_SNAPPOINT_MANDATORY_SINGLE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_SNAPPOINT_MANDATORY_SINGLE</unmanaged-short>	
        MandatorySingle = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Content stops at the next snap point, if the motion starts far from it.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SNAPPOINT_OPTIONAL_SINGLE']/*"/>	
        /// <msdn-id>Hh768896</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_SNAPPOINT_OPTIONAL_SINGLE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_SNAPPOINT_OPTIONAL_SINGLE</unmanaged-short>	
        OptionalSingle = unchecked((int)3),			
    }
    
    /// <summary>	
    /// <p>Defines the possible states of Direct Manipulation. The viewport can process input in any state unless otherwise noted.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_STATUS']/*"/>	
    /// <msdn-id>hh446962</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_STATUS</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_STATUS</unmanaged-short>	
    public enum Status : int {	
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_BUILDING']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_BUILDING</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_BUILDING</unmanaged-short>	
        Building = unchecked((int)0),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_ENABLED']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_ENABLED</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_ENABLED</unmanaged-short>	
        Enabled = unchecked((int)1),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_DISABLED']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_DISABLED</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_DISABLED</unmanaged-short>	
        Disabled = unchecked((int)2),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_RUNNING']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_RUNNING</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_RUNNING</unmanaged-short>	
        Running = unchecked((int)3),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_INERTIA']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_INERTIA</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_INERTIA</unmanaged-short>	
        Inertia = unchecked((int)4),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_READY']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_READY</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_READY</unmanaged-short>	
        Ready = unchecked((int)5),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_SUSPENDED']/*"/>	
        /// <msdn-id>hh446962</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_SUSPENDED</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_SUSPENDED</unmanaged-short>	
        Suspended = unchecked((int)6),			
    }
    
    /// <summary>	
    /// <p>Defines  the vertical alignment settings for content within the viewport.</p>	
    /// </summary>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VERTICALALIGNMENT']/*"/>	
    /// <msdn-id>hh446964</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_VERTICALALIGNMENT</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_VERTICALALIGNMENT</unmanaged-short>	
    public enum VerticalAlignment : int {	
        
        /// <summary>	
        /// <dd> <p>No alignment. The object can be positioned anywhere within the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VERTICALALIGNMENT_NONE']/*"/>	
        /// <msdn-id>hh446964</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VERTICALALIGNMENT_NONE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VERTICALALIGNMENT_NONE</unmanaged-short>	
        None = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>Align object along the top of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VERTICALALIGNMENT_TOP']/*"/>	
        /// <msdn-id>hh446964</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VERTICALALIGNMENT_TOP</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VERTICALALIGNMENT_TOP</unmanaged-short>	
        Top = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p>Align object to the center of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VERTICALALIGNMENT_CENTER']/*"/>	
        /// <msdn-id>hh446964</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VERTICALALIGNMENT_CENTER</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VERTICALALIGNMENT_CENTER</unmanaged-short>	
        Center = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>Align object along the bottom of the viewport.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VERTICALALIGNMENT_BOTTOM']/*"/>	
        /// <msdn-id>hh446964</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VERTICALALIGNMENT_BOTTOM</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VERTICALALIGNMENT_BOTTOM</unmanaged-short>	
        Bottom = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>Content zooms around the center point of the contacts, instead of being locked with the vertical alignment.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VERTICALALIGNMENT_UNLOCKCENTER']/*"/>	
        /// <msdn-id>hh446964</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VERTICALALIGNMENT_UNLOCKCENTER</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VERTICALALIGNMENT_UNLOCKCENTER</unmanaged-short>	
        UnlockCenter = unchecked((int)8),			
    }
    
    /// <summary>	
    /// <p>Defines the input behavior options for the viewport.</p>	
    /// </summary>	
    /// <remarks>	
    /// <p><strong><see cref="SharpDX.DirectManipulation.ViewportOptions"/></strong> is used in the <strong>SetViewportOptions</strong> method. These flags can be combined to set the input behavior for a viewport.</p>	
    /// </remarks>	
    /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS']/*"/>	
    /// <msdn-id>jj647929</msdn-id>	
    /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS</unmanaged>	
    /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS</unmanaged-short>	
    public enum ViewportOptions : int {	
        
        /// <summary>	
        /// <dd> <p>No special behaviors. This is the default value used to set or revert to default behavior.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS_DEFAULT']/*"/>	
        /// <msdn-id>jj647929</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS_DEFAULT</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS_DEFAULT</unmanaged-short>	
        Default = unchecked((int)0),			
        
        /// <summary>	
        /// <dd> <p>At the end of an interaction, the viewport transitions to <strong><see cref="SharpDX.DirectManipulation.Status.Ready"/></strong> and then immediately to <strong><see cref="SharpDX.DirectManipulation.Status.Disabled"/></strong>. The viewport must be explicitly enabled through the <strong>Enable</strong> method before the next interaction can be processed.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS_AUTODISABLE']/*"/>	
        /// <msdn-id>jj647929</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS_AUTODISABLE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS_AUTODISABLE</unmanaged-short>	
        AutoDisable = unchecked((int)1),			
        
        /// <summary>	
        /// <dd> <p> <strong>Update</strong> must be called to redraw the content within the viewport. The content is not updated automatically during an input event.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS_MANUALUPDATE']/*"/>	
        /// <msdn-id>jj647929</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS_MANUALUPDATE</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS_MANUALUPDATE</unmanaged-short>	
        ManualUpdate = unchecked((int)2),			
        
        /// <summary>	
        /// <dd> <p>All input from a contact associated with the viewport is passed to the UI thread for processing.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS_INPUT']/*"/>	
        /// <msdn-id>jj647929</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS_INPUT</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS_INPUT</unmanaged-short>	
        Input = unchecked((int)4),			
        
        /// <summary>	
        /// <dd> <p>If set, all <strong>WM_POINTERDOWN</strong> messages are passed to the application for hit testing. Otherwise, Direct Manipulation will process the messages for hit testing against the existing list of running viewports, and the application will not see the input.</p> <p>Applies only when viewport state is <strong><see cref="SharpDX.DirectManipulation.Status.Running"/></strong> or <strong><see cref="SharpDX.DirectManipulation.Status.Inertia"/></strong>.</p> </dd>	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS_EXPLICITHITTEST']/*"/>	
        /// <msdn-id>jj647929</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS_EXPLICITHITTEST</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS_EXPLICITHITTEST</unmanaged-short>	
        ExplicitHitTest = unchecked((int)8),			
        
        /// <summary>	
        /// No documentation.	
        /// </summary>	
        /// <include file='.\..\Documentation\CodeComments.xml' path="/comments/comment[@id='DIRECTMANIPULATION_VIEWPORT_OPTIONS_DISABLEPIXELSNAPPING']/*"/>	
        /// <msdn-id>jj647929</msdn-id>	
        /// <unmanaged>DIRECTMANIPULATION_VIEWPORT_OPTIONS_DISABLEPIXELSNAPPING</unmanaged>	
        /// <unmanaged-short>DIRECTMANIPULATION_VIEWPORT_OPTIONS_DISABLEPIXELSNAPPING</unmanaged-short>	
        Disablepixelsnapping = unchecked((int)16),			
    }
}
